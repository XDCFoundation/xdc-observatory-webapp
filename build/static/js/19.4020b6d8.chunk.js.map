{"version":3,"sources":["modules/token/tokenContractTab.js","modules/address/transactionTable.js","modules/address/tokenUnverifiedContract.js","modules/address/AddressDetailsData.js","modules/common/pageSelector.js","services/contract.js","services/address.js","modules/contractMethods/read.js","modules/contractMethods/write.js","modules/explorer/web3/web3Dialog.js"],"names":["styled","button","active","div","TokenContracttab","props","style","borderRadius","boxShadow","elevation","ContractDetails","verifiedData","contractData","useState","copiedText","setCopiedText","className","color","fontSize","alignItems","src","contractName","compilerVersion","optimization","toString","display","flexDirection","text","sourceCode","onCopy","title","placement","backgroundColor","borderLeftWidth","borderLeftColor","outline","paddingLeft","readOnly","value","abi","byteCode","TransactionTableComponent","state","shorten","b","amountL","stars","slice","repeat","length","addr","useParams","addressNumber","React","parseInt","from","setFrom","amount","setAmount","address","setAddress","ContractAddress","setContractAddress","keywords","downloadaddress","setDownloadaddress","isDownloadActive","setDownloadActive","visibleCount","setVisibleCount","noData","setNoData","totalRecord","setTotalRecord","isLoading","setLoading","datas","useStyles","makeStyles","container","borderBottom","background","getContractDetails","values","a","Utility","parseResponse","AddressData","getAddressDetailWithlimit","responseData","transactionSortByValue","sort","Number","console","error","getTransactionsCountForAddress","data","handleChangePage","action","pageNum","perpage","addrr","pagecount","Math","ceil","handleChanged","event","target","name","checked","tempAddress","map","isChecked","filter","d","Txn_Hash","hash","Date","moment","timestamp","format","Block","blockNumber","From","To","to","Value","decimalDivison","_id","tempAddr","useEffect","classes","NoDataFoundContainer","useHistory","hashTT","setHashTT","ageTT","setageTT","blockTT","setblockTT","fromTT","setfromTT","toTT","settoTT","valueTT","setvalueTT","gasTT","setgasTT","filename","Grid","lg","Paper","TableContainer","id","Table","TableHead","TableRow","TableCell","border","align","onChange","type","marginRight","Tooltip","open","onOpen","onClose","messages","HASH","onClick","alt","height","AGE","BLOCK","FROM","TO","VALUE","GAS","TableBody","colspan","row","index","currentTime","previousTime","TimeAge","timeDiff","margin-left","key","href","convertToInternationalCurrencySystem","gasUsed","marginTop","justifyContent","handler","xs","item","marginLeft","TokenUnverifiedContract","unverifiedData","history","push","class","aria-hidden","rootUI","minWidth","maxWidth","table","wantToLoginText","fontWeight","fontFamily","TabContainer","TabContainerParent","AddressDetailsData","toggleState","setToggleState","toggleTab","balance","transactionCout","creator","transaction","currencySymbol","val","changedVal","transactionlist","setData","balance1","split","balance2","responses","setResponses","count","setCount","sessionManager","getDataFromCookies","value1","value2","changedValue","changedValue1","changedValue2","ContractData","responseAPI","contractResponse","activeCurrency","window","localStorage","getItem","convertedCurrency","changeVal","xdcValueUSD","toFixed","priceInUSD","xdcValueEUR","priceInEUR","xdcValueINR","priceInINR","transactionCount","owner","creationTransaction","transactionArray","component","padding","aria-label","ReactHtmlParser","contractStatus","PageSelect","Select","PageSelector","displayEmpty","getHeaders","httpConstants","CONTENT_TYPE","APPLICATION_JSON","process","url","httpService","METHOD_TYPE","GET","then","response","success","responseCode","Promise","resolve","reject","catch","err","POST","path","getContractLists","getTotalContractList","getContractSearch","getContractDetailsUsingAddress","sortKey","sortType","requestData","searchValue","txnType","status","getAddressDetail","getFilteredAddressDetailWithLimit","getFiltersForAccountTransaction","getTransactionSearch","getAddressStats","QuestionContainer","isActive","QuestionNameContainer","QuestionName","ArrowImg","img","OutputContainer","MainTitle","Output","Devider","ParentContainer","InputTypeFunctionsContainer","InputName","ParamInput","input","SubmitButton","ErrorText","HighlightedText","HeaderContainer","HeaderItemsContainer","ContractRead","readResponses","readFunctions","contractAddress","loading","isExpand","setState","contractInfo","JSON","parse","stringify","readFunction","stateMutability","contractMethodTypes","view","params","getFunctionParams","replace","functionDetail","paramKeys","inputs","handleFunctionClick","haveInputs","hasParams","method","web3","Web3","contract","eth","Contract","methods","call","handleExpandAllClick","gap","size","handleCollpaseClick","handleResetClick","FunctionContainer","InputTypeFunctions","itemIndex","handleSubmit","OutPutComponent","setParams","setError","idx","placeholder","includes","param","handleParamsInput","requiredInpuIndex","Object","findIndex","String","request","element","keys","find","Boolean","checkNumberType","handleInputSubmit","disabled","number","outputs","it","join","hr","ActiveDot","Connected","ConnectToWalletButton","ContractWriteMethods","writeFunctions","accountAddress","setWalletInfo","writeFunction","alert","currentProvider","send","log","handleWeb3ConnectClick","ethereum","enable","net","getId","chainId","getAccounts","accounts","utility","shortenHash","setWeb3DialogOpen","connectToWalletMessage","trim","TransactionResponse","ResponseTableContainer","ResponseTableRow","td","isSpace","transactionHash","theme","add","width","closeContainer","top","position","right","cursor","close","addbtn","margin","userContainer","passwordContainer","error1","error2","subCategory","marginBottom","fontfamily","fontsize","fontweight","subCategorySignup","forgotPassword","lineHeight","createaccount","icon","xdc","textAlign","heading","paperWidthSm","paperWidthSm1","termsContainer","flexFlow","iAmNotRobotSignup","checkbox","robotContainer","robotContainer1","robotContainer2","captchaCheckbox","robotText","recaptcha","createAccountbtn","resetPasswordbtn","alreadyAccount","backToSignIn","signIn","fieldName","forgotText","robotContainerForgotPass","zIndex","backgroundImage","opacity","dialogButton","paddingRight","userContainerSignup","paddingBottom","InstructionCard","CardText","ImageContainer","CardTitle","CloseIconContainer","Web3Dialog","setOpen","handleClose","dialog","aria-labelledby","paddingTop"],"mappings":"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","file":"static/js/19.4020b6d8.chunk.js","sourcesContent":["import { Paper } from \"material-ui\";\r\nimport React, { useState } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ReadMethods from \"../contractMethods/read\";\r\nimport WriteMethods from \"../contractMethods/write\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabButton = styled.button`\r\n  border-radius: 5px;\r\n  border: 1px solid #d5dae2;\r\n  background: #fff;\r\n  color: #77838f;\r\n  padding: 0.25rem 0.5rem;\r\n  font-weight: 600;\r\n  margin-right: 8px;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    background: linear-gradient(to bottom, #2149b9, #3e71ff);\r\n    color: #fff;\r\n    border: none;\r\n  `}\r\n`;\r\n\r\nconst TabButtonContainer = styled.div`\r\n  padding: 1.875rem 0 0 1.875rem;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding: 1.875rem 0 0 0.75rem;\r\n  }\r\n`;\r\n\r\nexport default function TokenContracttab(props) {\r\n  // const [activeTab, setActiveTab] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        style={{\r\n          borderRadius: \"14px\",\r\n          boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n        }}\r\n        elevation={0}\r\n      >\r\n        <ContractDetails {...props} />\r\n        {/* <TabButtonContainer>\r\n          <TabButton\r\n            active={activeTab === 0 ? true : false}\r\n            onClick={() => setActiveTab(0)}\r\n          >\r\n            Code\r\n          </TabButton>\r\n          <TabButton\r\n            active={activeTab === 1 ? true : false}\r\n            onClick={() => setActiveTab(1)}\r\n          >\r\n            Read\r\n          </TabButton>\r\n\r\n          <TabButton\r\n            active={activeTab === 2 ? true : false}\r\n            onClick={() => setActiveTab(2)}\r\n          >\r\n            Write\r\n          </TabButton>\r\n        </TabButtonContainer>\r\n\r\n        {activeTab == 0 ? <ContractDetails {...props} /> : \"\"}\r\n        {activeTab == 1 ? (\r\n          <ReadMethods\r\n            contractData={props.contractData ? { ...props.contractData } : {}}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {activeTab == 2 ? (\r\n          <WriteMethods\r\n            contractData={props.contractData ? { ...props.contractData } : {}}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )} */}\r\n        <br />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ContractDetails = (props) => {\r\n  let verifiedData = props?.contractData;\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"contract-source\">\r\n        <span\r\n          style={{ color: \"#03be46\", fontSize: \"14\", alignItems: \"center\" }}\r\n        >\r\n          {\" \"}\r\n          <img\r\n            className=\"verified-logo\"\r\n            src={\"/images/verified.svg\"}\r\n          ></img>{\" \"}\r\n        </span>\r\n        Contract Source Code Verified\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"source-code-verified-container\">\r\n        <div className=\"source-code-first-container\">\r\n          <div className=\"source-code-content\">\r\n            <div className=\"source-code-content-heading\">Contract Name</div>\r\n            <div className=\"source-code-content-value-name\">\r\n              {verifiedData?.contractName}\r\n            </div>\r\n          </div>\r\n          <hr className=\"source-code-line\"></hr>\r\n          <div className=\"source-code-content\">\r\n            <div className=\"source-code-content-heading\">Compiler Version</div>\r\n            <div className=\"source-code-content-value\">\r\n              {verifiedData?.compilerVersion}\r\n            </div>\r\n          </div>\r\n          <hr className=\"source-code-line\"></hr>\r\n          <br />\r\n        </div>\r\n        <div className=\"source-code-first-container\">\r\n          <div className=\"source-code-content\">\r\n            <div className=\"source-code-content-heading\">\r\n              Optimization Enabled\r\n            </div>\r\n            <div className=\"source-code-content-value-optimization\">\r\n              {props?.contractData?.optimization?.toString() === \"false\"\r\n                ? \"No\"\r\n                : \"Yes\"}\r\n            </div>\r\n          </div>\r\n          <hr className=\"source-code-line\"></hr>\r\n          <div className=\"source-code-content\">\r\n            <div className=\"source-code-content-heading\">\r\n              Share On Socialmedia\r\n            </div>\r\n            <div className=\"source-code-content-value\">Not available</div>\r\n          </div>\r\n          <hr className=\"source-code-line\"></hr>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div className=\"contract-source-2\">\r\n          <img className=\"code-logo\" src={\"/images/code.svg\"} /> Contract Source\r\n          Code Verified{\" \"}\r\n        </div>\r\n        <div>\r\n          <CopyToClipboard\r\n            text={verifiedData?.sourceCode}\r\n            onCopy={() => setCopiedText(verifiedData?.sourceCode)}\r\n          >\r\n            <Tooltip\r\n              title={\r\n                copiedText === verifiedData?.sourceCode\r\n                  ? \"Copied\"\r\n                  : \"Copy To Clipboard\"\r\n              }\r\n              placement=\"top\"\r\n            >\r\n              <button\r\n                style={{\r\n                  color: \"blue\",\r\n                  backgroundColor: \"white\",\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <img className=\"copy-icon-svg\" src={\"/images/copy.svg\"} />\r\n              </button>\r\n            </Tooltip>\r\n          </CopyToClipboard>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <textarea\r\n          style={{\r\n            borderLeftWidth: \"6px\",\r\n            borderLeftColor: \"#2149b9\",\r\n            outline: \"none\",\r\n            paddingLeft: \"18px\",\r\n          }}\r\n          readOnly\r\n          className=\"input-area-3\"\r\n          value={verifiedData?.sourceCode}\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div className=\"contract-source-2\">\r\n          <img className=\"code-logo\" src={\"/images/abi.svg\"} />\r\n          Contract ABI\r\n        </div>\r\n        <div>\r\n          <CopyToClipboard\r\n            text={verifiedData?.abi}\r\n            onCopy={() => setCopiedText(verifiedData?.abi)}\r\n          >\r\n            <Tooltip\r\n              title={\r\n                copiedText === verifiedData?.abi\r\n                  ? \"Copied\"\r\n                  : \"Copy To Clipboard\"\r\n              }\r\n              placement=\"top\"\r\n            >\r\n              <button\r\n                style={{\r\n                  color: \"blue\",\r\n                  backgroundColor: \"white\",\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <img className=\"copy-icon-svg\" src={\"/images/copy.svg\"} />\r\n              </button>\r\n            </Tooltip>\r\n          </CopyToClipboard>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <textarea\r\n          value={verifiedData?.abi}\r\n          style={{\r\n            borderLeftWidth: \"6px\",\r\n            borderLeftColor: \"#2149b9\",\r\n            outline: \"none\",\r\n            paddingLeft: \"18px\",\r\n          }}\r\n          readOnly\r\n          className=\"input-area-3\"\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div className=\"contract-source-2\">\r\n          <img className=\"code-logo\" src={\"/images/bytecode.svg\"} />\r\n          Contract Byte-Code\r\n        </div>\r\n        <div>\r\n          <CopyToClipboard\r\n            text={verifiedData?.byteCode}\r\n            onCopy={() => setCopiedText(verifiedData?.byteCode)}\r\n          >\r\n            <Tooltip\r\n              title={\r\n                copiedText === verifiedData?.byteCode\r\n                  ? \"Copied\"\r\n                  : \"Copy To Clipboard\"\r\n              }\r\n              placement=\"top\"\r\n            >\r\n              <button\r\n                style={{\r\n                  color: \"blue\",\r\n                  backgroundColor: \"white\",\r\n                  fontSize: 14,\r\n                }}\r\n              >\r\n                <img className=\"copy-icon-svg\" src={\"/images/copy.svg\"} />\r\n              </button>\r\n            </Tooltip>\r\n          </CopyToClipboard>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <textarea\r\n          value={verifiedData?.byteCode}\r\n          style={{\r\n            borderLeftWidth: \"6px\",\r\n            borderLeftColor: \"#2149b9\",\r\n            outline: \"none\",\r\n          }}\r\n          readOnly\r\n          className=\"input-area-4\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../../src/assets/styles/blocksAndTransactionList.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Grid, TableContainer } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport moment from \"moment\";\r\nimport Utility, { dispatchAction } from \"../../utility\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddressData from \"../../services/address\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Loader from \"../../assets/loader\";\r\nimport styled from \"styled-components\";\r\nimport format from \"format-number\";\r\nimport { messages } from \"../../constants\";\r\nimport PageSelector from \"../common/pageSelector\";\r\n\r\nexport default function TransactionTableComponent(props) {\r\n  const { state } = props;\r\n\r\n  function shorten(b, amountL = 10, amountR = 3, stars = 3) {\r\n    return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\r\n      b.length - 3,\r\n      b.length\r\n    )}`;\r\n  }\r\n  let { addr } = useParams();\r\n  let { addressNumber } = useParams();\r\n  const [from, setFrom] = React.useState(parseInt(0));\r\n  const [amount, setAmount] = React.useState(parseInt(10));\r\n  const [address, setAddress] = useState([]);\r\n  const [ContractAddress, setContractAddress] = useState(addressNumber);\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  const [reportaddress, setReportaddress] = useState([]);\r\n  const [downloadaddress, setDownloadaddress] = useState([]);\r\n  const [isDownloadActive, setDownloadActive] = useState(0);\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n  const [noData, setNoData] = useState(false);\r\n  const [totalRecord, setTotalRecord] = useState(0);\r\n  const [isLoading, setLoading] = useState(true);\r\n  let datas = {};\r\n  const useStyles = makeStyles({\r\n    container: {\r\n      borderRadius: \"14px\",\r\n      boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n      borderBottom: \"none\",\r\n      background: \"#fff\",\r\n    },\r\n  });\r\n  const getContractDetails = async (values) => {\r\n    try {\r\n      const [error, responseData] = await Utility.parseResponse(\r\n        AddressData.getAddressDetailWithlimit(values)\r\n      );\r\n      if (!responseData || responseData.length === 0) {\r\n        setNoData(true);\r\n        setTotalRecord(parseInt(0));\r\n        setAddress([]);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      let transactionSortByValue = responseData.sort((a, b) => {\r\n        return Number(b.value) - Number(a.value);\r\n      });\r\n      setVisibleCount(responseData.length);\r\n      if (transactionSortByValue && transactionSortByValue.length > 0) {\r\n        setAddress(transactionSortByValue);\r\n        setLoading(false);\r\n      } else {\r\n        setNoData(true);\r\n        setTotalRecord(parseInt(0));\r\n        setAddress([]);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getTransactionsCountForAddress = async (data) => {\r\n    try {\r\n      const [error, responseData] = await Utility.parseResponse(\r\n        AddressData.getTransactionsCountForAddress(data)\r\n      );\r\n      if (!responseData) {\r\n        setNoData(true);\r\n      }\r\n      setTotalRecord(parseInt(responseData));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleKeyUp = (event) => {\r\n    let searchkeyword = event.target.value;\r\n    setFrom(parseInt(0));\r\n    if (searchkeyword.length > 2) {\r\n      setKeywords(searchkeyword);\r\n      datas = {\r\n        pageNum: 0,\r\n        perpage: amount,\r\n        keywords: searchkeyword,\r\n        addrr: ContractAddress,\r\n      };\r\n      getContractDetails(datas);\r\n    }\r\n    if (searchkeyword.length == 0) {\r\n      setNoData(false);\r\n      setKeywords(\"\");\r\n      setFrom(parseInt(0));\r\n      datas = {\r\n        pageNum: 0,\r\n        perpage: amount,\r\n        addrr: ContractAddress,\r\n        keywords: \"\",\r\n      };\r\n      getContractDetails(datas);\r\n    }\r\n  };\r\n  const handleChangePage = (action) => {\r\n    if (action == \"first\") {\r\n      setFrom(parseInt(0));\r\n      if (keywords) {\r\n        datas = {\r\n          pageNum: 0,\r\n          perpage: amount,\r\n          addrr: ContractAddress,\r\n          keywords: keywords,\r\n        };\r\n        getContractDetails(datas);\r\n      } else {\r\n        datas = {\r\n          pageNum: 0,\r\n          perpage: amount,\r\n          addrr: ContractAddress,\r\n          keywords: \"\",\r\n        };\r\n        getContractDetails(datas);\r\n      }\r\n    }\r\n    if (action === \"last\") {\r\n      let pagecount = (Math.ceil(parseInt(totalRecord) / parseInt(amount))-1) * amount;\r\n      setFrom(parseInt(pagecount));\r\n      if (keywords) {\r\n        datas = {\r\n          pageNum: pagecount,\r\n          perpage: amount,\r\n          addrr: ContractAddress,\r\n          keywords: keywords,\r\n        };\r\n        getContractDetails(datas);\r\n      } else {\r\n        datas = {\r\n          pageNum: pagecount,\r\n          perpage: amount,\r\n          addrr: ContractAddress,\r\n          keywords: keywords,\r\n        };\r\n        getContractDetails(datas);\r\n      }\r\n    }\r\n\r\n    if (action === \"next\") {\r\n      if (+amount + +from < totalRecord) {\r\n        let pagecount = +amount + +from;\r\n        setFrom(parseInt(pagecount));\r\n        if (keywords) {\r\n          datas = {\r\n            pageNum: pagecount,\r\n            perpage: amount,\r\n            addrr: ContractAddress,\r\n            keywords: keywords,\r\n          };\r\n          getContractDetails(datas);\r\n        } else {\r\n          let datas = {\r\n            pageNum: pagecount,\r\n            perpage: amount,\r\n            addrr: ContractAddress,\r\n            keywords: keywords,\r\n          };\r\n\r\n          getContractDetails(datas);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (action === \"prev\") {\r\n      if (+from - +amount >= 0) {\r\n        let pagecount = +from - +amount;\r\n        setFrom(parseInt(pagecount));\r\n        if (keywords) {\r\n          datas = {\r\n            pageNum: pagecount,\r\n            perpage: amount,\r\n            addrr: ContractAddress,\r\n            keywords: keywords,\r\n          };\r\n          getContractDetails(datas);\r\n        } else {\r\n          datas = {\r\n            pageNum: pagecount,\r\n            perpage: amount,\r\n            addrr: ContractAddress,\r\n            keywords: keywords,\r\n          };\r\n          getContractDetails(datas);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setAmount(parseInt(event.target.value));\r\n    setFrom(parseInt(0));\r\n    datas = {\r\n      pageNum: 0,\r\n      perpage: event.target.value,\r\n      addrr: ContractAddress,\r\n      keywords: keywords,\r\n    };\r\n    getContractDetails(datas);\r\n  };\r\n\r\n  const handleChanged = (event) => {\r\n    const { name, checked } = event.target;\r\n    if (name === \"allselect\") {\r\n      let tempAddress = address.map((addr) => {\r\n        return { ...addr, isChecked: checked };\r\n      });\r\n      setAddress(tempAddress);\r\n      let tempAddr = tempAddress.filter((addr) => {\r\n        if (addr.isChecked === true) {\r\n          return addr;\r\n        }\r\n      });\r\n      if (tempAddr.length > 0) {\r\n        setDownloadActive(1);\r\n      } else {\r\n        setDownloadActive(0);\r\n      }\r\n\r\n      setDownloadaddress(\r\n        tempAddress.map((d) => {\r\n          return {\r\n            Txn_Hash: d.hash,\r\n            Date: moment(d.timestamp * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\r\n            Block: d.blockNumber,\r\n            From: d.from,\r\n            To: d.to,\r\n            Value: Utility.decimalDivison(d.Value, 18),\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      let tempAddress = address.map((addr) =>\r\n        addr._id === name ? { ...addr, isChecked: checked } : addr\r\n      );\r\n      setAddress(tempAddress);\r\n      let tempAddr = tempAddress.filter((addr) => {\r\n        if (addr.isChecked === true) {\r\n          return addr;\r\n        }\r\n      });\r\n      if (tempAddr.length > 0) {\r\n        setDownloadActive(1);\r\n      } else {\r\n        setDownloadActive(0);\r\n      }\r\n      setDownloadaddress(\r\n        tempAddr.map((d) => {\r\n          return {\r\n            Txn_Hash: d.hash,\r\n            Date: moment(d.timestamp * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\r\n            Block: d.blockNumber,\r\n            From: d.from,\r\n            To: d.to,\r\n            Value: Utility.decimalDivison(d.Value, 18),\r\n          };\r\n        })\r\n      );\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    setContractAddress(addressNumber);\r\n    let values = {\r\n      addrr: ContractAddress,\r\n      pageNum: from,\r\n      perpage: amount,\r\n      keywords: keywords,\r\n    };\r\n    getContractDetails(values);\r\n    let data = {\r\n      address: ContractAddress,\r\n    };\r\n    getTransactionsCountForAddress(data);\r\n    setLoading(false);\r\n  }, []);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const NoDataFoundContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    color: #c6cbcf;\r\n    margin: 100px 0 !important;\r\n\r\n    //@media (min-width: 767px) {\r\n    //  margin: 100px 0 !important;\r\n    //}\r\n  `;\r\n\r\n  //tooltip states\r\n  const [hashTT, setHashTT] = React.useState(false);\r\n  const [ageTT, setageTT] = React.useState(false);\r\n  const [blockTT, setblockTT] = React.useState(false);\r\n  const [fromTT, setfromTT] = React.useState(false);\r\n  const [toTT, settoTT] = React.useState(false);\r\n  const [valueTT, setvalueTT] = React.useState(false);\r\n  const [gasTT, setgasTT] = React.useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"content_input_all cont-tab-contract\">\r\n        <div className=\"searchelement-input4 search-btn\">\r\n          {/* <img\r\n            style={{ width: 18, height: 18, marginRight: 5, marginTop: 3 }}\r\n            src={\"/images/Search.svg\"}\r\n          />\r\n          } <input\r\n            onKeyUp={(event) => props._handleSearch(event)}\r\n            className=\"account-searchbar\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onKeyUp={handleKeyUp}\r\n  />*/}\r\n        </div>\r\n        {noData == false ? (\r\n          <div className=\"csvDownloadParent\">\r\n            {isDownloadActive ? (\r\n              <div className=\"csv\">\r\n                <img src={\"/images/rectangle-copy.svg\"} />{\" \"}\r\n                <CSVLink\r\n                  className=\"ActiveDownload\"\r\n                  filename={\"transactions.csv\"}\r\n                  data={downloadaddress}\r\n                >\r\n                  Download CSV\r\n                </CSVLink>\r\n              </div>\r\n            ) : (\r\n              <div className=\"csv-inactive\">\r\n                <img src={\"/images/rectangle-copy.svg\"} />{\" \"}\r\n                <CSVLink\r\n                  className=\"InactiveDownload\"\r\n                  filename={\"transactions.csv\"}\r\n                  data={downloadaddress}\r\n                >\r\n                  Download CSV\r\n                </CSVLink>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <Grid lg={13} className=\"tablegrid_address\">\r\n        <Paper\r\n          style={{ borderRadius: \"14px\" }}\r\n          elevation={0}\r\n          className=\"table-paper-contract\"\r\n        >\r\n          <TableContainer\r\n            className={classes.container}\r\n            id=\"container-table table-cont\"\r\n          >\r\n            <Table className=\"table-trans-contract\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell\r\n                    className=\"w-31 w-850\"\r\n                    style={{ border: \"none\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    {noData == false && (\r\n                      <input\r\n                        onChange={handleChanged}\r\n                        type=\"checkbox\"\r\n                        name=\"allselect\"\r\n                        checked={\r\n                          address.filter((addr) => addr?.isChecked == true)\r\n                            .length == address.length\r\n                        }\r\n                        style={{ marginRight: \"8px\" }}\r\n                      />\r\n                    )}\r\n                    <span className={\"tableheaders table-hash\"}>\r\n                      Transaction Hash\r\n                      <Tooltip\r\n                        open={hashTT}\r\n                        onOpen={() => setHashTT(true)}\r\n                        onClose={() => setHashTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.HASH}\r\n                      >\r\n                        <img\r\n                          onClick={() => setHashTT(!hashTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className=\"w-16 w-19\"\r\n                    style={{ border: \"none\", paddingLeft: \"1.8%\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={\"tableheaders table-age\"}>\r\n                      Age\r\n                      <Tooltip\r\n                        open={ageTT}\r\n                        onOpen={() => setageTT(true)}\r\n                        onClose={() => setageTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.AGE}\r\n                      >\r\n                        <img\r\n                          onClick={() => setageTT(!ageTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className=\"w-450 w-19\"\r\n                    style={{ border: \"none\", paddingLeft: \"1.8%\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={\"tableheaders table-block\"}>\r\n                      Block\r\n                      <Tooltip\r\n                        open={blockTT}\r\n                        onOpen={() => setblockTT(true)}\r\n                        onClose={() => setblockTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.BLOCK}\r\n                      >\r\n                        <img\r\n                          onClick={() => setblockTT(!blockTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className=\"w-450 w-19\"\r\n                    style={{ border: \"none\", paddingLeft: \"1.8%\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={\"tableheaders table-from\"}>\r\n                      From\r\n                      <Tooltip\r\n                        open={fromTT}\r\n                        onOpen={() => setfromTT(true)}\r\n                        onClose={() => setfromTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.FROM}\r\n                      >\r\n                        <img\r\n                          onClick={() => setfromTT(!fromTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className=\"w-450 w-18\"\r\n                    style={{ border: \"none\", paddingLeft: \"1.8%\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={\"tableheaders table-to\"}>\r\n                      To\r\n                      <Tooltip\r\n                        open={toTT}\r\n                        onOpen={() => settoTT(true)}\r\n                        onClose={() => settoTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.TO}\r\n                      >\r\n                        <img\r\n                          onClick={() => settoTT(!toTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className=\"w-450 \"\r\n                    style={{ border: \"none\", paddingLeft: \"1.8%\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={\"tableheaders table-value\"}>\r\n                      Value\r\n                      <Tooltip\r\n                        open={valueTT}\r\n                        onOpen={() => setvalueTT(true)}\r\n                        onClose={() => setvalueTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.VALUE}\r\n                      >\r\n                        <img\r\n                          onClick={() => setvalueTT(!valueTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className=\"w-450 \"\r\n                    style={{ border: \"none\", paddingLeft: \"1.8%\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={\"tableheaders table-value\"}>\r\n                      Avg Txn Fee\r\n                      <Tooltip\r\n                        open={gasTT}\r\n                        onOpen={() => setgasTT(true)}\r\n                        onClose={() => setgasTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.GAS}\r\n                      >\r\n                        <img\r\n                          onClick={() => setgasTT(!gasTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                  {/* <TableCell style={{ border: \"none\", paddingLeft: \"2.5%\" }} align=\"left\"><span className={\"tableheaders\"}>Txn Fee</span></TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              {isLoading === true ? (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell style={{ border: \"none\" }} colspan=\"6\">\r\n                      <div className=\"loader-address-details-list\">\r\n                        <Loader />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                noData == false && (\r\n                  <TableBody>\r\n                    {address.map((row, index) => {\r\n                      const currentTime = new Date();\r\n                      const previousTime = new Date(row.timestamp * 1000);\r\n                      const TimeAge = Utility.timeDiff(\r\n                        currentTime,\r\n                        previousTime\r\n                      );\r\n                      return (\r\n                        <TableRow\r\n                          style={\r\n                            index % 2 !== 1\r\n                              ? { background: \"#f9f9f9\" }\r\n                              : { background: \"white\" }\r\n                          }\r\n                        >\r\n                          <TableCell\r\n                            style={{ border: \"none\" }}\r\n                            margin-left=\"5px\"\r\n                          >\r\n                            <input\r\n                              key={row._id}\r\n                              name={row._id}\r\n                              onChange={handleChanged}\r\n                              type=\"checkbox\"\r\n                              checked={row?.isChecked || false}\r\n                              //checked={checkAll}\r\n                              style={{ marginRight: \"8px\" }}\r\n                            />\r\n\r\n                            <a\r\n                              className=\"linkTable\"\r\n                              href={\"/transaction-details/\" + row.hash}\r\n                            >\r\n                              <Tooltip placement=\"top\" title={row.hash}>\r\n                                <span className=\"tabledata\">\r\n                                  {shorten(row.hash)}{\" \"}\r\n                                </span>\r\n                              </Tooltip>\r\n                            </a>\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            <span className=\"tabledata\">{TimeAge}</span>\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            <a\r\n                              className=\"linkTable\"\r\n                              href={\"/block-details/\" + row.blockNumber}\r\n                            >\r\n                              <span className=\"tabledata\">\r\n                                {row.blockNumber}\r\n                              </span>\r\n                            </a>\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            {row.from != addr ? (\r\n                              <a\r\n                                className=\"linkTable\"\r\n                                href={\"/address-details/\" + row.from}\r\n                              >\r\n                                <Tooltip placement=\"top\" title={row.from}>\r\n                                  <span className=\"tabledata\">\r\n                                    {\" \"}\r\n                                    {shorten(row.from)}\r\n                                  </span>\r\n                                </Tooltip>\r\n                              </a>\r\n                            ) : (\r\n                              <Tooltip placement=\"top\" title={row.from}>\r\n                                <span className=\"tabledata\">\r\n                                  {\" \"}\r\n                                  {shorten(row.from)}\r\n                                </span>\r\n                              </Tooltip>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            {row.to != addr ? (\r\n                              <a\r\n                                className=\"linkTable\"\r\n                                href={\"/address-details/\" + row.to}\r\n                              >\r\n                                <Tooltip placement=\"top\" title={row.to}>\r\n                                  <span className=\"tabledata\">\r\n                                    {shorten(row.to)}\r\n                                  </span>\r\n                                </Tooltip>\r\n                              </a>\r\n                            ) : (\r\n                              <Tooltip placement=\"top\" title={row.to}>\r\n                                <span className=\"tabledata\">\r\n                                  {shorten(row.to)}\r\n                                </span>\r\n                              </Tooltip>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            <Tooltip\r\n                              placement=\"top\"\r\n                              title={format({})(row.value)}\r\n                            >\r\n                              <span className=\"tabledata\">\r\n                                {Utility.convertToInternationalCurrencySystem(\r\n                                  row.value\r\n                                )}\r\n                              </span>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            <span className=\"tabledata\">\r\n                              {format({})(row.gasUsed)}\r\n                            </span>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                )\r\n              )}\r\n              {/* {noData == true && (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      id=\"td\"\r\n                      colspan=\"6\"\r\n                      style={{ borderBottom: 'none' }}\r\n                    >\r\n                      <span className=\"tabledata\" style={{ color: 'black' }}>\r\n                        No transaction found.\r\n                      </span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              )} */}\r\n            </Table>\r\n            {noData == true && (\r\n              <NoDataFoundContainer>\r\n                <img src={\"/images/XDC-Alert.svg\"} />\r\n\r\n                <div>No Transactions Found</div>\r\n              </NoDataFoundContainer>\r\n            )}\r\n          </TableContainer>\r\n        </Paper>\r\n\r\n        <Grid\r\n          container\r\n          style={{\r\n            marginTop: \"2.25rem\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n          className=\"page-container\"\r\n        >\r\n          {noData == true || totalRecord < 10 ? (\r\n            \"\"\r\n          ) : (\r\n            <>\r\n              <Grid className=\"Pagination_1\">\r\n                <span className=\"text\">Show</span>\r\n                <PageSelector\r\n                  value={amount}\r\n                  height={30}\r\n                  handler={handleChangeRowsPerPage}\r\n                />\r\n                <span className=\"text\">Records</span>\r\n              </Grid>\r\n              <Grid xs=\"2\"></Grid>\r\n            </>\r\n          )}\r\n\r\n          {/* {noData == true && totalRecord < amount ? (\r\n            <Grid item xs=\"7\" className=\"page-tab\">\r\n              <button\r\n                style={{ marginLeft: \"0px\" }}\r\n                onClick={() => handleChangePage(\"first\")}\r\n                className={from === 0 || totalRecord === 0 ? \"btn-contract disabled\" : \"btn-contract\"}>\r\n                First\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"prev\")}\r\n                className={from === 0 || totalRecord === 0 ? \"btn-contract disabled\" : \"btn-contract\"}>\r\n                <img src={\"/images/back.svg\"} />\r\n              </button>\r\n              <button className=\"btn-contract\">Page 0 of 0</button>\r\n              <button\r\n                onClick={() => handleChangePage(\"next\")}\r\n                className={\r\n                  +from + +amount === totalRecord || totalRecord === 0 ? \"btn-contract disabled\" : \"btn-contract\"\r\n                }>\r\n                <img src={\"/images/next.svg\"} />\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"last\")}\r\n                className={\r\n                  +from + +amount === totalRecord || totalRecord === 0 ? \"btn-contract disabled\" : \"btn-contract\"\r\n                }>\r\n                Last\r\n              </button>\r\n            </Grid>\r\n          ) : \"\"} */}\r\n\r\n          {noData == false && totalRecord > amount ? (\r\n            <Grid item xs=\"7\" className=\"page-tab\">\r\n              <button\r\n                style={{ marginLeft: \"0px\" }}\r\n                onClick={() => handleChangePage(\"first\")}\r\n                className={\r\n                  from === 0 || totalRecord === 0\r\n                    ? \"btn-contract disabled\"\r\n                    : \"btn-contract\"\r\n                }\r\n              >\r\n                First\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"prev\")}\r\n                className={\r\n                  from === 0 || totalRecord === 0\r\n                    ? \"btn-contract disabled\"\r\n                    : \"btn-contract\"\r\n                }\r\n              >\r\n                <img className=\"rotate-180\" src={\"/images/next.svg\"} alt=\"back\" />\r\n              </button>\r\n\r\n              <button className=\"btn-contract\">\r\n                Page{\" \"}\r\n                {Math.ceil(parseInt(totalRecord) / parseInt(amount)) -\r\n                  Math.ceil(\r\n                    (parseInt(totalRecord) - parseInt(from)) / parseInt(amount)\r\n                  ) +\r\n                  1}{\" \"}\r\n                of {Math.ceil(parseInt(totalRecord) / parseInt(amount))}\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"next\")}\r\n                className={\r\n                  +from + visibleCount === totalRecord ||\r\n                  +from + visibleCount > totalRecord ||\r\n                  totalRecord === 0\r\n                    ? \"btn-contract disabled\"\r\n                    : \"btn-contract\"\r\n                }\r\n              >\r\n                <img src={\"/images/next.svg\"} />\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"last\")}\r\n                className={\r\n                  +from + visibleCount === totalRecord ||\r\n                  +from + visibleCount > totalRecord ||\r\n                  totalRecord === 0\r\n                    ? \"btn-contract disabled\"\r\n                    : \"btn-contract\"\r\n                }\r\n              >\r\n                Last\r\n              </button>\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { Paper } from \"material-ui\";\r\nimport React, { useState } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { IoIosWarning } from \"react-icons/io\";\r\nimport { FaShieldAlt } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function TokenUnverifiedContract(props) {\r\n  let unverifiedData = props?.contractData;\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Paper\r\n        style={{\r\n          borderRadius: \"14px\",\r\n          boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n        }}\r\n        elevation={0}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"source-code-unverified\">\r\n            <div className=\"contract-source-code\">\r\n              <div className=\"contract-text\">Contract Source Code</div>\r\n              <div className=\"contract-unverified-text\">\r\n                <IoIosWarning className=\"danger-logo\" />\r\n                <div style={{ color: \"rgb(222,105,165)\" }}>Unverified</div>\r\n              </div>\r\n            </div>\r\n            <hr className=\"hr-line\"></hr>\r\n            <div className=\"contract-source-code-verify\">\r\n              <div className=\"contract-text\">Verify</div>\r\n              <div className=\"btn-click-div\">\r\n                <button\r\n                  className=\"click-here-btn\"\r\n                  onClick={() =>\r\n                    history.push(\"/verify-contracts/\" + unverifiedData?.address)\r\n                  }\r\n                >\r\n                  <FaShieldAlt className=\"shield-logo\" />\r\n                  Click here\r\n                </button>{\" \"}\r\n                <div className=\"to-verify-text\">\r\n                  to Verify and Publish Source Code\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"contract-source-code-verify\">\r\n            <div className=\"contract-source-2\">\r\n              <img className=\"code-logo\" src={\"/images/bytecod.png\"} />\r\n              Contract Byte-Code\r\n            </div>\r\n            <div>\r\n              <CopyToClipboard\r\n                text={unverifiedData?.byteCode}\r\n                onCopy={() => setCopiedText(unverifiedData?.byteCode)}\r\n              >\r\n                <Tooltip\r\n                  title={\r\n                    copiedText === unverifiedData?.byteCode\r\n                      ? \"Copied\"\r\n                      : \"Copy To Clipboard\"\r\n                  }\r\n                  placement=\"top\"\r\n                >\r\n                  <button\r\n                    style={{\r\n                      color: \"blue\",\r\n                      backgroundColor: \"white\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </Tooltip>\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <textarea\r\n              style={{\r\n                borderLeftWidth: \"6px\",\r\n                borderLeftColor: \"#2149b9\",\r\n                outline: \"none\",\r\n              }}\r\n              readOnly\r\n              value={unverifiedData?.byteCode}\r\n              className=\"input-area-bytecode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport TransactionTableComponent from \"./transactionTable\";\r\nimport Utility, { dispatchAction } from \"../../utility\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ContractData from \"../../services/contract\";\r\nimport TokenUnverifiedContract from \"./tokenUnverifiedContract\";\r\nimport TokenContracttab from \"../token/tokenContractTab\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport { sessionManager } from \"../../managers/sessionManager\";\r\nimport LoginDialog from \"../explorer/loginDialog\";\r\nimport AddressData from \"../../services/address\";\r\nimport ReadContract from \"../contractMethods/read\";\r\nimport WriteContract from \"../contractMethods/write\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles({\r\n  rootUI: {\r\n    minWidth: 650,\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"white\",\r\n    \"@media (min-width: 300px) and (max-width: 567px)\": {\r\n      maxWidth: \"300px\",\r\n    },\r\n    \"@media (min-width: 567px) and (max-width: 767px)\": {\r\n      maxWidth: \"500px\",\r\n    },\r\n    \"@media (min-width: 767px) and (max-width: 1040px)\": {\r\n      maxWidth: \"700px\",\r\n    },\r\n  },\r\n  table: {},\r\n  wantToLoginText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n    fontFamily: \"Inter !important\",\r\n    color: \"#3a3a3a\",\r\n\r\n    marginLeft: \"25px\",\r\n  },\r\n});\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  gap: 20px;\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 21rem;\r\n  }\r\n`;\r\n\r\nconst TabContainerParent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: transparent;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  width: 100%;\r\n  margin: auto;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 21rem;\r\n  }\r\n`;\r\n\r\nexport default function AddressDetailsData() {\r\n  const [toggleState, setToggleState] = useState(1);\r\n  let { addressNumber } = useParams();\r\n  const toggleTab = (index) => {\r\n    setToggleState(index);\r\n  };\r\n  function shorten(b, amountL = 25, amountR = 5, stars = 3) {\r\n    return `${b.slice(0, amountL)}${\".\".repeat(stars)}${b.slice(\r\n      b.length - 3,\r\n      b.length\r\n    )}`;\r\n  }\r\n  const classes = useStyles();\r\n  const [from, setFrom] = React.useState(0);\r\n  const [amount, setAmount] = React.useState(50);\r\n  let initialState = {\r\n    balance: 0,\r\n    transactionCout: 0,\r\n    contractName: \"\",\r\n    creator: \"\",\r\n    transaction: \"\",\r\n    currencySymbol: \"\",\r\n    val: 0.0,\r\n    changedVal: 0.0,\r\n    transactionlist: [],\r\n  };\r\n  const [data, setData] = React.useState(initialState);\r\n  let balance = !data.balance ? 0 : data.balance;\r\n  let balance1 = balance.toString().split(\".\")[0];\r\n  let balance2 = balance.toString().split(\".\")[1];\r\n  const [responses, setResponses] = React.useState([]);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const isloggedIn = sessionManager.getDataFromCookies(\"isLoggedIn\");\r\n  const [loginDialogIsOpen, setLoginDialogIsOpen] = React.useState(false);\r\n  const openLoginDialog = () => setLoginDialogIsOpen(true);\r\n  const closeLoginDialog = () => setLoginDialogIsOpen(false);\r\n\r\n  let value = !data.val ? 0 : data.val;\r\n  let value1 = value.toString().split(\".\")[0];\r\n  let value2 = value.toString().split(\".\")[1];\r\n\r\n  let changedValue = data.changedVal;\r\n  let changedValue1 = changedValue.toString().split(\".\")[0];\r\n  let changedValue2 = changedValue.toString().split(\".\")[1];\r\n\r\n  const getContractDetails = async (values) => {\r\n    try {\r\n      const [error, responseAPI] = await Utility.parseResponse(\r\n        ContractData.getContractDetails(values)\r\n      );\r\n      let responseData = responseAPI.contractResponse;\r\n      if (responseData.address != \"\") {\r\n        setResponses(responseAPI);\r\n        let activeCurrency = window.localStorage.getItem(\"currency\");\r\n        let convertedCurrency = \"\";\r\n        let value = 0;\r\n        let changeVal = 0;\r\n        if (activeCurrency == \"USD\") {\r\n          convertedCurrency = '<i class=\"fa fa-usd\" aria-hidden=\"true\"></i>  ';\r\n          if (responseData.xdcValueUSD)\r\n            value = responseData.xdcValueUSD.toFixed(6);\r\n          if (responseData.priceInUSD)\r\n            changeVal = responseData.priceInUSD.toFixed(6);\r\n        } else if (activeCurrency == \"EUR\") {\r\n          convertedCurrency = \"<i class='fa fa-eur' aria-hidden='true'></i>  \";\r\n          if (responseData.xdcValueEUR)\r\n            value = responseData.xdcValueEUR.toFixed(6);\r\n          if (responseData.priceInEUR)\r\n            changeVal = responseData.priceInEUR.toFixed(6);\r\n        } else if (activeCurrency == \"INR\") {\r\n          convertedCurrency = \"<i class='fa fa-inr' aria-hidden='true'></i> \";\r\n          if (responseData.xdcValueINR)\r\n            value = responseData.xdcValueINR.toFixed(6);\r\n          if (responseData.priceInINR)\r\n            changeVal = responseData.priceInINR.toFixed(6);\r\n        } else {\r\n          convertedCurrency = '<i class=\"fa fa-usd\" aria-hidden=\"true\"></i>  ';\r\n          if (responseData.xdcValueUSD)\r\n            value = responseData.xdcValueUSD.toFixed(6);\r\n          if (responseData.priceInUSD)\r\n            changeVal = responseData.priceInUSD.toFixed(6);\r\n        }\r\n        setData({\r\n          balance: responseData.balance,\r\n          transactionCout: responseData.transactionCount,\r\n          contractName: responseData.contractName,\r\n          creator: responseData.owner,\r\n          transaction: responseData.creationTransaction,\r\n          currencySymbol: convertedCurrency,\r\n          val: value,\r\n          changedVal: changeVal,\r\n          transactionlist: responseData.transactionArray,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // console.error(error);\r\n    }\r\n  };\r\n  const getTransactionsCountForAddress = async (data) => {\r\n    try {\r\n      const [error, responseData] = await Utility.parseResponse(\r\n        AddressData.getTransactionsCountForAddress(data)\r\n      );\r\n      if (error || !responseData) return;\r\n      setCount(parseInt(responseData));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    let values = { addr: addressNumber };\r\n    getContractDetails(values);\r\n    let data = { address: addressNumber };\r\n    getTransactionsCountForAddress(data);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#fff\" }}>\r\n      <Tokensearchbar />\r\n      <Grid className=\"table-grid-block-contract \">\r\n        <div>\r\n          <div\r\n            className=\"contract_details_heading p-t-30 display-flex justify-content-betwe\"\r\n          >\r\n            <div className=\"contract-address-heading\">Contract Address{\" \"}</div>\r\n\r\n            <div className=\"AddressTitle\">{addressNumber}</div>\r\n\r\n\r\n          </div>\r\n          <div className=\"address_block_main\">\r\n            <div className=\"contractOverview\">\r\n              <div className=\"latest\">\r\n                <h1>Contract Overview</h1>\r\n              </div>\r\n              <div className=\"data\">\r\n                <TableContainer\r\n                  component={Paper}\r\n                  elevation={0}\r\n                  style={{ padding: \"0 1.5rem\" }}\r\n                >\r\n                  <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell className=\"left-table-contract\">\r\n                          Balance\r\n                        </TableCell>\r\n                        <TableCell className=\"left-table-contract-data\">\r\n                          {balance2 == null ? (\r\n                            <span>{balance1} XDC</span>\r\n                          ) : (\r\n                            <span>\r\n                              {balance1}\r\n                              {\".\"}\r\n                              <span style={{ color: \"#9FA9BA\" }}>\r\n                                {balance2}\r\n                              </span>\r\n                              XDC\r\n                            </span>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell className=\"left-table-contract\">\r\n                          USD Value\r\n                        </TableCell>\r\n                        <TableCell className=\"left-table-contract-data\">\r\n                          {ReactHtmlParser(data.currencySymbol)}\r\n                          {value2 == null ? (\r\n                            <span>{value1} </span>\r\n                          ) : (\r\n                            <span>\r\n                              {value1}\r\n                              {\".\"}\r\n                              <span style={{ color: \"#9FA9BA\" }}>{value2}</span>\r\n                            </span>\r\n                          )}{\" \"}\r\n                          (@ {ReactHtmlParser(data.currencySymbol)}\r\n                          {changedValue2 == null ? (\r\n                            <span>{changedValue1}/XDC </span>\r\n                          ) : (\r\n                            <span>\r\n                              {changedValue1}\r\n                              {\".\"}\r\n                              <span style={{ color: \"#9FA9BA\" }}>\r\n                                {changedValue2}\r\n                              </span>\r\n                              /XDC\r\n                            </span>\r\n                          )}\r\n                          )\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell className=\"left-table-contract\">\r\n                          Transactions\r\n                        </TableCell>\r\n                        <TableCell className=\"left-table-contract-data\">\r\n                          {count}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell className=\"left-table-contract-last\">\r\n                          Contract Name\r\n                        </TableCell>\r\n                        <TableCell className=\"left-table-contract-data-last\">\r\n                          {!data.contractName\r\n                            ? \"Not Available\"\r\n                            : data.contractName}\r\n                          <i class=\"fas fa-badge-check\"></i>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"contractSummary\">\r\n              <div className=\"latest\">\r\n                <h1>Contract Summary</h1>\r\n              </div>\r\n              <div className=\"data\">\r\n                <TableContainer\r\n                  component={Paper}\r\n                  elevation={0}\r\n                  style={{ padding: \"0 1.5rem\" }}\r\n                >\r\n                  <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <div className=\"contract-summary-mobile\">\r\n                          <TableCell className=\"left-table-contract-mobile\">\r\n                            Creator\r\n                          </TableCell>\r\n                          <TableCell className=\"left-table-contract-data-mobile\">\r\n                            {data.creator != \"\" && (\r\n                              <a\r\n                                className=\"linkTable\"\r\n                                href={\"/address-details/\" + data.creator}\r\n                              >\r\n                                <span className=\"tabledata\">\r\n                                  {shorten(data.creator)}\r\n                                </span>\r\n                              </a>\r\n                            )}\r\n                          </TableCell>\r\n                        </div>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <div className=\"contract-summary-mobile\">\r\n                          <TableCell className=\"left-table-contract-mobile\">\r\n                            Transaction\r\n                          </TableCell>\r\n                          <TableCell className=\"left-table-contract-data-mobile\">\r\n                            {data.transaction != \"\" && (\r\n                              <a\r\n                                className=\"linkTable\"\r\n                                href={\r\n                                  \"/transaction-details/\" + data.transaction\r\n                                }\r\n                              >\r\n                                <span className=\"tabledata\">\r\n                                  {shorten(data.transaction)}\r\n                                </span>\r\n                              </a>\r\n                            )}\r\n                          </TableCell>\r\n                        </div>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          <TabContainerParent>\r\n            <TabContainer>\r\n              <button\r\n                className={\r\n                  toggleState === 1\r\n                    ? \"token-data-tabs active-tabs-token\"\r\n                    : \"token-data-tabs\"\r\n                }\r\n                onClick={() => toggleTab(1)}\r\n              >\r\n                All Transactions\r\n              </button>\r\n\r\n              <button\r\n                className={\r\n                  toggleState === 2\r\n                    ? \"token-data-tabs active-tabs-token\"\r\n                    : \"token-data-tabs\"\r\n                }\r\n                onClick={() => toggleTab(2)}\r\n              >\r\n                Code\r\n              </button>\r\n              {!responses ? (\r\n                \"\"\r\n              ) : responses?.contractStatus !== \"Unverified\" ? (\r\n                <>\r\n                  <button\r\n                    className={\r\n                      toggleState === 3\r\n                        ? \"token-data-tabs active-tabs-token\"\r\n                        : \"token-data-tabs\"\r\n                    }\r\n                    onClick={() => toggleTab(3)}\r\n                  >\r\n                    Read Contract\r\n                  </button>\r\n                  <button\r\n                    className={\r\n                      toggleState === 4\r\n                        ? \"token-data-tabs active-tabs-token\"\r\n                        : \"token-data-tabs\"\r\n                    }\r\n                    onClick={() => toggleTab(4)}\r\n                  >\r\n                    Write Contract\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </TabContainer>\r\n          </TabContainerParent>\r\n\r\n          {/* <div className=\"content-tabs_sec\"> */}\r\n          <div\r\n            className={\r\n              toggleState === 1\r\n                ? \"content_sec  active-content_sec\"\r\n                : \"content_sec\"\r\n            }\r\n          >\r\n            <TransactionTableComponent />\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 2\r\n                ? \"content_sec  active-content_sec\"\r\n                : \"content_sec\"\r\n            }\r\n          >\r\n            {!responses ? (\r\n              \"\"\r\n            ) : responses?.contractStatus === \"Unverified\" ? (\r\n              <TokenUnverifiedContract\r\n                contractData={responses?.contractResponse}\r\n              />\r\n            ) : (\r\n              <TokenContracttab contractData={responses?.contractResponse} />\r\n            )}\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 3\r\n                ? \"content_sec  active-content_sec\"\r\n                : \"content_sec\"\r\n            }\r\n          >\r\n            <ReadContract\r\n              contractData={\r\n                responses?.contractResponse\r\n                  ? { ...responses?.contractResponse }\r\n                  : {}\r\n              }\r\n            />\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 4\r\n                ? \"content_sec  active-content_sec\"\r\n                : \"content_sec\"\r\n            }\r\n          >\r\n            <WriteContract\r\n              contractData={\r\n                responses?.contractResponse\r\n                  ? { ...responses?.contractResponse }\r\n                  : {}\r\n              }\r\n            />\r\n          </div>\r\n          {/* </div> */}\r\n        </div>\r\n      </Grid>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n","import Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\n\r\nconst PageSelect = styled(Select)`\r\n  width: 100%;\r\n  height: ${({ height }) => height}px;\r\n  margin: 0 10px;\r\n  \r\n  legend {\r\n    float: left;\r\n  }\r\n`\r\nconst PageSelector = ({ value, handler, height = 35 }) => {\r\n  return (<PageSelect\r\n    value={value}\r\n    onChange={(event) => handler(event)}\r\n    displayEmpty\r\n    height={height}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>Select</em>\r\n    </MenuItem>\r\n    <MenuItem value={10}>10</MenuItem>\r\n    <MenuItem value={25}>25</MenuItem>\r\n    <MenuItem value={50}>50</MenuItem>\r\n    <MenuItem value={75}>75</MenuItem>\r\n    <MenuItem value={100}>100</MenuItem>\r\n  </PageSelect>)\r\n}\r\nexport default PageSelector","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  getContractLists,\r\n  getTotalContractList,\r\n  getContractSearch,\r\n  getContractDetails,\r\n  getContractDetailsUsingAddress,\r\n};\r\n\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\n\r\nasync function getContractDetails(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_CONTRACT_DETAILS +\r\n    data.addr\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getContractLists(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_CONTRACT_LIST +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.POST,\r\n    getHeaders(),\r\n    data,\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTotalContractList() {\r\n  let url = process.env.REACT_APP_GET_TOTAL_CONTRACT_LIST;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getContractSearch(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_CONTRACT_SEARCH +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage +\r\n    \"&keywords=\" +\r\n    data.keywords;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getContractDetailsUsingAddress(path, data) {\r\n  let url = process.env.REACT_APP_GET_CONTRACT_DETAIL_USING_ADDRESS + path\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    data,\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  getAddressDetail,\r\n  getAddressDetailWithlimit,\r\n  getFilteredAddressDetailWithLimit,\r\n  getFiltersForAccountTransaction,\r\n  getTransactionSearch,\r\n  getTransactionsCountForAddress,\r\n  getAddressStats,\r\n};\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\nasync function getAddressDetail(address) {\r\n  let url = process.env.REACT_APP_GET_ADDRESS_DETAILS + address;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTransactionSearch(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSACTION_SEARCH +\r\n    data.addrr +\r\n    \"/\" +\r\n    data.keywords +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getAddressDetailWithlimit(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSACTIONS_FOR_ADDRESS +\r\n    data.addrr +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage + \"&sortKey=\" + data?.sortKey + \"&sortType=\" + data?.sortType;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getFilteredAddressDetailWithLimit(requestData) {\r\n    let url = process.env.REACT_APP_GET_FILTERED_TRANSACTIONS_FOR_ADDRESS + requestData.address\r\n    return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), requestData, url)\r\n        .then((response) => {\r\n            if (\r\n                !response.success ||\r\n                response.responseCode !== 200 ||\r\n                !response.responseData ||\r\n                response.responseData.length === 0\r\n            )\r\n                return Promise.reject();\r\n            return Promise.resolve(response.responseData);\r\n        })\r\n        .catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n}\r\nasync function getFiltersForAccountTransaction(requestData) {\r\n    let url = process.env.REACT_APP_GET_FILTERS_FOR_ADDRESS_TXN + requestData.address\r\n    return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n        .then((response) => {\r\n            if (\r\n                !response.success ||\r\n                response.responseCode !== 200 ||\r\n                !response.responseData ||\r\n                response.responseData.length === 0\r\n            )\r\n                return Promise.reject();\r\n            return Promise.resolve(response.responseData);\r\n        })\r\n        .catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n}\r\nasync function getTransactionsCountForAddress(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSACTIONS_COUNT_FOR_ADDRESS + data.address\r\n      + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\r\n      + (data.txnType ? (data.searchValue ? \"&txnType=\" : \"?txnType=\") + data.txnType : \"\")\r\n      + (data.status ? (data.searchValue || data.txnType ? \"&status=\" : \"?status=\") + data.status : \"\")\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getAddressStats(address) {\r\n  let url = process.env.REACT_APP_GET_ADDRESS_STATS + address;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { contractMethodTypes } from \"../../constants\";\r\nimport Web3 from \"web3\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst QuestionContainer = styled.div`\r\n  font-weight: 400;\r\n  color: #212529;\r\n  border: solid 1px #dfe2e8;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 4px;\r\n  height: ${(props) => (props.isActive ? \"auto\" : \"50px\")};\r\n  transition: height 0.5s ease-out;\r\n`;\r\nconst QuestionNameContainer = styled.div`\r\n  color: #343a40 !important;\r\n  height: 50px;\r\n  background-color: #f8f9fa !important;\r\n  display: flex;\r\n  flex-flow: row;\r\n  border-bottom: solid 1px #dfe2e8;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst QuestionName = styled.div`\r\n  color: #3a3a3a;\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ArrowImg = styled.img`\r\n  transform: ${(props) => (props.isActive ? \"rotate(90deg)\" : \"\")};\r\n  transition: transform 0.5s ease-in-out;\r\n`;\r\n\r\nconst OutputContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n  background-color: white;\r\n  padding: 15px;\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n  color: #343a40 !important;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Output = styled.div`\r\n  word-wrap: break-word;\r\n  font-size: 15px;\r\n  color: #3a3a3a;\r\n  font-weight: 500;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Devider = styled.div`\r\n  background-color: #dfe2e8;\r\n  height: 1px;\r\n`;\r\n\r\nconst ParentContainer = styled.div`\r\n  padding: 0 1.875rem 1.875rem 1.875rem;\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    padding: 0 15px 15px 15px;\r\n  }\r\n`;\r\n\r\nconst InputTypeFunctionsContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst InputName = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst ParamInput = styled.input`\r\n  color: #343a40 !important;\r\n  font-size: 13px;\r\n  min-height: 35px;\r\n  min-width: 100px;\r\n  outline: none;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n\r\n  :active {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  border-radius: 4px;\r\n  background-color: ${(props) => (props.isActive ? \"#e5eafa\" : \"#3763dd\")};\r\n  border: ${(props) => (props.isActive ? \"solid 1px #3763dd\" : \"\")};\r\n  width: 80px;\r\n  cursor: ${(props) => (props.isActive ? \"\" : \"pointer\")};\r\n  height: 30px;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  width: 150px;\r\n  height: 45px;\r\n  color: white;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 12px;\r\n  color: red;\r\n`;\r\n\r\nconst HighlightedText = styled.div`\r\n  display: flex;\r\n  font-family: Inter;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  color: #2149b9;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: row;\r\n  padding: 1.875rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    flex-flow: column;\r\n    padding: 15px;\r\n    gap: 15px;\r\n    align-items: flex-start;\r\n  }\r\n  @media (min-width: 767px) and (max-width: 1240px) {\r\n    padding: 15px;\r\n    gap: 15px;\r\n  }\r\n`;\r\n\r\nconst HeaderItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\n\r\nexport default function ContractRead(props) {\r\n  const [state, setState] = React.useState({\r\n    readResponses: [],\r\n    readFunctions: [],\r\n    contractAddress: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    isExpand: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    let contractInfo = props.contractData ? props.contractData : {};\r\n    contractInfo.abi = JSON.parse(\r\n      contractInfo.abi ? contractInfo.abi : JSON.stringify([])\r\n    );\r\n    let readFunction = contractInfo.abi.filter(\r\n      (item) => item.stateMutability == contractMethodTypes.view\r\n    );\r\n    readFunction = readFunction.map((item) => {\r\n      return {\r\n        ...item,\r\n        isActive: false,\r\n        response: {},\r\n        loading: false,\r\n        error: \"\",\r\n        params: getFunctionParams(item),\r\n      };\r\n    });\r\n    setState({\r\n      ...state,\r\n      readFunctions: readFunction,\r\n      contractAddress: contractInfo.address\r\n        ? contractInfo.address.replace(\"xdc\", \"0x\")\r\n        : \"\",\r\n    });\r\n  }, [props.contractData]);\r\n\r\n  const getFunctionParams = (functionDetail) => {\r\n    let paramKeys = {};\r\n    functionDetail.inputs.map((item) => {\r\n      paramKeys[item.name] = \"\";\r\n    });\r\n    return paramKeys;\r\n  };\r\n\r\n  const handleFunctionClick = async (\r\n    index,\r\n    isActive,\r\n    haveInputs,\r\n    hasParams = false,\r\n    params,\r\n    loading = false\r\n  ) => {\r\n    let readFunctions = [...state.readFunctions];\r\n\r\n    if (isActive) {\r\n      readFunctions[index].isActive = false;\r\n      readFunctions[index].response = {};\r\n      setState({ ...state, readFunctions });\r\n      return;\r\n    }\r\n    try {\r\n      readFunctions[index].loading = true;\r\n      setState({ ...state, readFunctions, loading });\r\n      if (!haveInputs) {\r\n        const method = readFunctions[index].name;\r\n        let web3 = new Web3(process.env.REACT_APP_WEB3_URL);\r\n        const contract = new web3.eth.Contract(\r\n          readFunctions,\r\n          state.contractAddress\r\n        );\r\n        let response = hasParams\r\n          ? await contract.methods[method](...params).call()\r\n          : await contract.methods[method]().call();\r\n\r\n        readFunctions[index].response = { method, index, response };\r\n      }\r\n      readFunctions[index].isActive = true;\r\n      readFunctions[index].loading = false;\r\n      setState({ ...state, readFunctions });\r\n    } catch (error) {\r\n      readFunctions[index].loading = false;\r\n      readFunctions[index].error = \"Transaction failed\";\r\n      setState({\r\n        ...state,\r\n        readFunctions,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleResetClick = () => {\r\n    let readFunctions = state.readFunctions.map((item) => {\r\n      return {\r\n        ...item,\r\n        // isActive: false,\r\n        response: {},\r\n        params: getFunctionParams(item),\r\n      };\r\n    });\r\n    setState({ ...state, readFunctions });\r\n  };\r\n\r\n  const handleExpandAllClick = async () => {\r\n    let readFunctions = [...state.readFunctions];\r\n    await setState({ ...state, loading: true });\r\n\r\n    for (let index = 0; index < state.readFunctions.length; index++) {\r\n      const item = state.readFunctions[index];\r\n      if (item.isActive) {\r\n        readFunctions[index] = item;\r\n        continue;\r\n      }\r\n      if (item.inputs.length) {\r\n        readFunctions[index].isActive = true;\r\n        readFunctions[index].response = {};\r\n        setState({ ...state, readFunctions, loading: true });\r\n      } else {\r\n        await handleFunctionClick(index, false, false, false, true);\r\n      }\r\n    }\r\n    setState({ ...state, readFunctions, loading: false, isExpand: true });\r\n  };\r\n\r\n  const handleCollpaseClick = () => {\r\n    const readFunctions = state.readFunctions.map((item) => {\r\n      return {\r\n        ...item,\r\n        isActive: false,\r\n        response: {},\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    });\r\n    setState({ ...state, readFunctions, isExpand: false });\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        borderRadius: \"14px\",\r\n        boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <HeaderContainer>\r\n        <HeaderItemsContainer>\r\n          <img src=\"/images/contract.svg\" />\r\n          <MainTitle>Read Contract Information</MainTitle>\r\n        </HeaderItemsContainer>\r\n        <Row style={{ gap: 20 }} alignItems=\"center\">\r\n          {state.loading ? (\r\n            <CircularProgress size={20} />\r\n          ) : !state.isExpand ? (\r\n            <HighlightedText onClick={() => handleExpandAllClick()}>\r\n              Expand all\r\n            </HighlightedText>\r\n          ) : (\r\n            <HighlightedText onClick={() => handleCollpaseClick()}>\r\n              Collapse all\r\n            </HighlightedText>\r\n          )}\r\n          <HeaderItemsContainer onClick={() => handleResetClick()}>\r\n            <HighlightedText>Reset</HighlightedText>\r\n            <img src=\"/images/reset.svg\" />\r\n          </HeaderItemsContainer>\r\n        </Row>\r\n      </HeaderContainer>\r\n      <ParentContainer>\r\n        {state.readFunctions && state.readFunctions.length\r\n          ? state.readFunctions.map((item, index) => {\r\n            return (\r\n              <FunctionContainer\r\n                item={item}\r\n                index={index}\r\n                setState={setState}\r\n                state={state}\r\n                handleFunctionClick={handleFunctionClick}\r\n              />\r\n            );\r\n          })\r\n          : \"\"}\r\n      </ParentContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst FunctionContainer = ({\r\n  item,\r\n  index,\r\n  state,\r\n  handleFunctionClick,\r\n  setState,\r\n}) => {\r\n  return (\r\n    <QuestionContainer isActive={item.isActive} key={index}>\r\n      <QuestionNameContainer\r\n        onClick={() =>\r\n          handleFunctionClick(\r\n            index,\r\n            item.isActive,\r\n            item.inputs.length > 0,\r\n            false,\r\n            false,\r\n            false\r\n          )\r\n        }\r\n      >\r\n        <QuestionName>{`${index + 1}. ${item.name}`}</QuestionName>\r\n        <Row style={{ gap: 10 }} alignItems=\"center\">\r\n          {item.loading && item.inputs.length === 0 ? (\r\n            <CircularProgress size={10} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <ArrowImg isActive={item.isActive} src=\"/images/next.svg\" />\r\n        </Row>\r\n      </QuestionNameContainer>\r\n      {item.isActive ? (\r\n        <OutputContainer>\r\n          {item.inputs.length > 0 ? (\r\n            <InputTypeFunctions\r\n              itemIndex={index}\r\n              state={state}\r\n              setState={setState}\r\n              functionDetail={item}\r\n              handleSubmit={handleFunctionClick}\r\n            />\r\n          ) : (\r\n            <OutPutComponent item={item} />\r\n          )}\r\n        </OutputContainer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </QuestionContainer>\r\n  );\r\n};\r\n\r\nconst InputTypeFunctions = ({\r\n  functionDetail,\r\n  handleSubmit,\r\n  itemIndex,\r\n  setState,\r\n  state,\r\n}) => {\r\n  const [params, setParams] = React.useState({});\r\n  const error = functionDetail.error ? functionDetail.error : \"\";\r\n\r\n  React.useEffect(() => {\r\n    setParams(functionDetail.params);\r\n  }, [functionDetail.params]);\r\n\r\n  const setError = (error, index) => {\r\n    let readFunctions = state.readFunctions;\r\n    readFunctions[index].error = error;\r\n    setState({ ...state, readFunctions });\r\n  };\r\n\r\n  const handleParamsInput = (value, name, type) => {\r\n    if (value.includes(\"xdc\")) {\r\n      value = value.replace(/^.{3}/g, \"0x\");\r\n    }\r\n    setError(\"\", itemIndex);\r\n    let param = params;\r\n    param[name] = type === \"uint256\" ? Number(value) : value;\r\n    setParams(param);\r\n  };\r\n\r\n  const handleInputSubmit = () => {\r\n    let requiredInpuIndex = Object.values(params).findIndex(\r\n      (item) => String(item).length == 0\r\n    );\r\n    if (requiredInpuIndex !== -1) {\r\n      setError(\r\n        `${Object.keys(params)[requiredInpuIndex]} is required field`,\r\n        itemIndex\r\n      );\r\n      return;\r\n    }\r\n    let request = { ...params };\r\n    for (let index = 0; index < Object.keys(params).length; index++) {\r\n      const element = Object.keys(params)[index];\r\n      let input = functionDetail.inputs.find((item) => item.name == element);\r\n      if (input.type == \"bool\") {\r\n        request[element] = Boolean(request[element]);\r\n      } else if (input.type.includes(\"uint\")) {\r\n        try {\r\n          checkNumberType(request[element]);\r\n          request[element] = request[element];\r\n        } catch (error) {\r\n          setError(\"Invalid value for type \" + input.type, itemIndex);\r\n          return;\r\n        }\r\n      } else if (input.type.includes(\"map\")) {\r\n        try {\r\n          request[element] = JSON.parse(request[element]);\r\n        } catch (error) { }\r\n      } else {\r\n        request[element] = request[element];\r\n      }\r\n    }\r\n    handleSubmit(itemIndex, false, false, true, Object.values(request));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {functionDetail.inputs.map((item, idx) => {\r\n        return (\r\n          <InputTypeFunctionsContainer key={idx}>\r\n            <InputName>{item.name}</InputName>\r\n            <ParamInput\r\n              placeholder={item.type}\r\n              value={params[item.name]}\r\n              onChange={(event) =>\r\n                handleParamsInput(event.target.value, item.name, item.type)\r\n              }\r\n            />\r\n          </InputTypeFunctionsContainer>\r\n        );\r\n      })}\r\n      <SubmitButton\r\n        onClick={() => handleInputSubmit()}\r\n        disabled={functionDetail.loading}\r\n        isActive={functionDetail.loading}\r\n      >\r\n        {functionDetail.loading ? <CircularProgress size={20} /> : \"Submit\"}\r\n      </SubmitButton>\r\n      {error ? <ErrorText>{error}</ErrorText> : \"\"}\r\n      {functionDetail?.response?.response ? (\r\n        <OutPutComponent item={functionDetail} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst checkNumberType = (number) => {\r\n  const isFloat = Number(number) === number && number % 1 !== 0;\r\n  if (isFloat) {\r\n    throw `Invalid input`;\r\n  }\r\n};\r\n\r\nconst OutPutComponent = ({ item }) => {\r\n  return (\r\n    <>\r\n      {/* <Title>Output:</Title> */}\r\n      <Output>{item?.response?.response}</Output>\r\n      <Devider />\r\n      <InputName>Return:</InputName>\r\n      <Output>{item.outputs.map((it) => it.type).join(\",\")}</Output>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { contractMethodTypes } from \"../../constants\";\r\nimport Web3 from \"web3\";\r\nimport Web3Dialog from \"../explorer/web3/web3Dialog\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport utility from \"../../utility\";\r\n\r\nconst QuestionContainer = styled.div`\r\n  font-weight: 400;\r\n  color: #212529;\r\n  border: solid 1px #dfe2e8;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 4px;\r\n  height: ${(props) => (props.isActive ? \"auto\" : \"50px\")};\r\n  transition: height 0.5s ease-out;\r\n`;\r\nconst QuestionNameContainer = styled.div`\r\n  color: #343a40 !important;\r\n  height: 50px;\r\n  background-color: #f8f9fa !important;\r\n  display: flex;\r\n  flex-flow: row;\r\n  border-bottom: solid 1px #dfe2e8;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst QuestionName = styled.div`\r\n  color: #3a3a3a;\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ArrowImg = styled.img`\r\n  transform: ${(props) => (props.isActive ? \"rotate(90deg)\" : \"\")};\r\n  transition: transform 0.5s ease-in-out;\r\n`;\r\n\r\nconst OutputContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Output = styled.div`\r\n  word-wrap: break-word;\r\n  font-size: 15px;\r\n  color: #3a3a3a;\r\n  font-weight: 500;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Devider = styled.hr`\r\n  background-color: #dfe2e8;\r\n`;\r\n\r\nconst ParentContainer = styled.div`\r\n  padding: 0 1.875rem 1.875rem 1.875rem;\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    padding: 0 15px 15px 15px;\r\n  }\r\n`;\r\n\r\nconst InputTypeFunctionsContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n`;\r\n\r\nconst InputName = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst ParamInput = styled.input`\r\n  color: #343a40 !important;\r\n  font-size: 13px;\r\n  min-height: 35px;\r\n  min-width: 100px;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  border: solid 1px #dfe2e8;\r\n  padding: 5px;\r\n\r\n  :active {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 217px;\r\n  height: 20px;\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  border-radius: 4px;\r\n  background-color: ${(props) => (props.isActive ? \"#e5eafa\" : \"#3763dd\")};\r\n  border: ${(props) => (props.isActive ? \"solid 1px #3763dd\" : \"\")};\r\n  width: 80px;\r\n  cursor: ${(props) => (props.isActive ? \"\" : \"pointer\")};\r\n  height: 30px;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  width: 150px;\r\n  height: 45px;\r\n  color: white;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 12px;\r\n  color: red;\r\n`;\r\n\r\nconst HighlightedText = styled.div`\r\n  display: flex;\r\n  font-family: Inter;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  color: #2149b9;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: row;\r\n  padding: 1.875rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    flex-flow: column;\r\n    padding: 15px;\r\n    gap: 15px;\r\n    align-items: flex-start;\r\n  }\r\n  @media (min-width: 767px) and (max-width: 1240px) {\r\n    padding: 15px;\r\n    gap: 15px;\r\n  }\r\n`;\r\n\r\nconst HeaderItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\n\r\nconst ActiveDot = styled.div`\r\n  width: 7px;\r\n  height: 7px;\r\n  background-color: #3763dd;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Connected = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: #3ce3a3;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ConnectToWalletButton = styled.div`\r\n  width: ${(props) => (props.isActive ? \"260px\" : \"180px\")};\r\n  height: 40px;\r\n  opacity: 1;\r\n  border-radius: 4px;\r\n  gap: 5px;\r\n  border: solid 1px #3763dd;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  background-color: ${(props) => (props.isActive ? \"#3763dd\" : \"#e5eafa\")};\r\n  cursor: ${(props) => (props.isActive ? \"\" : \"pointer\")};\r\n  text-align: left;\r\n  color: ${(props) => (props.isActive ? \"white\" : \"#3763dd\")};\r\n`;\r\n\r\nexport default function ContractWriteMethods(props) {\r\n  const [state, setState] = React.useState({\r\n    readResponses: [],\r\n    writeFunctions: [],\r\n    contractAddress: \"\",\r\n    accountAddress: \"\",\r\n    setWalletInfo: false,\r\n    error: \"\",\r\n    loading: false,\r\n    isExpand: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    let contractInfo = props.contractData ? props.contractData : {};\r\n    contractInfo.abi = JSON.parse(\r\n      contractInfo.abi ? contractInfo.abi : JSON.stringify([])\r\n    );\r\n    // let contractInfo = {\r\n    //   abi: [\r\n    //     {\r\n    //       inputs: [],\r\n    //       name: \"retrieve\",\r\n    //       outputs: [\r\n    //         {\r\n    //           internalType: \"uint256\",\r\n    //           name: \"\",\r\n    //           type: \"uint256\",\r\n    //         },\r\n    //       ],\r\n    //       stateMutability: \"view\",\r\n    //       type: \"function\",\r\n    //     },\r\n    //     {\r\n    //       inputs: [\r\n    //         {\r\n    //           internalType: \"uint256\",\r\n    //           name: \"num\",\r\n    //           type: \"uint256\",\r\n    //         },\r\n    //       ],\r\n    //       name: \"store\",\r\n    //       outputs: [],\r\n    //       stateMutability: \"nonpayable\",\r\n    //       type: \"function\",\r\n    //     },\r\n    //   ],\r\n    //   address: \"0xD1312601DB0d6c8F0d5597e1Dc3AeF9E3cE3a57A\",\r\n    // };\r\n    let writeFunction = contractInfo.abi.filter(\r\n      (item) => item.stateMutability !== contractMethodTypes.view && item.name\r\n    );\r\n    writeFunction = writeFunction.map((item) => {\r\n      return {\r\n        ...item,\r\n        isActive: false,\r\n        response: {},\r\n        loading: false,\r\n        error: \"\",\r\n        params: getFunctionParams(item),\r\n      };\r\n    });\r\n    setState({\r\n      ...state,\r\n      writeFunctions: writeFunction,\r\n      contractAddress: contractInfo.address\r\n        ? contractInfo.address.replace(\"xdc\", \"0x\")\r\n        : \"\",\r\n    });\r\n  }, [props.contractData]);\r\n\r\n  const getFunctionParams = (functionDetail) => {\r\n    let paramKeys = {};\r\n    functionDetail.inputs.map((item) => {\r\n      paramKeys[item.name] = \"\";\r\n    });\r\n    return paramKeys;\r\n  };\r\n\r\n  const handleFunctionClick = async (\r\n    index,\r\n    isActive,\r\n    haveInputs,\r\n    hasParams = false,\r\n    params,\r\n    loading = false\r\n  ) => {\r\n    if (!state.accountAddress) {\r\n      alert(\"Please connect your wallet\");\r\n      return;\r\n    }\r\n    let writeFunctions = [...state.writeFunctions];\r\n\r\n    if (isActive) {\r\n      writeFunctions[index].isActive = false;\r\n      writeFunctions[index].response = {};\r\n      setState({ ...state, writeFunctions });\r\n      return;\r\n    }\r\n    try {\r\n      if (!haveInputs) {\r\n        writeFunctions[index].loading = true;\r\n        setState({ ...state, loading, writeFunctions });\r\n        const method = writeFunctions[index].name;\r\n        let web3 = new Web3(window.web3.currentProvider);\r\n        const contract = new web3.eth.Contract(\r\n          writeFunctions,\r\n          state.contractAddress\r\n        );\r\n        if (hasParams) {\r\n          await contract.methods[method](...params)\r\n            .send({ from: state.accountAddress })\r\n            .then(async (response) => {\r\n              writeFunctions[index].response = {\r\n                method,\r\n                index,\r\n                response,\r\n              };\r\n            });\r\n        } else {\r\n          await contract.methods[method]()\r\n            .send({ from: state.accountAddress })\r\n            .then(async (response) => {\r\n              writeFunctions[index].response = {\r\n                method,\r\n                index,\r\n                response,\r\n              };\r\n            });\r\n        }\r\n      }\r\n\r\n      writeFunctions[index].isActive = true;\r\n      writeFunctions[index].loading = false;\r\n      setState({ ...state, writeFunctions, loading: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n      writeFunctions[index].loading = false;\r\n      writeFunctions[index].error = \"Transaction Failed\";\r\n      setState({\r\n        ...state,\r\n        // error: \"Transaction Failed\",\r\n        loading: false,\r\n        writeFunctions,\r\n      });\r\n    }\r\n  };\r\n\r\n  // const updateFunctionResponse = (method, index, response) => {\r\n  //   let existingIndex = state.readResponses.findIndex(\r\n  //     (item) => item.method == method && item.index == index\r\n  //   );\r\n  //   let methodExecutionResponse = state.readResponses;\r\n  //   if (existingIndex !== -1) {\r\n  //     methodExecutionResponse[existingIndex] = {\r\n  //       method,\r\n  //       index,\r\n  //       response,\r\n  //     };\r\n  //   } else {\r\n  //     methodExecutionResponse.push({ method, index, response });\r\n  //   }\r\n  //   setState({ ...state, readResponses: methodExecutionResponse });\r\n  // };\r\n\r\n  const handleWeb3ConnectClick = async () => {\r\n    // setState({ ...state, setWalletInfo: true });\r\n\r\n    if (!window.web3) {\r\n      console.log(\"Please install XDCPay extension\");\r\n      setState({ ...state, setWalletInfo: true });\r\n      return;\r\n    }\r\n\r\n    let web3 = new Web3(window.web3.currentProvider);\r\n    window.ethereum.enable();\r\n\r\n    const chainId = await web3.eth.net.getId();\r\n\r\n    if (chainId == 51 || chainId == 50) {\r\n      await web3.eth.getAccounts().then(async (accounts) => {\r\n        if (!accounts || !accounts.length) {\r\n          alert(\"Please login to XDCPay extension\");\r\n          return;\r\n        }\r\n        setState({\r\n          ...state,\r\n          accountAddress: accounts[0].replace(\"xdc\", \"0x\"),\r\n        });\r\n      });\r\n    } else {\r\n      setState({ ...state, setWalletInfo: true });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleExpandAllClick = async () => {\r\n    if (!state.accountAddress) {\r\n      alert(\"Please connect your wallet\");\r\n      return;\r\n    }\r\n    let writeFunctions = [...state.writeFunctions];\r\n    await setState({ ...state, loading: true });\r\n\r\n    for (let index = 0; index < state.writeFunctions.length; index++) {\r\n      const item = state.writeFunctions[index];\r\n      if (item.isActive) {\r\n        writeFunctions[index] = item;\r\n\r\n        continue;\r\n      }\r\n      if (item.inputs.length) {\r\n        writeFunctions[index].isActive = true;\r\n        writeFunctions[index].response = {};\r\n        setState({ ...state, writeFunctions, loading: true });\r\n      } else {\r\n        await handleFunctionClick(index, false, false, false, false, true);\r\n      }\r\n    }\r\n    setState({ ...state, writeFunctions, loading: false, isExpand: true });\r\n  };\r\n\r\n  const handleResetClick = () => {\r\n    let writeFunctions = state.writeFunctions.map((item) => {\r\n      return {\r\n        ...item,\r\n        // isActive: false,\r\n        response: {},\r\n        params: getFunctionParams(item),\r\n      };\r\n    });\r\n    setState({ ...state, writeFunctions });\r\n  };\r\n\r\n  const handleCollpaseClick = () => {\r\n    const writeFunctions = state.writeFunctions.map((item) => {\r\n      return {\r\n        ...item,\r\n        isActive: false,\r\n        response: {},\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    });\r\n    setState({ ...state, writeFunctions, isExpand: false });\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        borderRadius: \"14px\",\r\n        boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <HeaderContainer>\r\n        <HeaderItemsContainer>\r\n          <ConnectToWalletButton\r\n            onClick={() => handleWeb3ConnectClick()}\r\n            isActive={state.accountAddress.length > 0}\r\n            disabled={state.accountAddress.length}\r\n          >\r\n            {!state.accountAddress.length ? (\r\n              <>\r\n                <ActiveDot />\r\n                {\"Connect to web3\"}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Connected />\r\n                {`Connected ${utility.shortenHash(state.accountAddress, 9)}`}\r\n              </>\r\n            )}\r\n          </ConnectToWalletButton>\r\n        </HeaderItemsContainer>\r\n        <Row style={{ gap: 20 }} alignItems=\"center\">\r\n          {state.loading ? (\r\n            <CircularProgress size={20} />\r\n          ) : !state.isExpand ? (\r\n            <HighlightedText onClick={() => handleExpandAllClick()}>\r\n              Expand all\r\n            </HighlightedText>\r\n          ) : (\r\n            <HighlightedText onClick={() => handleCollpaseClick()}>\r\n              Collapse all\r\n            </HighlightedText>\r\n          )}\r\n          <HeaderItemsContainer onClick={() => handleResetClick()}>\r\n            <HighlightedText>Reset</HighlightedText>\r\n            <img src=\"/images/reset.svg\" />\r\n          </HeaderItemsContainer>\r\n        </Row>\r\n      </HeaderContainer>\r\n      <ParentContainer>\r\n        <Web3Dialog\r\n          open={state.setWalletInfo}\r\n          setWeb3DialogOpen={() => setState({ ...state, setWalletInfo: false })}\r\n          connectToWalletMessage=\"Click on 'Connect to wallet' to continue with transactions.\"\r\n        />\r\n\r\n        {state.writeFunctions && state.writeFunctions.length\r\n          ? state.writeFunctions.map((item, index) => {\r\n            return (\r\n              <QuestionContainer isActive={item.isActive} key={index}>\r\n                <QuestionNameContainer\r\n                  onClick={() =>\r\n                    handleFunctionClick(\r\n                      index,\r\n                      item.isActive,\r\n                      item.inputs.length > 0\r\n                    )\r\n                  }\r\n                >\r\n                  <QuestionName>{`${index + 1}. ${item.name}`}</QuestionName>\r\n                  <Row style={{ gap: 10 }} alignItems=\"center\">\r\n                    {item.loading && item.inputs.length === 0 ? (\r\n                      <CircularProgress size={12} />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <ArrowImg\r\n                      isActive={item.isActive}\r\n                      src=\"/images/next.svg\"\r\n                    />\r\n                  </Row>\r\n                </QuestionNameContainer>\r\n                {item.isActive ? (\r\n                  <OutputContainer>\r\n                    {item.inputs.length > 0 ? (\r\n                      <InputTypeFunctions\r\n                        error={state.error}\r\n                        state={state}\r\n                        setState={setState}\r\n                        itemIndex={index}\r\n                        writeFunctions={state.writeFunctions}\r\n                        functionDetail={item}\r\n                        handleSubmit={handleFunctionClick}\r\n                      />\r\n                    ) : (\r\n                      <OutPutComponent item={item} />\r\n                    )}\r\n                  </OutputContainer>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </QuestionContainer>\r\n            );\r\n          })\r\n          : \"\"}\r\n      </ParentContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst InputTypeFunctions = ({\r\n  functionDetail,\r\n  handleSubmit,\r\n  itemIndex,\r\n  writeFunctions,\r\n  setState,\r\n  state,\r\n}) => {\r\n  const [params, setParams] = React.useState({});\r\n  React.useEffect(() => {\r\n    setParams(functionDetail.params);\r\n  }, [functionDetail.params]);\r\n\r\n  const setError = (error, index) => {\r\n    writeFunctions[index].error = error;\r\n    setState({ ...state, writeFunctions });\r\n  };\r\n\r\n  const handleParamsInput = (value, name, type) => {\r\n    if (value.includes(\"xdc\")) {\r\n      value = String(value);\r\n      value = value.replace(\"xdc\", \"0x\").trim();\r\n    }\r\n    setError(\"\", itemIndex);\r\n    let param = params;\r\n    param[name] = type === \"uint256\" ? Number(value) : value;\r\n    setParams(param);\r\n  };\r\n\r\n  const handleInputSubmit = () => {\r\n    let requiredInpuIndex = Object.values(params).findIndex(\r\n      (item) => String(item).length == 0\r\n    );\r\n    if (requiredInpuIndex !== -1) {\r\n      setError(\r\n        `${Object.keys(params)[requiredInpuIndex]} is required field`,\r\n        itemIndex\r\n      );\r\n      return;\r\n    }\r\n    let request = { ...params };\r\n    for (let index = 0; index < Object.keys(params).length; index++) {\r\n      const element = Object.keys(params)[index];\r\n      let input = functionDetail.inputs.find((item) => item.name == element);\r\n      if (input.type == \"bool\") {\r\n        request[element] = Boolean(request[element]);\r\n      } else if (input.type.includes(\"uint\")) {\r\n        try {\r\n          checkNumberType(request[element]);\r\n          request[element] = request[element];\r\n        } catch (error) {\r\n          setError(\"Invalid value for type \" + input.type, itemIndex);\r\n          return;\r\n        }\r\n      } else if (input.type.includes(\"map\")) {\r\n        try {\r\n          request[element] = JSON.parse(request[element]);\r\n        } catch (error) { }\r\n      } else {\r\n        request[element] = request[element];\r\n      }\r\n    }\r\n    // console.log(request);\r\n    handleSubmit(itemIndex, false, false, true, Object.values(request));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {functionDetail.inputs.map((item, idx) => {\r\n        return (\r\n          <InputTypeFunctionsContainer key={idx}>\r\n            <InputName>{item.name}</InputName>\r\n            <ParamInput\r\n              placeholder={item.type}\r\n              value={params[item.name]}\r\n              onChange={(event) =>\r\n                handleParamsInput(event.target.value, item.name, item.type)\r\n              }\r\n            />\r\n          </InputTypeFunctionsContainer>\r\n        );\r\n      })}\r\n      <SubmitButton\r\n        onClick={() => handleInputSubmit()}\r\n        disabled={functionDetail.loading}\r\n        isActive={functionDetail.loading}\r\n      >\r\n        {functionDetail.loading ? <CircularProgress size={20} /> : \"Write\"}\r\n      </SubmitButton>\r\n      {functionDetail.error ? (\r\n        <ErrorText>{functionDetail.error}</ErrorText>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {functionDetail?.response?.response ? (\r\n        // <OutPutComponent item={functionDetail} />\r\n        <TransactionResponse item={functionDetail} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst OutPutComponent = ({ item }) => {\r\n  return (\r\n    <>\r\n      <Output>{item?.response?.response}</Output>\r\n      <Devider />\r\n      <InputName>Return Value Type</InputName>\r\n      <Output>{item.outputs.map((it) => it.type).join(\",\")}</Output>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ResponseTableContainer = styled.div`\r\n  border-radius: 4px;\r\n  border: solid 1px #dfe2e8;\r\n`;\r\n\r\nconst ResponseTableRow = styled.td`\r\n  padding: ${(props) => (props.padding ? props.padding : \"15px 15px 0 15px\")};\r\n  word-break: break-all;\r\n  white-space: ${(props) => (props.isSpace ? \"nowrap\" : \"\")};\r\n`;\r\n\r\nconst TransactionResponse = ({ item }) => {\r\n  const { response } = item;\r\n  return (\r\n    <ResponseTableContainer>\r\n      <table>\r\n        <tr>\r\n          <ResponseTableRow isSpace={true}>\r\n            <InputName>Transaction Hash</InputName>\r\n          </ResponseTableRow>\r\n          <ResponseTableRow>\r\n            <Output>{response?.response?.transactionHash}</Output>\r\n          </ResponseTableRow>\r\n        </tr>\r\n        <tr>\r\n          <ResponseTableRow isSpace={true}>\r\n            <InputName>Status</InputName>\r\n          </ResponseTableRow>\r\n          <ResponseTableRow>\r\n            <Output>{response?.response?.status ? \"Success\" : \"Failed\"}</Output>\r\n          </ResponseTableRow>\r\n        </tr>\r\n        <tr>\r\n          <ResponseTableRow isSpace={true}>\r\n            <InputName>Gas Price</InputName>\r\n          </ResponseTableRow>\r\n          <ResponseTableRow>\r\n            <Output>{response?.response?.gasUsed}</Output>\r\n          </ResponseTableRow>\r\n        </tr>\r\n        <tr>\r\n          <ResponseTableRow isSpace={true} padding=\"15px\">\r\n            <InputName>Block Number</InputName>\r\n          </ResponseTableRow>\r\n          <ResponseTableRow padding=\"15px\">\r\n            <Output>{response?.response?.blockNumber}</Output>\r\n          </ResponseTableRow>\r\n        </tr>\r\n      </table>\r\n    </ResponseTableContainer>\r\n  );\r\n};\r\n\r\nconst checkNumberType = (number) => {\r\n  const isFloat = Number(number) === number && number % 1 !== 0;\r\n  if (isFloat) {\r\n    throw `Invalid input`;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport styled from \"styled-components\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  add: {\r\n    backgroundColor: \"#2149b9\",\r\n    marginLeft: \"90px\",\r\n  },\r\n\r\n  value: {\r\n    width: \"400px !important\",\r\n  },\r\n  closeContainer: {\r\n    top: \"26px\",\r\n    fontWeight: \"500\",\r\n    position: \"absolute\",\r\n    right: \"30px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  close: {\r\n    // width: \"15px\",\r\n  },\r\n  input: {\r\n    width: \"433px\",\r\n    height: \"40px\",\r\n    padding: \"12px 19px 11px 19px\",\r\n    borderRadius: \"6px\",\r\n    border: \"solid 1px #9fa9ba\",\r\n    backgroundColor: \"#fff\",\r\n    outline: \"none\",\r\n  },\r\n\r\n  addbtn: {\r\n    width: \"434px\",\r\n    height: \"44px\",\r\n    borderRadius: \"4.4px\",\r\n    border: \"solid 0.6px #00a1ed\",\r\n    backgroundColor: \"#3763dd\",\r\n    margin: \"15px 15.5px 30px 15px\",\r\n    color: \"white\",\r\n  },\r\n\r\n  userContainer: {\r\n    marginTop: \"12px\",\r\n  },\r\n\r\n  passwordContainer: {\r\n    marginTop: \"15px\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    marginLeft: \"2px\",\r\n  },\r\n  error1: {\r\n    color: \"red\",\r\n    marginLeft: \"24px\",\r\n  },\r\n  error2: {\r\n    color: \"red\",\r\n    // marginLeft: \"auto\",\r\n    // marginRight: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  subCategory: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"0px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n    fontweight: \"500\",\r\n    border: \"none !important\",\r\n    outline: \"none\",\r\n    color: \"#2A2A2A\",\r\n  },\r\n  subCategorySignup: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"0px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n    fontweight: \"500\",\r\n    border: \"none !important\",\r\n    outline: \"none\",\r\n    color: \"#2A2A2A\",\r\n  },\r\n\r\n  forgotPassword: {\r\n    color: \"#2149b9\",\r\n    position: \"absolute\",\r\n    right: \"35px\",\r\n    cursor: \"pointer\",\r\n    lineHeight: \"26px\",\r\n    fontSize: \"14px\",\r\n  },\r\n  createaccount: {\r\n    color: \"#2149b9\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  icon: {\r\n    marginLeft: \"-48px\",\r\n    marginBottom: \"4px\",\r\n    marginTop: \"5px\",\r\n  },\r\n  xdc: {\r\n    color: \"#2a2a2a\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"37px\",\r\n    fontFamily: \"Inter\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n  },\r\n  heading: {\r\n    fontWeight: \"600\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"22px\",\r\n    fontSize: \"22px\",\r\n    color: \"#2a2a2a\",\r\n  },\r\n  paperWidthSm: {\r\n    position: \"absolute\",\r\n    top: \"45px\",\r\n    width: \"503px\",\r\n    padding: \"0 11px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  paperWidthSm1: {\r\n    position: \"absolute\",\r\n    width: \"503px\",\r\n    padding: \"0 11px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  // paperWidthSm2: {\r\n  //   position: \"absolute\",\r\n  //   top: \"65px\",\r\n  //   width: \"600px\",\r\n  //   // padding: \"0 11px\",\r\n  //   borderRadius: \"12px\",\r\n  // },\r\n  termsContainer: {\r\n    flexFlow: \"row nowrap\",\r\n    display: \"flex\",\r\n    marginLeft: \"24px\",\r\n    marginTop: \"20px\",\r\n  },\r\n  iAmNotRobotSignup: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"25px\",\r\n    flexDirection: \"column\",\r\n  },\r\n  checkbox: {\r\n    width: \"17px\",\r\n    height: \"17px\",\r\n    marginRight: \"8px\",\r\n    marginTop: \"5px\",\r\n  },\r\n  robotContainer: {\r\n    width: \"299px\",\r\n    height: \"69px\",\r\n    backgroundColor: \"#F8F6F6\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: \"51px\",\r\n  },\r\n  robotContainer1: {\r\n    flexFlow: \"row nowrap\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  robotContainer2: {\r\n    flexFlow: \"row nowrap\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  captchaCheckbox: {\r\n    marginTop: \"21px\",\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    marginLeft: \"14px\",\r\n    marginRight: \"14px\",\r\n  },\r\n  robotText: {\r\n    marginTop: \"24px\",\r\n    fontWeight: \"bold\",\r\n    marginLeft: \"-50px\",\r\n    color: \"#2a2a2a\",\r\n  },\r\n  recaptcha: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"10px\",\r\n  },\r\n  createAccountbtn: {\r\n    width: \"433px\",\r\n    height: \"44px\",\r\n    borderRadius: \"4.4px\",\r\n    border: \"solid 0.6px #00a1ed\",\r\n    backgroundColor: \"#3763dd\",\r\n    margin: \"15px 15px 23px 24px\",\r\n    color: \"white\",\r\n  },\r\n  resetPasswordbtn: {\r\n    width: \"433px\",\r\n    height: \"44px\",\r\n    borderRadius: \"4.4px\",\r\n    border: \"solid 0.6px #00a1ed\",\r\n    backgroundColor: \"#3763dd\",\r\n    margin: \"15px 15px 23px 24px\",\r\n    color: \"white\",\r\n  },\r\n  alreadyAccount: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"30px\",\r\n    color: \"#2a2a2a\",\r\n  },\r\n  backToSignIn: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"30px\",\r\n    color: \"#2a2a2a\",\r\n  },\r\n  signIn: {\r\n    color: \"#2149b9\",\r\n    cursor: \"pointer\",\r\n  },\r\n  fieldName: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  forgotText: {\r\n    width: \"404px\",\r\n    textAlign: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    color: \"#4c4c4c\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"39px\",\r\n    fontSize: \"15px\",\r\n  },\r\n  robotContainerForgotPass: {\r\n    width: \"299px\",\r\n    height: \"69px\",\r\n    backgroundColor: \"#F8F6F6\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: \"24px\",\r\n  },\r\n  \"@media (max-width: 1920px)\": {\r\n    forgotText: {\r\n      maxWidth: \"404px\",\r\n      width: \"95%\",\r\n    },\r\n    createAccountbtn: {\r\n      maxWidth: \"433px\",\r\n      width: \"90%\",\r\n    },\r\n    resetPasswordbtn: {\r\n      maxWidth: \"433px\",\r\n      width: \"90%\",\r\n    },\r\n    robotContainer: {\r\n      maxWidth: \"299px\",\r\n      width: \"95%\",\r\n    },\r\n    loading: {\r\n      zIndex: -1,\r\n    },\r\n  },\r\n  \"@media (max-width: 767px)\": {\r\n    paperWidthSm: {\r\n      position: \"absolute\",\r\n      // top: \"102px\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      maxWidth: \"767px\",\r\n      borderRadius: \"0px\",\r\n      backgroundImage: \"none\",\r\n      opacity: \"0px\",\r\n    },\r\n    closeContainer: {\r\n      display: \"none\",\r\n    },\r\n    heading: {\r\n      fontWeight: \"600\",\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"23px\",\r\n      fontSize: \"14px\",\r\n      color: \"#2a2a2a\",\r\n      marginBottom: \"8px\",\r\n    },\r\n    subCategory: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    subCategorySignup: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    forgotPassword: {\r\n      position: \"relative\",\r\n      right: \"0px\",\r\n      color: \"#3763dd\",\r\n      fontSize: \"13px\",\r\n    },\r\n    dialogButton: {\r\n      padding: \"0\",\r\n      justifyContent: \"center\",\r\n    },\r\n    createaccount: {\r\n      color: \"#3763dd\",\r\n    },\r\n    forgotText: {\r\n      paddingLeft: \"18px\",\r\n      paddingRight: \"18px\",\r\n      marginBottom: \"28px\",\r\n    },\r\n    createAccountbtn: {\r\n      width: \"100%\",\r\n      maxWidth: \"343px\",\r\n      height: \"38px\",\r\n      borderRadius: \"4px\",\r\n      margin: \"23px auto 21px auto\",\r\n      display: \"block\",\r\n    },\r\n    resetPasswordbtn: {\r\n      width: \"100%\",\r\n      maxWidth: \"343px\",\r\n      height: \"38px\",\r\n      borderRadius: \"4px\",\r\n      margin: \"23px auto 21px auto\",\r\n      display: \"block\",\r\n    },\r\n    fieldName: {\r\n      fontSize: \"13px\",\r\n    },\r\n    addbtn: {\r\n      width: \"100%\",\r\n      maxWidth: \"343px\",\r\n      height: \"38px\",\r\n      borderRadius: \"4px\",\r\n      margin: \"23px auto 21px auto\",\r\n    },\r\n    termsContainer: {\r\n      flexFlow: \"row nowrap\",\r\n      display: \"flex\",\r\n      margin: \"20px auto 35px auto\",\r\n      maxWidth: \"342px\",\r\n      width: \"100%\",\r\n    },\r\n    userContainer: {\r\n      marginTop: \"12px\",\r\n      padding: \"0px\",\r\n      width: \"100%\",\r\n      maxWidth: \"343px\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    userContainerSignup: {\r\n      marginTop: \"12px\",\r\n      padding: \"0px\",\r\n      width: \"100%\",\r\n      maxWidth: \"343px\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    passwordContainer: {\r\n      marginTop: \"20px\",\r\n      padding: \"0px\",\r\n      width: \"100%\",\r\n      maxWidth: \"343px\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n\r\n    paperWidthSm1: {\r\n      position: \"absolute\",\r\n      // top: \"102px\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      maxWidth: \"767px\",\r\n      borderRadius: \"0px\",\r\n      backgroundImage: \"none\",\r\n      opacity: \"0px\",\r\n      paddingBottom: \"30px\",\r\n    },\r\n\r\n    input: {\r\n      maxWidth: \"433px\",\r\n      width: \"100%\",\r\n      height: \"38px\",\r\n    },\r\n    xdc: {\r\n      fontSize: \"13px\",\r\n    },\r\n  },\r\n  \"@media (min-width: 768px) and (max-height: 800px)\": {\r\n    termsContainer: {\r\n      marginTop: \"0px\",\r\n    },\r\n    iAmNotRobotSignup: {\r\n      marginTop: \"15px\",\r\n      marginBottom: \"5px\",\r\n    },\r\n    alreadyAccount: {\r\n      marginBottom: \"15px\",\r\n    },\r\n    createAccountbtn: {\r\n      margin: \"15px 15px 15px 24px\",\r\n    },\r\n    subCategorySignup: {\r\n      marginTop: \"0px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst InstructionCard = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  gap: 15px;\r\n  padding: 10px 0 0 0;\r\n  border-radius: 12px;\r\n  border: solid 1px #eaeaea;\r\n  background-color: #f6f7fa;\r\n  width: 212px;\r\n  height: 209px;\r\n`;\r\n\r\nconst CardText = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  \r\n  text-align: center;\r\n  padding: 0 15px 0 15px;\r\n  color: #686868;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  height: 45px;\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-flow: row;\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  \r\n  text-align: left;\r\n  color: #2a2a2a;\r\n  text-align: center;\r\n`;\r\n\r\nconst CloseIconContainer = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 42px;\r\n  width: 16px;\r\n  height: 16px;\r\n`;\r\n\r\nfunction Web3Dialog(props) {\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  React.useEffect(() => {\r\n    setOpen(props.open);\r\n  }, [props.open]);\r\n  const classes = useStyles();\r\n  const handleClose = () => {\r\n    props.setWeb3DialogOpen(false);\r\n  };\r\n\r\n  const connectWallet = () => { };\r\n\r\n  return (\r\n    <Dialog\r\n      className={classes.dialog + \" maxWidth-800\"}\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      id=\"web3Dialog\"\r\n    >\r\n      <div className=\"main-box\">\r\n        <Row className=\"main-row\">\r\n          <div className=\"main-title\">Connect Wallet</div>\r\n          <CloseIconContainer onClick={handleClose}>\r\n            <img alt=\"Cross\" src={\"/images/XDC-Cross.svg\"} />\r\n          </CloseIconContainer>\r\n        </Row>\r\n        <Row\r\n          className=\"card-box\"\r\n          style={{\r\n            flexFlow: \"wrap\",\r\n            paddingTop: \"22px\",\r\n            marginBottom: \"20px\",\r\n            gap: \"45px\",\r\n          }}\r\n        >\r\n          <InstructionCard>\r\n            <div className=\"fs-14 color-9fa9ba\" style={{ textAlign: \"center\" }}>\r\n              Step 1\r\n            </div>\r\n            <ImageContainer>\r\n              <img\r\n                className=\"input-data-text\"\r\n                alt=\"new-feature\"\r\n                src={\"/images/xdc-icon-blue-color.svg\"}\r\n              />\r\n            </ImageContainer>\r\n            <CardTitle>Install XDCPay</CardTitle>\r\n            <CardText>\r\n              Install the XDCPay Chrome extension\r\n              <a\r\n                href=\"https://chrome.google.com/webstore/detail/xdcpay/bocpokimicclpaiekenaeelehdjllofo?hl=en-GB\"\r\n                target=\"_blank\"\r\n              >\r\n                &nbsp;here.\r\n              </a>\r\n            </CardText>\r\n          </InstructionCard>\r\n          <InstructionCard>\r\n            <div className=\"fs-14 color-9fa9ba\" style={{ textAlign: \"center\" }}>\r\n              Step 2\r\n            </div>\r\n            <ImageContainer>\r\n              <img\r\n                className=\"input-data-text\"\r\n                alt=\"new-feature\"\r\n                src={\"/images/login-2.svg\"}\r\n              />\r\n            </ImageContainer>\r\n            <CardTitle>Login to XDCPay</CardTitle>\r\n            <CardText>\r\n              Log in to your account on the XDCPay Chrome extension\r\n            </CardText>\r\n          </InstructionCard>\r\n          <InstructionCard>\r\n            <div className=\"fs-14 color-9fa9ba\" style={{ textAlign: \"center\" }}>\r\n              Step 3\r\n            </div>\r\n            <ImageContainer>\r\n              <img\r\n                className=\"input-data-text\"\r\n                alt=\"new-feature\"\r\n                src={\"/images/wallet-3.svg\"}\r\n              />\r\n            </ImageContainer>\r\n            <CardTitle>Connect Wallet</CardTitle>\r\n            <CardText>\r\n              {props.connectToWalletMessage\r\n                ? props.connectToWalletMessage\r\n                : \"Click on “Search My Wallet” to see your wallet transactions\"}\r\n            </CardText>\r\n          </InstructionCard>\r\n        </Row>\r\n        {/*<Row className=\"m-b-20\" style={{paddingTop: '22px'}}>*/}\r\n        {/*    <button className=\"connect-wallet-btn w-100\" onClick={connectWallet}>Connect Wallet</button>*/}\r\n        {/*</Row>*/}\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default Web3Dialog;\r\n"],"sourceRoot":""}