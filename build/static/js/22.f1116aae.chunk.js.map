{"version":3,"sources":["modules/accounts/searchAndFiltersComponent.js","modules/accounts/accountComponent.js","modules/accounts/index.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","assets/images/XDC-Alert.svg","../node_modules/format-number/index.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","modules/common/pageSelector.js","modules/common/configureColumnsPopOver.js","modules/common/configureColumnsModal.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","common/components/customDropdown.js"],"names":["Container","styled","div","SearchBox","SearchAndFiltersComponent","props","searchAndFilters","updateFiltersAndGetAccounts","useState","searchQuery","setSearchQuery","type","setType","percentage","timeoutId","useEffect","src","alt","placeholder","onChange","e","value","target","clearTimeout","setTimeout","name","selectedOption","onSelect","data","options","key","useStyles","makeStyles","headingContainer","display","justifyContent","paddingTop","paddingBottom","heading","fontSize","fontWeight","color","fontFamily","container","borderRadius","boxShadow","borderBottom","background","RankColumn","border","paddingLeft","RankColumnVal","PercentageColumn","PercentageColumnVal","btn","textAlign","padding","sortButton","height","width","marginLeft","NoDataFoundContainer","AccountComponent","React","anchorEl","setAnchorEl","isColumnsModalOpen","setColumnsModal","isSettingColumnOpen","Boolean","rankTT","setRankTT","addressTT","setaddressTT","typeTT","settypeTT","balanceTT","setbalanceTT","percentageTT","setpercentageTT","toggleModal","sortData","state","classes","rantValue","from","className","tableName","onClick","event","currentTarget","style","isOpen","handleOnClose","tableColumns","toggleTableColumns","onModalClose","Paper","elevation","TableContainer","id","Table","TableHead","TableRow","isActive","TableCell","align","Tooltip","open","onOpen","onClose","placement","title","messages","RANK","ACCOUNT_ADDRESS","getSortTitle","sortKey","sortOrder","ACCOUNT_TYPE","paddingRight","ACCOUNT_BALANCE","PERCENTAGE","isLoading","TableBody","colspan","noData","accountList","length","map","row","index","finalBal","Utils","decimalDivisonOnly","balance","bal","toString","bal1","utility","convertToInternationalCurrencySystem","bal2","split","bal3","regex","RegExp","splittedArray","match","bal4","text","percentageValue","totalSupply","toFixed","percentageValue1","percentageValue2","href","address","accountType","cursor","format","require","Grid","marginTop","item","amount","handler","_handleChange","_FirstPage","_PrevPage","Math","ceil","totalAccounts","_NextPage","_LastPage","LatestAccountsList","columnName","columns","setState","a","getListOfAccounts","_sortKey","includes","sortType","toolTipText","this","getCoinMarketTotalSupply","skip","limit","requestData","searchValue","searchKeys","parseResponse","AccountService","getAccountList","error","response","totalCount","CoinMarketService","coinMarketTotalSupply","getTotalAccount","totalNumberAccounts","hash","age","block","to","txnfee","b","amountL","stars","slice","repeat","create_data","shorten","create_url","BaseComponent","Tablelvl2Context","module","exports","formatter","negativeType","negative","negativeLeftSymbol","negativeRightSymbol","number","overrideOptions","output","charAt","replace","negativeLeftOut","noUnits","push","prefix","round","places","decim","substr","leadingzeros","substring","truncate","x","padLeft","buf","join","padRight","noSeparator","separator","rgx","test","addDecimalSeparators","decimalsSeparator","addIntegerSeparators","integerSeparator","decimal","negativeRightOut","suffix","unformat","allowedSeparators","forEach","s","newNumber","i","negativeOut","separate","default","TableContext","PageSelect","Select","PageSelector","displayEmpty","theme","paperWidthSm","maxWidth","ConfigureColumnsPopOver","anchorOrigin","vertical","horizontal","transformOrigin","Object","keys","margin","ConfigureColumnsModal","aria-labelledby","ref","_props$component","component","Component","_props$padding","_props$size","size","_props$stickyHeader","stickyHeader","other","_objectWithoutProperties","table","Provider","_extends","role","clsx","root","withStyles","borderCollapse","borderSpacing","typography","body2","spacing","palette","secondary","captionSide","_props$hover","hover","_props$selected","selected","tablelvl2","head","footer","variant","verticalAlign","outline","backgroundColor","action","alpha","main","selectedOpacity","overflowX","_props$align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","capitalize","lighten","divider","darken","primary","lineHeight","pxToRem","fontWeightMedium","body","sizeSmall","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","SelectedValueContainer","FilterName","DropdownContainer","containerWidth","CustomDropDown","isDropdownOpen","toggleDropdown","mainDiv","useRef","selectedOptionData","find","handleClickOutside","current","contains","document","addEventListener","removeEventListener","clientWidth"],"mappings":"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","file":"static/js/22.f1116aae.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CustomDropDown from \"../../common/components/customDropdown\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  margin-bottom: 20px;\r\n`;\r\nconst SearchBox = styled.div`\r\n  border-radius: 8px;\r\n  border: solid 1px #e3e7eb;\r\n  background-color: #ffffff;\r\n  padding: 7px 10px;\r\n  margin-bottom: 4px;\r\n  margin-right: 10px;\r\n\r\n  input {\r\n    outline: none;\r\n    border: none !important;\r\n  }\r\n\r\n  img {\r\n    width: 16px;\r\n    height: 16px;\r\n    margin: 1px 7px 2px 0;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-right: 0;\r\n  }\r\n`;\r\nconst SearchAndFiltersComponent = (props) => {\r\n  const { searchAndFilters, updateFiltersAndGetAccounts } = props;\r\n  const [searchQuery, setSearchQuery] = useState(searchAndFilters.searchQuery);\r\n  const [type, setType] = useState(searchAndFilters.type);\r\n  const [percentage, setPercentage] = useState(searchAndFilters.percentage);\r\n  let timeoutId = 0;\r\n\r\n  useEffect(() => {\r\n    if (!type && !percentage) return;\r\n    updateFiltersAndGetAccounts({ searchQuery, type, percentage });\r\n  }, [type, percentage]);\r\n\r\n  const onSearchQueryChange = (value) => {\r\n    if (timeoutId) clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => {\r\n      setSearchQuery(value);\r\n      updateFiltersAndGetAccounts({ searchQuery: value, type, percentage });\r\n    }, 500);\r\n  };\r\n  return (\r\n    <Container>\r\n      <SearchBox>\r\n        <img src=\"/images/Search.svg\" alt=\"search\" />\r\n        <input\r\n          placeholder=\"Search\"\r\n          onChange={(e) => onSearchQueryChange(e.target.value)}\r\n        />\r\n      </SearchBox>\r\n      <CustomDropDown\r\n        name=\"Type\"\r\n        selectedOption={type}\r\n        onSelect={(data) => setType(data)}\r\n        options={[\r\n          { key: \"0\", value: \"Account\" },\r\n          { key: \"1\", value: \"Contract\" },\r\n          { key: \"2\", value: \"Token\" },\r\n        ]}\r\n      />\r\n      {/*  <CustomDropDown name=\"Percentage\" selectedOption={percentage} onSelect={data => setPercentage(data)}\r\n                            options={[{key: '25', value: '0% - 25%'},\r\n                                {key: '50', value: '25 - 50%'}, {key: '75', value: '50 - 75%'},\r\n                                {key: '100', value: '75 - 100%'}]}/>*/}\r\n    </Container>\r\n  );\r\n};\r\nexport default SearchAndFiltersComponent;\r\n","import React from \"react\";\r\nimport \"../../../src/assets/styles/blocksAndTransactionList.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Grid, TableContainer } from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Loader from \"../../assets/loader\";\r\nimport utility from \"../../utility\";\r\nimport format from \"format-number\";\r\nimport ConfigureColumnPopOver from \"../common/configureColumnsPopOver\";\r\nimport ConfigureColumnsModal from \"../common/configureColumnsModal\";\r\nimport Utils from \"../../utility\";\r\nimport styled from \"styled-components\";\r\nimport { messages } from \"../../constants\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport PageSelector from \"../common/pageSelector\";\r\nimport SearchAndFiltersComponent from \"./searchAndFiltersComponent\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  headingContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: \"30px\",\r\n    paddingBottom: \"30px\",\r\n  },\r\n  heading: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    color: \"#2a2a2a\",\r\n    fontFamily: \"Inter !important\",\r\n  },\r\n  container: {\r\n    borderRadius: \"0.875rem\",\r\n    boxShadow: \"0 0.063rem 0.625rem 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#fff\",\r\n  },\r\n  RankColumn: {\r\n    border: \"none !important\",\r\n    borderBottom: \"none !important\",\r\n    // paddingLeft: \"5.8% !important\",\r\n    \"@media (min-width: 768px) and (max-width: 1240px)\": {\r\n      border: \"none !important\",\r\n      borderBottom: \"none !important\",\r\n      paddingLeft: \"3% !important\",\r\n    },\r\n  },\r\n\r\n  RankColumnVal: {\r\n    border: \"none !important\",\r\n    borderBottom: \"none !important\",\r\n    paddingLeft: \"5.7% !important\",\r\n    \"@media (max-width: 767px)\": {\r\n      RankColumnVal: {\r\n        border: \"none !important\",\r\n        borderBottom: \"none !important\",\r\n        paddingLeft: \"2% !important\",\r\n      },\r\n    },\r\n  },\r\n  \"@media (min-width: 768px) and (max-width: 1240px)\": {\r\n    RankColumnVal: {\r\n      border: \"none !important\",\r\n      borderBottom: \"none !important\",\r\n      paddingLeft: \"3.2% !important\",\r\n    },\r\n  },\r\n  PercentageColumn: {\r\n    border: \"none !important\",\r\n    borderBottom: \"none !important\",\r\n    paddingLeft: \"0% !important\",\r\n  },\r\n  PercentageColumnVal: {\r\n    border: \"none !important\",\r\n    borderBottom: \"none !important\",\r\n    paddingLeft: \"0% !important\",\r\n  },\r\n  btn: {\r\n    textAlign: \"start\",\r\n    padding: \"0px\",\r\n    border: \"none !important\",\r\n    background: \"none\",\r\n    \"&:hover\": { background: \"none\" },\r\n  },\r\n  sortButton: {\r\n    color: \"#3763dd\",\r\n    height: \"20px\",\r\n    width: \"15px\",\r\n    marginLeft: \"5px\",\r\n  },\r\n  \"@media (max-width: 767px)\": {\r\n    headingContainer: {\r\n      paddingTop: \"15px\",\r\n      paddingBottom: \"15px\",\r\n    },\r\n    heading: {\r\n      fontSize: \"16px\",\r\n      fontWeight: \"600\",\r\n    },\r\n  },\r\n  \"@media (max-width: 1024px)\": {\r\n    container: {\r\n      height: 600,\r\n    },\r\n  },\r\n});\r\n\r\nconst NoDataFoundContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  gap: 10px;\r\n  @media (min-width: 767px) {\r\n    margin: 100px !important;\r\n  }\r\n`;\r\nexport default function AccountComponent(props) {\r\n  let [anchorEl, setAnchorEl] = React.useState();\r\n  let [isColumnsModalOpen, setColumnsModal] = React.useState(false);\r\n  let isSettingColumnOpen = Boolean(anchorEl);\r\n\r\n  const [rankTT, setRankTT] = React.useState(false);\r\n  const [addressTT, setaddressTT] = React.useState(false);\r\n  const [typeTT, settypeTT] = React.useState(false);\r\n  const [balanceTT, setbalanceTT] = React.useState(false);\r\n  const [percentageTT, setpercentageTT] = React.useState(false);\r\n\r\n  function handleSettingsClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function toggleModal() {\r\n    setColumnsModal(!isColumnsModalOpen);\r\n  }\r\n\r\n  function handleOnClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function shortenBalance(b, amountL = 12, amountR = 3, stars = 0) {\r\n    return `${b.slice(0, amountL)}${\".\".repeat(stars)}${b.slice(b.length - 3)}`;\r\n  }\r\n  useEffect(() => {\r\n    props.sortData(\"balance\")\r\n  }, []);\r\n  \r\n\r\n  const { state } = props;\r\n  const classes = useStyles();\r\n  let rantValue = state.from;\r\n\r\n  return (\r\n    <div>\r\n      <Tokensearchbar />\r\n      <div className=\"responsive-table-width-contract-list contact-list-tab \">\r\n        <div className={classes.headingContainer}>\r\n          <div className={classes.heading}>{state.tableName}</div>\r\n          <div className=\" display-none-mobile display-flex flex-direction-column justify-content-center\">\r\n            <img\r\n              onClick={handleSettingsClick}\r\n              className=\"p-r-5 h-20 w-20-px cursor-pointer\"\r\n              src=\"/images/settings.svg\"\r\n              style={{ width: \"25px\" }}\r\n            />\r\n            <ConfigureColumnPopOver\r\n              isOpen={isSettingColumnOpen}\r\n              anchorEl={anchorEl}\r\n              handleOnClose={handleOnClose}\r\n              tableColumns={props.state.tableColumns}\r\n              toggleTableColumns={props.toggleTableColumns}\r\n            />\r\n          </div>\r\n          <div className=\" display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\r\n            <img\r\n              onClick={toggleModal}\r\n              className=\"p-r-5 h-20 w-20-px cursor-pointer\"\r\n              src=\"/images/settings.svg\"\r\n              style={{ width: \"25px\" }}\r\n            />\r\n            <ConfigureColumnsModal\r\n              isOpen={isColumnsModalOpen}\r\n              onModalClose={toggleModal}\r\n              tableColumns={props.state.tableColumns}\r\n              toggleTableColumns={props.toggleTableColumns}\r\n            />\r\n          </div>\r\n        </div>\r\n        <SearchAndFiltersComponent searchAndFilters={props.state.searchAndFilters}\r\n          updateFiltersAndGetAccounts={props.updateFiltersAndGetAccounts} />\r\n        <Paper style={{ borderRadius: \"0.875rem\" }} elevation={0}>\r\n          <TableContainer className={classes.container} id=\"container-table\">\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {props.state.tableColumns[\"Rank\"].isActive && (\r\n                    <TableCell className={classes.RankColumn} align=\"center\">\r\n                      <span className={\"tableheaders_1 pl--1\"}>\r\n                        Rank\r\n                        <Tooltip\r\n                          open={rankTT}\r\n                          onOpen={() => setRankTT(true)}\r\n                          onClose={() => setRankTT(false)}\r\n                          placement=\"top\"\r\n                          title={messages.RANK}\r\n                        >\r\n                          <img\r\n                            onClick={() => setRankTT(!rankTT)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      </span>\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell\r\n                    style={{ border: \"none\", paddingLeft: \"2.2%\" }}\r\n                    align=\"center !important\"\r\n                    onClick={() => {\r\n                      props.sortData(\"address\");\r\n                    }}\r\n                  >\r\n                    <span className={\"tableheaders_1_address cursor-pointer\"}>\r\n                      Address\r\n                      <Tooltip\r\n                        open={addressTT}\r\n                        onOpen={() => setaddressTT(true)}\r\n                        onClose={() => setaddressTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.ACCOUNT_ADDRESS}\r\n                      >\r\n                        <img\r\n                          onClick={() => setRankTT(!addressTT)}\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          className=\"tooltipInfoIconAccount\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                    <Tooltip\r\n                      placement=\"top\"\r\n                      title={props.getSortTitle(\"address\")}\r\n                    >{\r\n                        props?.state?.sortKey == \"address\" ?\r\n                          (props?.state?.sortOrder === 1 ? <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon rotate-180\"\r\n                        />\r\n                            : <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                        />) : <span></span>\r\n                      }\r\n\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  {props.state.tableColumns[\"Type\"].isActive && (\r\n                    <TableCell\r\n                      style={{ border: \"none\", paddingLeft: \"5.4%\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      <span className={\"tableheaders_1 pl--1\"}>\r\n                        Type\r\n                        <Tooltip\r\n                          open={typeTT}\r\n                          onOpen={() => settypeTT(true)}\r\n                          onClose={() => settypeTT(false)}\r\n                          placement=\"top\"\r\n                          title={messages.ACCOUNT_TYPE}\r\n                        >\r\n                          <img\r\n                            onClick={() => settypeTT(!typeTT)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      </span>\r\n                    </TableCell>\r\n                  )}\r\n                  {props.state.tableColumns[\"Balance\"].isActive && (\r\n                    <TableCell\r\n                      style={{\r\n                        border: \"none\",\r\n                        paddingLeft: \"5%\",\r\n                        paddingRight: \"48px\",\r\n                      }}\r\n                      align=\"center\"\r\n                      onClick={() => {\r\n                        props.sortData(\"balance\");\r\n                      }}\r\n                    >\r\n                      <span className={\"tableheaders_1 cursor-pointer\"}>\r\n                        Balance\r\n                        <Tooltip\r\n                          open={balanceTT}\r\n                          onOpen={() => setbalanceTT(true)}\r\n                          onClose={() => setbalanceTT(false)}\r\n                          placement=\"top\"\r\n                          title={messages.ACCOUNT_BALANCE}\r\n                        >\r\n                          <img\r\n                            onClick={() => setbalanceTT(!balanceTT)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      </span>\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={props.getSortTitle(\"balance\")}\r\n                      >{\r\n                          props?.state?.sortKey == \"balance\" ?\r\n                            (props?.state?.sortOrder === 1 ? <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/see-more.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon rotate-180\"\r\n                          />\r\n                              : <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/see-more.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon\"\r\n                          />) : <span></span>\r\n                        }\r\n\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {props.state.tableColumns[\"Percentage\"].isActive && (\r\n                    <TableCell\r\n                      className={classes.PercentageColumn}\r\n                      align=\"center\"\r\n                      onClick={() => {\r\n                        props.sortData(\"percentage\");\r\n                      }}\r\n                    >\r\n                      <span className={\"tableheaders_1 cursor-pointer\"}>\r\n                        Percentage\r\n                        <Tooltip\r\n                          open={percentageTT}\r\n                          onOpen={() => setpercentageTT(true)}\r\n                          onClose={() => setpercentageTT(false)}\r\n                          placement=\"top\"\r\n                          title={messages.PERCENTAGE}\r\n                        >\r\n                          <img\r\n                            onClick={() => setpercentageTT(!percentageTT)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      </span>\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={props.getSortTitle(\"percentage\")}\r\n                      >\r\n                        {\r\n                          props?.state?.sortKey == \"percentage\" ?\r\n                            (props?.state?.sortOrder === 1 ? <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/see-more.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon rotate-180\"\r\n                          />\r\n                              : <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/see-more.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon\"\r\n                          />) : <span></span>\r\n                        }\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                  )}\r\n                  {/* <TableCell style={{ border: \"none\", paddingLeft: \"4.4%\" }} align=\"left\"><span className={\"tableheaders_1 percentage-table-accounts\"}>Percentage</span></TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              {props.state.isLoading == true ? (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell style={{ border: \"none\" }} colspan=\"6\">\r\n                      <div className=\"loader-block-list\">\r\n                        <Loader />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                props.state.noData == 1 && (\r\n                  <TableBody>\r\n                    {props.state.accountList &&\r\n                      props.state.accountList.length >= 1 &&\r\n                      props.state.accountList.map((row, index) => {\r\n                        let finalBal = Utils.decimalDivisonOnly(row.balance, 8);\r\n                        let bal = finalBal.toString();\r\n                        var bal1 =\r\n                          utility.convertToInternationalCurrencySystem(bal);\r\n                        var bal2 = bal1.toString().split(\".\")[0];\r\n                        var bal3 = bal1.toString().split(\".\")[1];\r\n                        var regex = new RegExp(\"([0-9]+)|([a-zA-Z]+)\", \"g\");\r\n                        var splittedArray = bal3?.match(regex);\r\n\r\n                        var bal4 =\r\n                          splittedArray && splittedArray.length\r\n                            ? splittedArray[0]\r\n                            : 0;\r\n                        var text =\r\n                          splittedArray && splittedArray.length\r\n                            ? splittedArray[1]\r\n                            : 0;\r\n\r\n                        rantValue = rantValue + 1;\r\n                        let percentageValue = state.totalSupply && state.totalSupply > 0 ? ((\r\n                          (finalBal / state.totalSupply) *\r\n                          100\r\n                        ).toFixed(8)) : 0\r\n\r\n                        let percentageValue1 = percentageValue\r\n                          .toString()\r\n                          .split(\".\")[0];\r\n                        let percentageValue2 = percentageValue\r\n                          .toString()\r\n                          .split(\".\")[1];\r\n\r\n                        //state.totalSupply\r\n\r\n                        return (\r\n                          <TableRow\r\n                            key={row.name}\r\n                            style={\r\n                              index % 2 !== 1\r\n                                ? { background: \"#f9f9f9\" }\r\n                                : { background: \"white\" }\r\n                            }\r\n                          >\r\n                            {props.state.tableColumns[\"Rank\"].isActive && (\r\n                              <TableCell\r\n                                className={` ${classes.RankColumnVal}`}\r\n                                align=\"center\"\r\n                              >\r\n                                <span className=\"tabledata\">{rantValue}</span>\r\n                              </TableCell>\r\n                            )}\r\n                            <TableCell\r\n                              className=\"w-1\"\r\n                              style={{\r\n                                border: \"none\",\r\n                                paddingLeft: \"25.5px\",\r\n                                width: \"\",\r\n                              }}\r\n                            >\r\n                              <a\r\n                                className=\"linkTable\"\r\n                                href={\"/address-details/\" + row.address}\r\n                              >\r\n                                <span className=\"tabledata\">{row.address}</span>\r\n                              </a>\r\n                            </TableCell>\r\n                            {/* <TableCell style={{ border: \"none\" }} align=\"left\"><a className=\"linkTable\" href={props.create_url(row.number, \"height\")}><span className=\"tabledata\">{row.number}</span></a></TableCell> */}\r\n                            {props.state.tableColumns[\"Type\"].isActive && (\r\n                              <TableCell\r\n                                className=\"w-2\"\r\n                                style={{ border: \"none\", paddingLeft: \"5%\" }}\r\n                                align=\"center\"\r\n                              >\r\n                                <span className=\"tabledata\">\r\n                                  {row.accountType == 0\r\n                                    ? \"Account\"\r\n                                    : \"Contract\"}\r\n                                </span>\r\n                              </TableCell>\r\n                            )}\r\n                            {props.state.tableColumns[\"Balance\"].isActive && (\r\n                              <TableCell\r\n                                className=\"w-3\"\r\n                                style={{\r\n                                  border: \"none\",\r\n                                  paddingLeft: \"5%\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                                align=\"center\"\r\n                              >\r\n                                <Tooltip\r\n                                  placement=\"right\"\r\n                                  title={format({})(finalBal)}\r\n                                >\r\n                                  {bal3 >= 0 || bal3 == null ? (\r\n                                    <span className=\"tabledata\">{bal2}</span>\r\n                                  ) : (\r\n                                    <span className=\"tabledata\">\r\n                                      {bal2}\r\n                                      {\".\"}\r\n                                      <span style={{ color: \"#9FA9BA\" }}>\r\n                                        {bal4}\r\n                                      </span>\r\n                                      {text}\r\n                                    </span>\r\n                                  )}\r\n                                </Tooltip>\r\n                              </TableCell>\r\n                            )}\r\n                            {props.state.tableColumns[\"Percentage\"]\r\n                              .isActive && (\r\n                                <TableCell\r\n                                  className={`w-2 ${classes.PercentageColumnVal}`}\r\n                                  align=\"center\"\r\n                                >\r\n                                  <span className=\"tabledata\">\r\n                                    {(!percentageValue2) ? <span>{percentageValue1}%</span> :\r\n                                      <span>\r\n                                        {percentageValue1}\r\n                                        {\".\"}\r\n                                        <span style={{ color: \"#9FA9BA\" }}>\r\n                                          {percentageValue2}\r\n                                        </span>\r\n                                        %\r\n                                      </span>}\r\n\r\n                                  </span>\r\n                                </TableCell>\r\n                              )}\r\n                            {/* <TableCell className=\"w-4\" style={{ border: \"none\", paddingLeft: \"3.9%\" }} align=\"left\"><span className=\"tabledata\"> &nbsp;{((finalBal / props.state.totalSupply) * 100).toString().substr(0, 7)}%</span></TableCell> */}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                )\r\n              )}\r\n            </Table>\r\n            {props.state.noData == 0 && (\r\n              <NoDataFoundContainer>\r\n                <img\r\n                  src={require(\"../../../src/assets/images/XDC-Alert.svg\")}\r\n                ></img>\r\n\r\n                <div>No data found.</div>\r\n              </NoDataFoundContainer>\r\n            )}\r\n          </TableContainer>\r\n        </Paper>\r\n\r\n        <Grid container style={{ marginTop: \"28px\" }} className=\"Pagination\">\r\n          <Grid item className=\"Pagination_1\">\r\n            {!props.state.isLoading && props.state.noData ? (\r\n              <>\r\n                <span className=\"text\">Show</span>\r\n                <PageSelector value={props.state.amount}\r\n                  height={30}\r\n                  handler={props._handleChange} />\r\n                <span className=\"text\">Records</span>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item className=\"Pagination_2\">\r\n            <button\r\n              id=\"btn_12\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              onClick={(event) => props._FirstPage(event)}\r\n              className={props.state.from === 0 ? \"btn disabled\" : \"btn\"}\r\n            >\r\n              First\r\n            </button>\r\n            <button\r\n              id=\"btn_12\"\r\n              onClick={(event) => props._PrevPage(event)}\r\n              className={props.state.from === 0 ? \"btn disabled\" : \"btn\"}\r\n            >\r\n              <img className=\"back-arrow rotate-180\" src={\"/images/next.svg\"} alt=\"back\"/>\r\n            </button>\r\n            <button id=\"btn_12\" className=\"btn\">\r\n              Page{\" \"}\r\n              {Math.ceil(state.totalAccounts / state.amount) -\r\n                Math.ceil((state.totalAccounts - state.from) / state.amount) +\r\n                1}{\" \"}\r\n              of {Math.ceil(state.totalAccounts / state.amount)}\r\n            </button>\r\n            <button\r\n              id=\"btn_12\"\r\n              onClick={(event) => props._NextPage(event)}\r\n              className={\r\n                props.state.from + props.state.accountList.length ===\r\n                  props.state.totalAccounts\r\n                  ? \"btn disabled\"\r\n                  : \"btn\"\r\n              }\r\n            >\r\n              <img className=\"back-arrow\" src={\"/images/next.svg\"} />\r\n            </button>\r\n            <button\r\n              id=\"btn_12\"\r\n              onClick={(event) => props._LastPage(event)}\r\n              className={\r\n                props.state.from + props.state.accountList.length ===\r\n                  props.state.totalAccounts\r\n                  ? \"btn disabled\"\r\n                  : \"btn\"\r\n              }\r\n            >\r\n              Last\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BaseComponent from \"../baseComponent\";\r\nimport AccountComponent from \"./accountComponent\";\r\nimport Utils from \"../../utility\";\r\nimport { AccountService } from \"../../services\";\r\nimport { CoinMarketService } from \"../../services\";\r\nimport { toolTipMessages } from \"../../constants\";\r\n\r\nexport default class LatestAccountsList extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            from: 0,\r\n            amount: 10,\r\n            tableName: \"Accounts\",\r\n            accountList: [],\r\n            totalAccounts: 0,\r\n            totalSupply: 0,\r\n            noData: 1,\r\n            isLoading: true,\r\n            sortKey: \"\",\r\n            sortType: 0,\r\n            address: 0,\r\n            tableColumns: {\r\n                \"Rank\": { isActive: true, toolTipText: \"Account’s rank sorted on the basis of Balance.\" },\r\n                \"Type\": { isActive: true, toolTipText: \"Account type is either Account, Contract or Token.\" },\r\n                \"Balance\": { isActive: true, toolTipText: \"Balance held by a particular account.\" },\r\n                \"Percentage\": { isActive: true, toolTipText: \"Percentage of holdings out of the total supply.\" }\r\n            },\r\n            searchAndFilters: {\r\n                searchQuery: '',\r\n                type: '',\r\n                percentage: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getListOfAccounts()\r\n        // this.getTotalAccounts()\r\n        this.getCoinMarketTotalSupply()\r\n    }\r\n\r\n    toggleTableColumns = (columnName) => {\r\n        const columns = this.state.tableColumns;\r\n        columns[columnName].isActive = !columns[columnName].isActive\r\n        this.setState({ tableColumns: columns })\r\n    }\r\n\r\n    async getListOfAccounts(sortKey, sortType) {\r\n\r\n        const skip = this.state.from || 0;\r\n        const limit = this.state.amount || 10;\r\n        sortKey = sortKey || \"balance\";\r\n        sortType = sortType || -1;\r\n        const requestData = { skip, limit, sortKey, sortType }\r\n        if (this.state.searchAndFilters.searchQuery) {\r\n            requestData.searchValue = this.state.searchAndFilters.searchQuery\r\n            requestData.searchKeys = [\"address\"]\r\n        }\r\n        if (this.state.searchAndFilters.type)\r\n            requestData.accountType = this.state.searchAndFilters.type\r\n        if (this.state.searchAndFilters.percentage)\r\n            requestData.percentage = this.state.searchAndFilters.percentage\r\n        let [error, response] = await Utils.parseResponse(AccountService.getAccountList(requestData))\r\n        if (error)\r\n            return\r\n        const { accountList, totalCount } = response\r\n        if (accountList?.length > 0) {\r\n            this.setState({ noData: 1 })\r\n            this.setState({ isLoading: false })\r\n        } else {\r\n            this.setState({ noData: 0 })\r\n            this.setState({ isLoading: false })\r\n        }\r\n        this.setState({ accountList, totalAccounts: totalCount })\r\n        this.setState({ isLoading: false })\r\n    }\r\n\r\n    async getCoinMarketTotalSupply() {\r\n        let [error, coinMarketTotalSupply] = await Utils.parseResponse(CoinMarketService.getCoinMarketTotalSupply())\r\n        if (error || !coinMarketTotalSupply)\r\n            return\r\n        this.setState({ totalSupply: coinMarketTotalSupply })\r\n    }\r\n\r\n    async getTotalAccounts() {\r\n        let [error, totalNumberAccounts] = await Utils.parseResponse(AccountService.getTotalAccount())\r\n        if (error || !totalNumberAccounts)\r\n            return\r\n        this.setState({ totalAccounts: totalNumberAccounts })\r\n    }\r\n\r\n    _handleChange = async (event) => {\r\n        await this.setState({ amount: event.target.value })\r\n        this.getListOfAccounts()\r\n    }\r\n    _FirstPage = async (event) => {\r\n        await this.setState({ from: 0 })\r\n        this.getListOfAccounts()\r\n    }\r\n    _LastPage = async (event) => {\r\n        let from = (Math.ceil(this.state.totalAccounts / this.state.amount)-1) * this.state.amount\r\n        await this.setState({ from })\r\n        this.getListOfAccounts()\r\n    }\r\n    _NextPage = async (event) => {\r\n        if (+this.state.amount + +this.state.from < this.state.totalAccounts) {\r\n            let from = +this.state.amount + +this.state.from\r\n            await this.setState({ from })\r\n            this.getListOfAccounts()\r\n        }\r\n    }\r\n    _PrevPage = async (event) => {\r\n        if (this.state.from - this.state.amount >= 0) {\r\n            let from = this.state.from - this.state.amount\r\n            await this.setState({ from })\r\n            this.getListOfAccounts()\r\n        }\r\n    }\r\n\r\n    create_data(hash, amount, age, block, from, to, txnfee) {\r\n        return { hash, amount, age, block, from, to, txnfee }\r\n    }\r\n\r\n    shorten(b, amountL = 10, amountR = 3, stars = 3) {\r\n        return `${b.slice(0, amountL)}${\".\".repeat(stars)}${b.slice(\r\n            b.length - 3,\r\n            b.length\r\n        )}`;\r\n    }\r\n\r\n    create_url(item, type) {\r\n        // Thisn is to create URL for table items. changing it can affect whole table.\r\n        if (!item || !item.length) {\r\n            return \"...\"\r\n        }\r\n        return `#${item}-#{type}`\r\n    }\r\n\r\n    sortData = async (_sortKey) => {\r\n\r\n        let sortOrder = 0;\r\n        if (this.state.sortKey.includes(_sortKey)) {\r\n            sortOrder = -1 * this.state.sortOrder;\r\n            this.setState({ sortOrder })\r\n        } else {\r\n            this.setState({ sortKey: _sortKey, sortOrder: -1 })\r\n        }\r\n        if (_sortKey === 'percentage')\r\n            _sortKey = \"balance\"\r\n        this.getListOfAccounts([_sortKey], sortOrder);\r\n    }\r\n    getSortTitle = (sortKey) => {\r\n        if (this.state[sortKey] === 1)\r\n            return \"Ascending\"\r\n        else\r\n            return \"Descending\"\r\n    }\r\n\r\n    updateFiltersAndGetAccounts = async (searchAndFilters) => {\r\n        await this.setState({ searchAndFilters })\r\n        this.setState({ isLoading: true })\r\n        this.getListOfAccounts()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AccountComponent\r\n                toggleTableColumns={this.toggleTableColumns}\r\n                create_data={this.create_data}\r\n                state={this.state}\r\n                shorten={this.shorten}\r\n                create_url={this.create_url}\r\n                _PrevPage={this._PrevPage}\r\n                _NextPage={this._NextPage}\r\n                _LastPage={this._LastPage}\r\n                _FirstPage={this._FirstPage}\r\n                _handleChange={this._handleChange}\r\n                sortData={this.sortData}\r\n                getSortTitle={this.getSortTitle}\r\n                updateFiltersAndGetAccounts={this.updateFiltersAndGetAccounts}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","module.exports = __webpack_public_path__ + \"static/media/XDC-Alert.86b69beb.svg\";","\nmodule.exports = formatter;\nmodule.exports.default = formatter;\n\nfunction formatter(options) {\n  options = options || {};\n\n\n  // *********************************************************************************************\n  // Set defaults for negatives\n  // options.negative, options.negativeOut, options.separator retained for backward compatibility\n  // *********************************************************************************************\n\n  // type of negative; default left\n  options.negativeType = options.negativeType || (options.negative === 'R' ? 'right' : 'left')\n\n  // negative symbols '-' or '()'\n  if (typeof options.negativeLeftSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'left':\n        options.negativeLeftSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeLeftSymbol = '(';\n        break;\n      default:\n        options.negativeLeftSymbol = '';\n    }\n  }\n  if (typeof options.negativeRightSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'right':\n        options.negativeRightSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeRightSymbol = ')';\n        break;\n      default:\n        options.negativeRightSymbol = '';\n    }\n  }\n\n  // whether negative symbol should be inside/outside prefix and suffix\n\n  if (typeof options.negativeLeftOut !== \"boolean\") {\n    options.negativeLeftOut = (options.negativeOut === false ? false : true);\n  }\n  if (typeof options.negativeRightOut !== \"boolean\") {\n    options.negativeRightOut = (options.negativeOut === false ? false : true);\n  }\n\n  //prefix and suffix\n  options.prefix = options.prefix || '';\n  options.suffix = options.suffix || '';\n\n  //separators\n  if (typeof options.integerSeparator !== 'string') {\n    options.integerSeparator = (typeof options.separator === 'string' ? options.separator : ',');\n  }\n  options.decimalsSeparator = typeof options.decimalsSeparator === 'string' ? options.decimalsSeparator : '';\n  options.decimal = options.decimal || '.';\n\n  //padders\n  options.padLeft = options.padLeft || -1 //default no padding\n  options.padRight = options.padRight || -1 //default no padding\n\n  function format(number, overrideOptions) {\n    overrideOptions = overrideOptions || {};\n\n    if (number || number === 0) {\n      number = '' + number;//convert number to string if it isn't already\n    } else {\n      return '';\n    }\n\n    //identify a negative number and make it absolute\n    var output = [];\n    var negative = number.charAt(0) === '-';\n    number = number.replace(/^\\-/g, '');\n\n    //Prepare output with left hand negative and/or prefix\n    if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n    if (negative) {\n      output.push(options.negativeLeftSymbol);\n    }\n    if (options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n\n    //Format core number\n    number = number.split('.');\n    if (options.round != null) round(number, options.round);\n    if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n    if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n    if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n    if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n    if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n    output.push(number[0]);\n    if (number[1]) {\n      output.push(options.decimal);\n      output.push(number[1]);\n    }\n\n    //Prepare output with right hand negative and/or prefix\n    if (options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n    if (negative) {\n      output.push(options.negativeRightSymbol);\n    }\n    if (!options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n\n    //join output and return\n    return output.join('');\n  }\n\n  format.negative = options.negative;\n  format.negativeOut = options.negativeOut;\n  format.negativeType = options.negativeType;\n  format.negativeLeftOut = options.negativeLeftOut;\n  format.negativeLeftSymbol = options.negativeLeftSymbol;\n  format.negativeRightOut = options.negativeRightOut;\n  format.negativeRightSymbol = options.negativeRightSymbol;\n  format.prefix = options.prefix;\n  format.suffix = options.suffix;\n  format.separate = options.separate;\n  format.integerSeparator = options.integerSeparator;\n  format.decimalsSeparator = options.decimalsSeparator;\n  format.decimal = options.decimal;\n  format.padLeft = options.padLeft;\n  format.padRight = options.padRight;\n  format.truncate = options.truncate;\n  format.round = options.round;\n\n  function unformat(number, allowedSeparators) {\n    allowedSeparators = allowedSeparators || [];\n    if (options.allowedSeparators) {\n      options.allowedSeparators.forEach(function (s) { allowedSeparators.push (s); });\n    }\n    allowedSeparators.push(options.integerSeparator);\n    allowedSeparators.push(options.decimalsSeparator);\n    number = number.replace(options.prefix, '');\n    number = number.replace(options.suffix, '');\n    var newNumber = number;\n    do {\n      number = newNumber;\n      for (var i = 0; i < allowedSeparators.length; i++) {\n        newNumber = newNumber.replace(allowedSeparators[i], '');\n      }\n    } while (newNumber != number);\n    return number;\n  }\n  format.unformat = unformat;\n\n  function validate(number, allowedSeparators) {\n    number = unformat(number, allowedSeparators);\n    number = number.split(options.decimal);\n    if (number.length > 2) {\n      return false;\n    } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n      return false;\n    }  else if (options.round != null && number[1] && number[1].length > options.round) {\n      return false;\n    } else {\n      return /^-?\\d+\\.?\\d*$/.test(number);\n    }\n  }\n  return format;\n}\n\n//where x is already the integer part of the number\nfunction addIntegerSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is already the decimal part of the number\nfunction addDecimalSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d{3})(\\d+)/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is the integer part of the number\nfunction padLeft(x, padding) {\n  x = x + '';\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return buf.join('') + x;\n}\n\n//where x is the decimals part of the number\nfunction padRight(x, padding) {\n  if (x) {\n    x += '';\n  } else {\n    x = '';\n  }\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return x + buf.join('');\n}\nfunction truncate(x, length) {\n  if (x) {\n    x += '';\n  }\n  if (x && x.length > length) {\n    return x.substr(0, length);\n  } else {\n    return x;\n  }\n}\n\n//where number is an array with 0th item as integer string and 1st item as decimal string (no negatives)\nfunction round(number, places) {\n  if (number[1] && places >= 0 && number[1].length > places) {\n    //truncate to correct number of decimal places\n    var decim = number[1].slice(0, places);\n    //if next digit was >= 5 we need to round up\n    if (+(number[1].substr(places, 1)) >= 5) {\n      //But first count leading zeros as converting to a number will loose them\n      var leadingzeros = \"\";\n      while (decim.charAt(0)===\"0\") {\n        leadingzeros = leadingzeros + \"0\";\n        decim = decim.substr(1);\n      }\n      //Then we can change decim to a number and add 1 before replacing leading zeros\n      decim = (+decim + 1) + '';\n      decim = leadingzeros + decim;\n      if (decim.length > places) {\n        //adding one has made it longer\n        number[0] = (+number[0]+ +decim.charAt(0)) + ''; //add value of firstchar to the integer part\n        decim = decim.substring(1);   //ignore the 1st char at the beginning which is the carry to the integer part\n      }\n    }\n    number[1] = decim;\n  }\n  return number;\n}\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\n\r\nconst PageSelect = styled(Select)`\r\n  width: 100%;\r\n  height: ${({ height }) => height}px;\r\n  margin: 0 10px;\r\n  \r\n  legend {\r\n    float: left;\r\n  }\r\n`\r\nconst PageSelector = ({ value, handler, height = 35 }) => {\r\n  return (<PageSelect\r\n    value={value}\r\n    onChange={(event) => handler(event)}\r\n    displayEmpty\r\n    height={height}\r\n  >\r\n    <MenuItem value=\"\">\r\n      <em>Select</em>\r\n    </MenuItem>\r\n    <MenuItem value={10}>10</MenuItem>\r\n    <MenuItem value={25}>25</MenuItem>\r\n    <MenuItem value={50}>50</MenuItem>\r\n    <MenuItem value={75}>75</MenuItem>\r\n    <MenuItem value={100}>100</MenuItem>\r\n  </PageSelect>)\r\n}\r\nexport default PageSelector","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paperWidthSm: {\r\n        maxWidth: \"320px\",\r\n        width: \"100%\",\r\n        borderRadius: \"8px\",\r\n    }\r\n}));\r\nfunction ConfigureColumnsPopOver(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<Popover classes={{paperWidthSm: classes.paperWidthSm}}\r\n        open={props.isOpen}\r\n        anchorEl={props.anchorEl}\r\n        onClose={props.handleOnClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}>\r\n        <div className=\"w-320\">\r\n            <div className=\"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center\">Configure Columns</div>\r\n            <div className=\"margin-0 m-b-15 b-t-1\"/>\r\n            <div className=\"p-l-15 p-r-15\">\r\n                {\r\n                    props.tableColumns && Object.keys(props.tableColumns).map(key => {\r\n                        if (key !== 'Balance')\r\n                            return (\r\n                                <div className=\"display-flex justify-content-between p-b-25\">\r\n                                    <div className=\"display-flex\">\r\n                                        <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\r\n                                            <img className=\"tooltipInfoIconConfigDesk\"\r\n                                                 src=\"/images/info.svg\"></img>\r\n                                        </Tooltip>\r\n                                        <div className=\"p-l-5\">{key}</div>\r\n                                    </div>\r\n                                    <div onClick={() => props.toggleTableColumns(key)}>\r\n                                        {props.tableColumns[key].isActive ?\r\n                                            <img className=\"\" src=\"/images/active-switch.svg\"/> :\r\n                                            <img className=\"\" src=\"/images/inactive-switch.svg\"/>}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    </Popover>)\r\n}\r\n\r\nexport default ConfigureColumnsPopOver;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paperWidthSm: {\r\n        maxWidth: \"320px\",\r\n        width: \"100%\",\r\n        borderRadius: \"8px\",\r\n        margin: \"20px\",\r\n    }\r\n}));\r\n\r\nfunction ConfigureColumnsModal(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog\r\n            className=\"\"\r\n            classes={{paperWidthSm: classes.paperWidthSm}}\r\n            open={props.isOpen}\r\n            onClose={props.onModalClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <div className=\"w-320\">\r\n                <div className=\"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center\">Configure Columns</div>\r\n                <div className=\"margin-0 m-b-15 b-t-1\"/>\r\n                <div className=\"p-l-15 p-r-15\">\r\n                    {\r\n                        props.tableColumns && Object.keys(props.tableColumns).map(key => {\r\n                            if (key !== 'Balance')\r\n                                return (\r\n                                    <div className=\"display-flex justify-content-between p-b-25\">\r\n                                        <div className=\"display-flex\">\r\n                                            <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\r\n                                                <img className=\"tooltipInfoIconConfigMob\"\r\n                                                    src=\"/images/info.svg\"></img>\r\n                                            </Tooltip>\r\n                                            <div className=\"p-l-12\">{key}</div>\r\n                                        </div>\r\n                                        <div onClick={() => props.toggleTableColumns(key)}>\r\n                                            {props.tableColumns[key].isActive ?\r\n                                                <img className=\"\" src=\"/images/active-switch.svg\" /> :\r\n                                                <img className=\"\" src=\"/images/inactive-switch.svg\" />}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Dialog>)\r\n}\r\n\r\nexport default ConfigureColumnsModal;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'normal' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, alpha, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'normal');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'normal' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`normal`).\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import React, {useEffect, useRef, useState} from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin-right: 10px;\r\n  @media (max-width: 767px) {\r\n    min-width: 100%;\r\n    margin-left: 0;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n  }\r\n`\r\nconst SelectedValueContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  border: solid 1px #e3e7eb;\r\n  background: white;\r\n  padding: 7px 10px;\r\n\r\n  img {\r\n    width: 11px;\r\n    margin-left: 8px\r\n  }\r\n\r\n`\r\n\r\nconst FilterName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  color: #585858;\r\n  gap: 25px;\r\n\r\n  span {\r\n    font-weight: 600;\r\n    color: #252525;\r\n  }\r\n`\r\nconst DropdownContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  z-index: 2;\r\n  overflow-y: scroll;\r\n  background-color: white;\r\n  max-height: 250px;\r\n  margin-top: 3px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.04);\r\n  border: solid 1px #d4d4d4;\r\n  min-width: ${(props) => props.containerWidth}px;\r\n\r\n  span {\r\n    padding: 8px;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      background-color: #F9F9F9;\r\n    }\r\n  }\r\n`\r\nconst CustomDropDown = (props) => {\r\n    const {name, options, onSelect, selectedOption} = props\r\n    const [isDropdownOpen, toggleDropdown] = useState(false)\r\n    const mainDiv = useRef(null)\r\n\r\n    const selectedOptionData = options ? options.find(data => data.key === selectedOption) : null\r\n\r\n    const onOptionSelected = (selected) => {\r\n        onSelect(selected)\r\n        toggleDropdown(false)\r\n    }\r\n    const onFilterClicked = () => {\r\n        toggleDropdown(true)\r\n    }\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (mainDiv.current && !mainDiv.current.contains(event.target)) {\r\n            toggleDropdown(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Container ref={mainDiv}>\r\n            <SelectedValueContainer onClick={onFilterClicked}>\r\n                <FilterName>\r\n                    <span>{name || 'Filter'}</span>{selectedOption ? (selectedOptionData.name || selectedOptionData.value) : 'All'}\r\n                </FilterName>\r\n                <img src=\"/images/dropdown-arrow.svg\"/>\r\n            </SelectedValueContainer>\r\n            {isDropdownOpen &&\r\n            <DropdownContainer containerWidth={mainDiv.current.clientWidth}>\r\n                {options?.map((data, index) => {\r\n                    return (\r\n                        <span className=\"custom-dropdown-option\" key={index}\r\n                              onClick={() => onOptionSelected(data.key)}>{data.value}</span>)\r\n                })}\r\n            </DropdownContainer>}\r\n        </Container>)\r\n\r\n}\r\n\r\nexport default CustomDropDown\r\n"],"sourceRoot":""}