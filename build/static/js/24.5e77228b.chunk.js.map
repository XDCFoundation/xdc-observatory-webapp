{"version":3,"sources":["modules/contractMethods/read.js"],"names":["QuestionContainer","styled","div","props","isActive","QuestionNameContainer","QuestionName","ArrowImg","img","OutputContainer","MainTitle","Output","Devider","ParentContainer","InputTypeFunctionsContainer","InputName","ParamInput","input","SubmitButton","button","ErrorText","HighlightedText","HeaderContainer","HeaderItemsContainer","ContractRead","React","useState","readResponses","readFunctions","contractAddress","loading","error","isExpand","state","setState","useEffect","contractInfo","contractData","abi","JSON","parse","stringify","readFunction","filter","item","stateMutability","contractMethodTypes","view","map","response","params","getFunctionParams","address","replace","functionDetail","paramKeys","inputs","name","handleFunctionClick","index","haveInputs","a","hasParams","method","web3","Web3","process","contract","eth","Contract","methods","call","console","log","handleExpandAllClick","length","style","borderRadius","boxShadow","elevation","src","gap","alignItems","size","onClick","handleCollpaseClick","handleResetClick","FunctionContainer","key","InputTypeFunctions","itemIndex","handleSubmit","OutPutComponent","setParams","setError","idx","placeholder","type","value","onChange","event","includes","param","Number","handleParamsInput","target","requiredInpuIndex","Object","values","findIndex","String","request","element","keys","find","Boolean","checkNumberType","handleInputSubmit","disabled","number","outputs","it","join"],"mappings":"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","file":"static/js/24.5e77228b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { contractMethodTypes } from \"../../constants\";\nimport Web3 from \"web3\";\nimport { Paper } from \"@material-ui/core\";\nimport { Row } from \"simple-flexbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst QuestionContainer = styled.div`\n  font-weight: 400;\n  color: #212529;\n  border: solid 1px #dfe2e8;\n  cursor: pointer;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 4px;\n  height: ${(props) => (props.isActive ? \"auto\" : \"50px\")};\n  transition: height 0.5s ease-out;\n`;\nconst QuestionNameContainer = styled.div`\n  color: #343a40 !important;\n  height: 50px;\n  background-color: #f8f9fa !important;\n  display: flex;\n  flex-flow: row;\n  border-bottom: solid 1px #dfe2e8;\n  padding: 15px;\n  border-radius: 4px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst QuestionName = styled.div`\n  color: #3a3a3a;\n  font-family: Inter;\n  font-size: 15px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.58px;\n  text-align: left;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 14px;\n  }\n`;\n\nconst ArrowImg = styled.img`\n  transform: ${(props) => (props.isActive ? \"rotate(90deg)\" : \"\")};\n  transition: transform 0.5s ease-in-out;\n`;\n\nconst OutputContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  gap: 15px;\n  background-color: white;\n  padding: 15px;\n`;\n\nconst MainTitle = styled.div`\n  color: #343a40 !important;\n  font-weight: bold;\n  font-size: 15px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 14px;\n  }\n`;\n\nconst Output = styled.div`\n  word-wrap: break-word;\n  font-size: 15px;\n  color: #3a3a3a;\n  font-weight: 500;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 14px;\n  }\n`;\n\nconst Devider = styled.div`\n  background-color: #dfe2e8;\n  height: 1px;\n`;\n\nconst ParentContainer = styled.div`\n  padding: 0 1.875rem 1.875rem 1.875rem;\n  display: flex;\n  flex-flow: column;\n  gap: 15px;\n  @media (min-width: 0px) and (max-width: 1240px) {\n    padding: 0 15px 15px 15px;\n  }\n`;\n\nconst InputTypeFunctionsContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  gap: 15px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 14px;\n  }\n`;\n\nconst InputName = styled.div`\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.54px;\n  text-align: left;\n  color: #3a3a3a;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 13px;\n  }\n`;\n\nconst ParamInput = styled.input`\n  color: #343a40 !important;\n  font-size: 13px;\n  min-height: 35px;\n  min-width: 100px;\n  outline: none;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 5px;\n  padding: 5px;\n\n  :active {\n    outline: none;\n  }\n  :hover {\n    outline: none;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  border-radius: 4px;\n  background-color: ${(props) => (props.isActive ? \"#e5eafa\" : \"#3763dd\")};\n  border: ${(props) => (props.isActive ? \"solid 1px #3763dd\" : \"\")};\n  width: 80px;\n  cursor: ${(props) => (props.isActive ? \"\" : \"pointer\")};\n  height: 30px;\n  font-size: 15px;\n  font-weight: 600;\n  width: 150px;\n  height: 45px;\n  color: white;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 14px;\n  }\n`;\n\nconst ErrorText = styled.div`\n  font-size: 12px;\n  color: red;\n`;\n\nconst HighlightedText = styled.div`\n  display: flex;\n  font-family: Inter;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.54px;\n  text-align: left;\n  color: #2149b9;\n`;\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row;\n  padding: 1.875rem;\n  align-items: center;\n  justify-content: space-between;\n  @media (min-width: 0px) and (max-width: 767px) {\n    flex-flow: column;\n    padding: 15px;\n    gap: 15px;\n    align-items: flex-start;\n  }\n  @media (min-width: 767px) and (max-width: 1240px) {\n    padding: 15px;\n    gap: 15px;\n  }\n`;\n\nconst HeaderItemsContainer = styled.div`\n  display: flex;\n  flex-flow: row;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport default function ContractRead(props) {\n  const [state, setState] = React.useState({\n    readResponses: [],\n    readFunctions: [],\n    contractAddress: \"\",\n    loading: false,\n    error: \"\",\n    isExpand: false,\n  });\n\n  React.useEffect(() => {\n    let contractInfo = props.contractData ? props.contractData : {};\n    contractInfo.abi = JSON.parse(\n      contractInfo.abi ? contractInfo.abi : JSON.stringify([])\n    );\n    let readFunction = contractInfo.abi.filter(\n      (item) => item.stateMutability == contractMethodTypes.view\n    );\n    readFunction = readFunction.map((item) => {\n      return {\n        ...item,\n        isActive: false,\n        response: {},\n        loading: false,\n        error: \"\",\n        params: getFunctionParams(item),\n      };\n    });\n    setState({\n      ...state,\n      readFunctions: readFunction,\n      contractAddress: contractInfo.address\n        ? contractInfo.address.replace(\"xdc\", \"0x\")\n        : \"\",\n    });\n  }, [props.contractData]);\n\n  const getFunctionParams = (functionDetail) => {\n    let paramKeys = {};\n    functionDetail.inputs.map((item) => {\n      paramKeys[item.name] = \"\";\n    });\n    return paramKeys;\n  };\n\n  const handleFunctionClick = async (\n    index,\n    isActive,\n    haveInputs,\n    hasParams = false,\n    params,\n    loading = false\n  ) => {\n    let readFunctions = [...state.readFunctions];\n\n    if (isActive) {\n      readFunctions[index].isActive = false;\n      readFunctions[index].response = {};\n      setState({ ...state, readFunctions });\n      return;\n    }\n    try {\n      readFunctions[index].loading = true;\n      setState({ ...state, readFunctions, loading });\n      if (!haveInputs) {\n        const method = readFunctions[index].name;\n        let web3 = new Web3(process.env.REACT_APP_WEB3_URL);\n        const contract = new web3.eth.Contract(\n          readFunctions,\n          state.contractAddress\n        );\n        let response = hasParams\n          ? await contract.methods[method](...params).call()\n          : await contract.methods[method]().call();\n\n        readFunctions[index].response = { method, index, response };\n      }\n      readFunctions[index].isActive = true;\n      readFunctions[index].loading = false;\n      setState({ ...state, readFunctions });\n    } catch (error) {\n      readFunctions[index].loading = false;\n      readFunctions[index].error = \"Transaction failed\";\n      console.log(error);\n      setState({\n        ...state,\n        readFunctions,\n      });\n    }\n  };\n\n  const handleResetClick = () => {\n    let readFunctions = state.readFunctions.map((item) => {\n      return {\n        ...item,\n        // isActive: false,\n        response: {},\n        params: getFunctionParams(item),\n      };\n    });\n    setState({ ...state, readFunctions });\n  };\n\n  const handleExpandAllClick = async () => {\n    let readFunctions = [...state.readFunctions];\n    await setState({ ...state, loading: true });\n\n    for (let index = 0; index < state.readFunctions.length; index++) {\n      const item = state.readFunctions[index];\n      if (item.isActive) {\n        readFunctions[index] = item;\n        continue;\n      }\n      if (item.inputs.length) {\n        readFunctions[index].isActive = true;\n        readFunctions[index].response = {};\n        setState({ ...state, readFunctions, loading: true });\n      } else {\n        await handleFunctionClick(index, false, false, false, true);\n      }\n    }\n    setState({ ...state, readFunctions, loading: false, isExpand: true });\n  };\n\n  const handleCollpaseClick = () => {\n    const readFunctions = state.readFunctions.map((item) => {\n      return {\n        ...item,\n        isActive: false,\n        response: {},\n        loading: false,\n        error: \"\",\n      };\n    });\n    setState({ ...state, readFunctions, isExpand: false });\n  };\n\n  return (\n    <Paper\n      style={{\n        borderRadius: \"14px\",\n        boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n      }}\n      elevation={0}\n    >\n      <HeaderContainer>\n        <HeaderItemsContainer>\n          <img src=\"/images/contract.svg\" />\n          <MainTitle>Read Contract Information</MainTitle>\n        </HeaderItemsContainer>\n        <Row style={{ gap: 20 }} alignItems=\"center\">\n          {state.loading ? (\n            <CircularProgress size={20} />\n          ) : !state.isExpand ? (\n            <HighlightedText onClick={() => handleExpandAllClick()}>\n              Expand all\n            </HighlightedText>\n          ) : (\n            <HighlightedText onClick={() => handleCollpaseClick()}>\n              Collapse all\n            </HighlightedText>\n          )}\n          <HeaderItemsContainer onClick={() => handleResetClick()}>\n            <HighlightedText>Reset</HighlightedText>\n            <img src=\"/images/reset.svg\" />\n          </HeaderItemsContainer>\n        </Row>\n      </HeaderContainer>\n      <ParentContainer>\n        {state.readFunctions && state.readFunctions.length\n          ? state.readFunctions.map((item, index) => {\n              return (\n                <FunctionContainer\n                  item={item}\n                  index={index}\n                  setState={setState}\n                  state={state}\n                  handleFunctionClick={handleFunctionClick}\n                />\n              );\n            })\n          : \"\"}\n      </ParentContainer>\n    </Paper>\n  );\n}\n\nconst FunctionContainer = ({\n  item,\n  index,\n  state,\n  handleFunctionClick,\n  setState,\n}) => {\n  return (\n    <QuestionContainer isActive={item.isActive} key={index}>\n      <QuestionNameContainer\n        onClick={() =>\n          handleFunctionClick(\n            index,\n            item.isActive,\n            item.inputs.length > 0,\n            false,\n            false,\n            false\n          )\n        }\n      >\n        <QuestionName>{`${index + 1}. ${item.name}`}</QuestionName>\n        <Row style={{ gap: 10 }} alignItems=\"center\">\n          {item.loading && item.inputs.length === 0 ? (\n            <CircularProgress size={10} />\n          ) : (\n            \"\"\n          )}\n          <ArrowImg isActive={item.isActive} src=\"/images/next.svg\" />\n        </Row>\n      </QuestionNameContainer>\n      {item.isActive ? (\n        <OutputContainer>\n          {item.inputs.length > 0 ? (\n            <InputTypeFunctions\n              itemIndex={index}\n              state={state}\n              setState={setState}\n              functionDetail={item}\n              handleSubmit={handleFunctionClick}\n            />\n          ) : (\n            <OutPutComponent item={item} />\n          )}\n        </OutputContainer>\n      ) : (\n        \"\"\n      )}\n    </QuestionContainer>\n  );\n};\n\nconst InputTypeFunctions = ({\n  functionDetail,\n  handleSubmit,\n  itemIndex,\n  setState,\n  state,\n}) => {\n  const [params, setParams] = React.useState({});\n  const error = functionDetail.error ? functionDetail.error : \"\";\n\n  React.useEffect(() => {\n    setParams(functionDetail.params);\n  }, [functionDetail.params]);\n\n  const setError = (error, index) => {\n    let readFunctions = state.readFunctions;\n    readFunctions[index].error = error;\n    setState({ ...state, readFunctions });\n  };\n\n  const handleParamsInput = (value, name, type) => {\n    if (value.includes(\"xdc\")) {\n      value = value.replace(/^.{3}/g, \"0x\");\n    }\n    setError(\"\", itemIndex);\n    let param = params;\n    param[name] = type === \"uint256\" ? Number(value) : value;\n    setParams(param);\n  };\n\n  const handleInputSubmit = () => {\n    let requiredInpuIndex = Object.values(params).findIndex(\n      (item) => String(item).length == 0\n    );\n    if (requiredInpuIndex !== -1) {\n      setError(\n        `${Object.keys(params)[requiredInpuIndex]} is required field`,\n        itemIndex\n      );\n      return;\n    }\n    let request = { ...params };\n    for (let index = 0; index < Object.keys(params).length; index++) {\n      const element = Object.keys(params)[index];\n      let input = functionDetail.inputs.find((item) => item.name == element);\n      if (input.type == \"bool\") {\n        request[element] = Boolean(request[element]);\n      } else if (input.type.includes(\"uint\")) {\n        try {\n          checkNumberType(request[element]);\n          request[element] = request[element];\n        } catch (error) {\n          setError(\"Invalid value for type \" + input.type, itemIndex);\n          return;\n        }\n      } else if (input.type.includes(\"map\")) {\n        try {\n          request[element] = JSON.parse(request[element]);\n        } catch (error) {}\n      } else {\n        request[element] = request[element];\n      }\n    }\n    handleSubmit(itemIndex, false, false, true, Object.values(request));\n  };\n\n  return (\n    <>\n      {functionDetail.inputs.map((item, idx) => {\n        return (\n          <InputTypeFunctionsContainer key={idx}>\n            <InputName>{item.name}</InputName>\n            <ParamInput\n              placeholder={item.type}\n              value={params[item.name]}\n              onChange={(event) =>\n                handleParamsInput(event.target.value, item.name, item.type)\n              }\n            />\n          </InputTypeFunctionsContainer>\n        );\n      })}\n      <SubmitButton\n        onClick={() => handleInputSubmit()}\n        disabled={functionDetail.loading}\n        isActive={functionDetail.loading}\n      >\n        {functionDetail.loading ? <CircularProgress size={20} /> : \"Submit\"}\n      </SubmitButton>\n      {error ? <ErrorText>{error}</ErrorText> : \"\"}\n      {functionDetail?.response?.response ? (\n        <OutPutComponent item={functionDetail} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nconst checkNumberType = (number) => {\n  const isFloat = Number(number) === number && number % 1 !== 0;\n  if (isFloat) {\n    throw `Invalid input`;\n  }\n};\n\nconst OutPutComponent = ({ item }) => {\n  return (\n    <>\n      {/* <Title>Output:</Title> */}\n      <Output>{item?.response?.response}</Output>\n      <Devider />\n      <InputName>Return:</InputName>\n      <Output>{item.outputs.map((it) => it.type).join(\",\")}</Output>\n    </>\n  );\n};\n"],"sourceRoot":""}