{"version":3,"sources":["modules/token/tokenHistoryAnalytics/index.js","modules/token/holderAnalytics/tokenBalanceGraph/index.js","modules/token/holderAnalytics/tokenTransferAmountGraph/index.js","modules/token/holderAnalytics/tokenTransferCount/index.js","modules/token/holderAnalytics/analyticsComponent.js","modules/holders/holderTable.js","modules/holders/holderDetails.js","assets/images/XDC-Alert.svg","services/accounts.js","modules/common/pageSelector.js","services/token.js","modules/common/commonGraph.js","modules/common/configureColumnsPopOver.js","modules/common/configureColumnsModal.js","services/contract.js","services/address.js","modules/tokenList/tokenList.js"],"names":["ProgressBarContainer","styled","div","NoDataFoundContainer","WrappedComponent","props","tn","useParams","TokenPriceHistoryGraph","contractAddress","tokenName","componentDidMount","splitRes","window","location","pathname","split","length","setState","getHistoricalTokenData","a","loading","tokenAddress","request","startTime","moment","subtract","valueOf","endTime","utility","parseResponse","accounts","getHistoryPrice","error","response","generateGraphData","graphData","data","__this","options","title","text","chart","type","zoomType","enabled","legend","layout","align","symbolPadding","symbolWidth","symbolHeight","squareSymbol","backgroundColor","useHTML","labelFormatter","this","name","state","navigator","scrollbar","rangeSelector","exporting","buttons","contextButton","tooltip","formatter","x","format","point","highestPrice","lowestPrice","closingPrice","series","map","obj","timestamp","y","color","credits","yAxis","opposite","xAxis","showInLegend","size","src","require","BaseComponent","TokenBalanceGraphComponent","count","buttonSpacing","buttonTheme","style","fill","stroke","fontWeight","fontSize","width","height","r","states","hover","select","inputBoxBorderColor","inputBoxWidth","inputBoxHeight","inputDateFormat","inputStyle","labelStyle","shared","date","Math","abs","Number","currentBalance","toFixed","labels","Highcharts","dateFormat","value","CircularProgress","receiveAmountSeries","sentAmountSeries","push","toAmount","fromAmount","addr","address","TokenTransferCountGraph","getTokenTransfer","userAddress","walletAddress","from","to","getTokenTransferCount","sort","itemA","itemB","totalTransferData","inBoundData","outBoundData","uniqueAddressSent","uniqueAddressReceived","index","totalTransfers","inBoundTransfer","outBoundTransfer","uniqueAddressesSent","uniqueAddressesReceived","AnalyticsTabButton","button","active","Buttonscontainer","TokenAnalytics","React","useState","setGraphData","setLoading","contractAdd","setContractAdd","useEffect","getTokenBalance","values","pageNum","perpage","Utils","TokenData","getHolderDetailsUsingAddressforToken","err","tns","Contract_address","Utility","AccountService","activeTab","setActiveTab","Paper","padding","borderRadius","boxShadow","display","flexFlow","gap","elevation","onClick","DeskTopView","MobileView","PaginationInLine","Pagination","RightPagination","LeftPagination","useStyles","makeStyles","container","borderBottom","background","HolderTableComponent","classes","shorten","b","amountL","stars","slice","repeat","setAddress","setBalance","totalRecord","setTotalRecord","keywords","setKeywords","setReportaddress","downloadaddress","setDownloadaddress","page","setPage","isDownloadActive","setDownloadActive","noData","setNoData","isLoading","sortKey","setSortKey","sortOrder","setSortOrder","rowsPerPage","setRowsPerPage","sortTable","_sortKey","_sortOrder","includes","requestObj","skip","limit","getHolderDetails","handleChangePage","action","pagecount","handleChangeRowsPerPage","event","target","reqObj","responseData","Total_transfes_transactions_Count","parseResponseData","parseFloat","console","Recdata","trxn","JSON","parse","Transfers","responseTransaction","total","d","Txn_Hash","hash","Age","Block","blockNumber","From","To","Value","id","_id","handleKeyUp","searchkeyword","handleChanged","checked","tempAddress","isChecked","filter","TxHash","Amount","tempAddr","className","marginRight","marginTop","placeholder","onKeyPress","e","key","onChange","filename","textAlign","pointerEvents","Grid","lg","TableContainer","Table","TableHead","TableRow","TableCell","border","alt","TableBody","colspan","row","currentTime","Date","previousTime","TimeAge","timeDiff","divideByDecimalValue","decimal","marginleft","href","Tooltip","placement","item","marginLeft","round","ceil","QRCode","CloseIcon","img","isDesktop","HoldersDetails","isAnalytics","URLSearchParams","search","get","toggleState","setToggleState","transactions","copiedText","setCopiedText","holder","setHolderDetail","setContractAddress","setDecimal","holderDetail","getContractDetails","urlPath","ContractData","getContractDetailsUsingAddress","contractDecimal","contractResponse","decimals","toggleTab","flexDirection","tableCell","paddingRight","onCopy","trigger","lockScroll","modal","close","alignItems","innerWidth","Holder_token_balance","class","aria-hidden","TabComponent","trans","module","exports","getHeaders","httpConstants","CONTENT_TYPE","APPLICATION_JSON","process","httpService","METHOD_TYPE","GET","then","success","responseCode","Promise","resolve","reject","catch","symbol","url","API_END_POINT","GET_TOKEN_INFO","requestData","POST","path","GET_TOKEN_BALANCE","GET_ADDRESS_ANALYTICS","GET_TOKEN_TRANSFER_COUNT","GET_TOKEN_OVERVIEW","GET_HISTORY_PRICE","getTotalAccount","getSomeDaysAccount","getLatestAccount","getTokenOverview","getTokenInfo","getAccountList","getAddressAnalytics","PageSelect","Select","PageSelector","handler","displayEmpty","disabled","GET_TOKEN_LIST","searchkey","searchValue","startDate","CoinMarketExchangeForToken","getTokenLists","getTotalToken","getSomeDaysHolders","getTokenSearch","getTransferTransactionDetailsUsingHash","getTotalTransferTransactionsForToken","getListOfTransferTransactionsForToken","getListOfHoldersForToken","getListOfTokenForAddress","Chart","setOptions","lang","rangeSelectorFrom","rangeSelectorTo","rangeSelectorZoom","highcharts","constructorType","theme","paperWidthSm","maxWidth","ConfigureColumnsPopOver","open","isOpen","anchorEl","onClose","handleOnClose","anchorOrigin","vertical","horizontal","transformOrigin","tableColumns","Object","keys","toolTipText","toggleTableColumns","isActive","margin","ConfigureColumnsModal","onModalClose","aria-labelledby","getContractLists","getTotalContractList","getContractSearch","addrr","sortType","txnType","status","getAddressDetail","getAddressDetailWithlimit","getFilteredAddressDetailWithLimit","getFiltersForAccountTransaction","getTransactionSearch","getTransactionsCountForAddress","getAddressStats","Responsive","Show","Record","rootui","tableFirstHeading","paddingLeft","tableFirstData","divider","borderTop","StickyHeadTable","setFrom","amount","setAmount","totalToken","setTotalToken","rows","setRows","visibleTokenCount","setVisibleTokenCount","token","searchKey","getTokenList","handleSearchKeyUp","tokens","totalCount","setAnchorEl","isColumnsModalOpen","setColumnsModal","isSettingColumnOpen","Boolean","handleSettingsClick","currentTarget","toggleModal","amountR","TokenTitle","method","preventDefault","justifyContent","messages","SI_NO","SYMBOL","NAME","CONTRACT","whiteSpace","TOKEN_TOTAL_SUPPLY","HOLDER","totalsupply","totalSupply","supply","convertToInternationalCurrencySystem","supply1","toString","supply2","regex","RegExp","splittedArray","match","supply4","role","tabIndex","navigateToTokenDetails","tokenImage","paddingleft","holdersCount"],"mappings":"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","file":"static/js/25.a88b41f9.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Graph from \"../../common/commonGraph\";\nimport BaseComponent from \"../../baseComponent\";\nimport utility from \"../../../utility\";\nimport accounts from \"../../../services/accounts\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst ProgressBarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-flow: row;\n  margin: 20px;\n`;\n\nconst NoDataFoundContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n  gap: 10px;\n  @media (min-width: 767px) {\n    margin: 100px !important;\n  }\n`;\nexport default function WrappedComponent(props) {\n  const { tn } = useParams();\n  return (\n    <TokenPriceHistoryGraph\n      contractAddress={props.contractAddress}\n      tokenName={tn}\n    />\n  );\n}\n\nclass TokenPriceHistoryGraph extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      tokenName: \"\",\n      graphData: []\n    };\n  }\n\n  componentDidMount = () => {\n    let splitRes = window.location.pathname.split(\"/\");\n    if (splitRes && splitRes.length) {\n      this.setState({ tokenName: splitRes[splitRes.length - 1] });\n    }\n    this.getHistoricalTokenData();\n  };\n\n  getHistoricalTokenData = async () => {\n    this.setState({ loading: true });\n    // const tokenAddress = window.location.pathname.split(\"/\")[2];\n    const tokenAddress = this.props.contractAddress;\n    let request = {\n      tokenAddress: tokenAddress,\n      startTime: moment().subtract(2, \"month\").valueOf(),\n      endTime: moment().valueOf(),\n    };\n    let [error, response] = await utility.parseResponse(\n      accounts.getHistoryPrice(request)\n    );\n    if (error || !response) {\n      this.setState({ loading: false });\n      this.generateGraphData([]);\n      return;\n    }\n    this.setState({ loading: false, graphData: response });\n    this.generateGraphData(response);\n  };\n\n  generateGraphData = (data) => {\n    // const data = [{\n    //     \"tokenAddress\": \"xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1\",\n    //     \"closingTime\": 1641427199000,\n    //     \"openingTime\": 1641340800000,\n    //     \"highValueTime\": 1641391199000,\n    //     \"lowValueTime\": 1641405599000,\n    //     \"openingPrice\": 100,\n    //     \"highestPrice\": 120,\n    //     \"lowestPrice\": 90,\n    //     \"closingPrice\": 105,\n    //     \"volume\": 66994920902.7202,\n    //     \"marketCap\": 4530215218.84018,\n    //     \"timestamp\": 1641340800000\n    // },\n    //     {\n    //         \"tokenAddress\": \"xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1\",\n    //         \"closingTime\": 1641427199000,\n    //         \"openingTime\": 1641340800000,\n    //         \"highValueTime\": 1641391199000,\n    //         \"lowValueTime\": 1641405599000,\n    //         \"openingPrice\": 100,\n    //         \"highestPrice\": 120,\n    //         \"lowestPrice\": 90,\n    //         \"closingPrice\": 120,\n    //         \"volume\": 66994920902.7202,\n    //         \"marketCap\": 4530215218.84018,\n    //         \"timestamp\": 1641487232000\n    //     },\n    //     {\n    //         \"tokenAddress\": \"xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1\",\n    //         \"closingTime\": 1641427199000,\n    //         \"openingTime\": 1641340800000,\n    //         \"highValueTime\": 1641391199000,\n    //         \"lowValueTime\": 1641405599000,\n    //         \"openingPrice\": 100,\n    //         \"highestPrice\": 120,\n    //         \"lowestPrice\": 90,\n    //         \"closingPrice\": 150,\n    //         \"volume\": 66994920902.7202,\n    //         \"marketCap\": 4530215218.84018,\n    //         \"timestamp\": 1641573632000\n    //     }\n    // ]\n    const __this = this;\n    let options = {\n      title: {\n        text: \"\",\n      },\n      chart: {\n        type: \"line\",\n        zoomType: {\n          enabled: false,\n        },\n      },\n      legend: {\n        layout: \"horizontal\",\n        align: \"center\",\n        enabled: true,\n        symbolPadding: 0,\n        symbolWidth: 0,\n        symbolHeight: 0,\n        squareSymbol: false,\n        backgroundColor: \"#FFFFFF\",\n        useHTML: true,\n        labelFormatter: function () {\n          let legend = \"<div style='display:flex; align-items: center;'>\";\n          if (this.name == __this.state.tokenName + \" Daily Price\") {\n            legend +=\n              \"<img style='margin:5px' src='/images/graph-circle-blue.svg' />\";\n          }\n\n          return (legend +=\n            \"<div style='margin:5px 5px 5px 0'>\" +\n            __this.state.tokenName +\n            \" Daily Price\" +\n            \"</div>\" +\n            \"</div>\");\n        },\n      },\n      navigator: {\n        enabled: false,\n      },\n      scrollbar: {\n        enabled: false,\n      },\n      rangeSelector: {\n        enabled: false,\n      },\n      exporting: {\n        buttons: {\n          contextButton: {\n            text: \"Export\",\n            enabled: true,\n          },\n        },\n        enabled: true,\n      },\n      tooltip: {\n        split: false,\n        formatter: function () {\n          let tooltip = moment(this.x).format(\"dddd, MMM D, YYYY\");\n          tooltip += '<br><h2 style=\"font-size:20px\">Daily Price</h2>';\n          tooltip +=\n            \"<br><h2>High - </h2>\" +\n            '<label style=\"font-weight: bold\">' +\n            this.point.highestPrice +\n            \" USD</label>\";\n          tooltip +=\n            \"<br><h2>Low - </h2>\" +\n            '<label style=\"font-weight: bold\">' +\n            this.point.lowestPrice +\n            \" USD</label>\";\n          tooltip +=\n            \"<br><h2>Close - </h2>\" +\n            '<label style=\"font-weight: bold\">' +\n            this.point.closingPrice +\n            \" USD</label>\";\n          return tooltip;\n        },\n      },\n      series: [\n        {\n          data: data.map((obj) => {\n            obj.x = obj.timestamp;\n            obj.y = obj.closingPrice;\n            return obj;\n          }),\n          color: \"rgb(124, 181, 236)\",\n          name: __this.state.tokenName + \" Daily Price\",\n        },\n      ],\n      credits: { enabled: false },\n      yAxis: [\n        {\n          opposite: false,\n          title: { text: __this.state.tokenName + \" Price(USD)\" },\n        },\n      ],\n      xAxis: [\n        {\n          showInLegend: false,\n          opposite: false,\n          title: { text: \"\" },\n        },\n      ],\n    };\n    this.setState({ options });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <ProgressBarContainer>\n            <CircularProgress size={40} />\n          </ProgressBarContainer>\n        ) : (\n          <span>\n            {this.state.graphData.length == 0 ?\n              <NoDataFoundContainer>\n                <img\n                  src={require(\"../../../../src/assets/images/XDC-Alert.svg\")}\n                ></img>\n\n                <div>No Data found.</div>\n              </NoDataFoundContainer>\n              :\n              <Graph options={this.state.options} />\n            }\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Graph from \"../../../common/commonGraph\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Highcharts from \"highcharts/highstock\";\n\nconst NoDataFoundContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n  gap: 10px;\n  @media (min-width: 767px) {\n    margin: 100px !important;\n  }\n`;\n\nfunction TokenBalanceGraphComponent(props) {\n  const graphData = props.graphData.map((data) => {\n    data.x = data.date;\n    data.y = Math.abs(Number(data.currentBalance.toFixed(2)));\n    return data;\n  });\n\n  const options = {\n    title: {\n      text: \"\",\n    },\n    legend: {\n      layout: \"horizontal\",\n      align: \"center\",\n      enabled: true,\n      symbolPadding: 0,\n      symbolWidth: 0,\n      symbolHeight: 0,\n      squareSymbol: false,\n      backgroundColor: \"#FFFFFF\",\n      useHTML: true,\n      labelFormatter: function () {\n        let legend = \"<div style='display:flex; align-items: center;'>\";\n        if (this.name == \"Token Balance\") {\n          legend +=\n            \"<img style='margin:5px' src='/images/graph-circle-blue.svg' />\";\n        }\n\n        return (legend +=\n          \"<div style='margin:5px 5px 5px 0'>\" +\n          this.name +\n          \"</div>\" +\n          \"</div>\");\n      },\n    },\n    navigator: {\n      enabled: false,\n    },\n    scrollbar: {\n      enabled: false,\n    },\n    rangeSelector: {\n      enabled: true,\n      buttons: [\n        {\n          type: \"all\",\n          text: \"All\",\n        },\n        {\n          type: \"year\",\n          count: 1,\n          text: \"1y\",\n        },\n        {\n          type: \"month\",\n          count: 6,\n          text: \"6m\",\n        },\n        {\n          type: \"month\",\n          count: 3,\n          text: \"3m\",\n        },\n        {\n          type: \"month\",\n          count: 1,\n          text: \"1m\",\n        },\n      ],\n      buttonSpacing: 10,\n\n      buttonTheme: {\n        style: {\n          fill: \"none\",\n        },\n        stroke: \"none\",\n        fontWeight: \"bold\",\n        fontSize: 10,\n        width: null,\n        height: 25,\n        \"stroke-width\": 0,\n        r: 5,\n        states: {\n          hover: {\n            fill: \"#4878ff\",\n            style: {\n              color: \"white\",\n            },\n          },\n          select: {\n            fill: \"#4878ff\",\n            style: {\n              color: \"white\",\n            },\n          },\n        },\n      },\n      inputBoxBorderColor: \"#e3e7eb\",\n      inputBoxWidth: 85,\n      inputBoxHeight: 25,\n      inputDateFormat: \"%d-%m-%Y\",\n      inputStyle: {\n        color: \"#2a2a2a\",\n      },\n      labelStyle: {\n        color: \"#252525\",\n        fontWeight: \"bold\",\n        fontSize: 10,\n      },\n    },\n    tooltip: {\n      split: false,\n      shared: true,\n    },\n    series: [\n      {\n        showInLegend: true,\n        data: graphData,\n        name: \"Token Balance\",\n        type: \"line\",\n      },\n    ],\n    credits: { enabled: false },\n    yAxis: [\n      {\n        opposite: false,\n        title: { text: \"Token Balance\" },\n      },\n    ],\n    xAxis: [\n      {\n        showInLegend: false,\n        opposite: false,\n        title: { text: \"\" },\n        labels: {\n          formatter: function () {\n            return Highcharts.dateFormat(\"%d-%m-%Y\", this.value);\n          },\n        },\n      },\n    ],\n  };\n\n  return (\n    <div>\n      {props.loading ? (\n        <props.ProgressBarContainer>\n          <CircularProgress size={40} />\n        </props.ProgressBarContainer>\n      ) : (\n          <span>\n              {props.graphData.length == 0 ?\n                  <NoDataFoundContainer>\n                    <img\n                        src={require(\"../../../../../src/assets/images/XDC-Alert.svg\")}\n                    ></img>\n\n                    <div>No Data found.</div>\n                  </NoDataFoundContainer>\n                  :\n                  <Graph options={options}/>\n              }\n            </span>\n      )}\n    </div>\n  );\n}\n\nexport default TokenBalanceGraphComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Graph from \"../../../common/commonGraph\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Highcharts from \"highcharts/highstock\";\n\n\nconst NoDataFoundContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n  gap: 10px;\n  @media (min-width: 767px) {\n    margin: 100px !important;\n  }\n`;\nfunction TokenBalanceGraphComponent(props) {\n  let receiveAmountSeries = [],\n    sentAmountSeries = [];\n  props.graphData.map((data) => {\n    sentAmountSeries.push({\n      x: data.date,\n      y: data.toAmount,\n    });\n    receiveAmountSeries.push({\n      x: data.date,\n      y: data.fromAmount,\n    });\n  });\n\n  const options = {\n    title: {\n      text: \"\",\n    },\n    chart: {\n      type: \"column\",\n    },\n    legend: {\n      layout: \"horizontal\",\n      align: \"center\",\n      enabled: true,\n      symbolPadding: 0,\n      symbolWidth: 0,\n      symbolHeight: 0,\n      squareSymbol: false,\n      backgroundColor: \"#FFFFFF\",\n      useHTML: true,\n      labelFormatter: function () {\n        let legend = \"<div style='display:flex; align-items: center;'>\";\n        if (this.name == \"Sent (out)\") {\n          legend +=\n            \"<img style='margin:5px' src='/images/graph-triangle.svg' />\";\n        }\n        if (this.name == \"Receive (in)\") {\n          legend +=\n            \"<img style='margin:5px' src='/images/graph-triangle-red.svg' />\";\n        }\n\n        return (legend +=\n          \"<div style='margin:5px 5px 5px 0'>\" +\n          this.name +\n          \"</div>\" +\n          \"</div>\");\n      },\n    },\n    navigator: {\n      enabled: false,\n    },\n    scrollbar: {\n      enabled: false,\n    },\n    rangeSelector: {\n      enabled: true,\n      buttons: [\n        {\n          type: \"all\",\n          text: \"All\",\n        },\n        {\n          type: \"year\",\n          count: 1,\n          text: \"1y\",\n        },\n        {\n          type: \"month\",\n          count: 6,\n          text: \"6m\",\n        },\n        {\n          type: \"month\",\n          count: 3,\n          text: \"3m\",\n        },\n        {\n          type: \"month\",\n          count: 1,\n          text: \"1m\",\n        },\n      ],\n      buttonSpacing: 10,\n\n      buttonTheme: {\n        style: {\n          fill: \"none\",\n        },\n        stroke: \"none\",\n        fontWeight: \"bold\",\n        width: null,\n        height: 25,\n        \"stroke-width\": 0,\n        r: 5,\n        states: {\n          hover: {\n            fill: \"#4878ff\",\n            style: {\n              color: \"white\",\n            },\n          },\n          select: {\n            fill: \"#4878ff\",\n            style: {\n              color: \"white\",\n            },\n          },\n        },\n      },\n      inputBoxBorderColor: \"#e3e7eb\",\n      inputBoxWidth: 85,\n      inputBoxHeight: 25,\n      inputDateFormat: \"%d-%m-%Y\",\n      inputStyle: {\n        color: \"#2a2a2a\",\n      },\n      labelStyle: {\n        color: \"#252525\",\n        fontWeight: \"bold\",\n        fontSize: 10,\n      },\n    },\n    tooltip: {\n      split: false,\n      shared: true,\n    },\n    series: [\n      {\n        showInLegend: true,\n        data: sentAmountSeries,\n        name: \"Sent (out)\",\n      },\n      {\n        showInLegend: true,\n        data: receiveAmountSeries,\n        name: \"Receive (in)\",\n      },\n    ],\n    credits: { enabled: false },\n    yAxis: [\n      {\n        opposite: false,\n        title: { text: \"Transfer Amounts\" },\n      },\n    ],\n    xAxis: [\n      {\n        showInLegend: false,\n        opposite: false,\n        title: { text: \"\" },\n        labels: {\n          formatter: function () {\n            return Highcharts.dateFormat(\"%d-%m-%Y\", this.value);\n          },\n        },\n      },\n    ],\n  };\n\n  return (\n    <div>\n      {props.loading ? (\n        <props.ProgressBarContainer>\n          <CircularProgress size={40} />\n        </props.ProgressBarContainer>\n      ) : (\n          <span>\n              {props.graphData.length == 0 ?\n                  <NoDataFoundContainer>\n                    <img\n                        src={require(\"../../../../../src/assets/images/XDC-Alert.svg\")}\n                    ></img>\n\n                    <div>No Data found.</div>\n                  </NoDataFoundContainer>\n                  :\n                  <Graph options={options}/>\n              }\n            </span>\n      )}\n    </div>\n  );\n}\n\nexport default TokenBalanceGraphComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Graph from \"../../../common/commonGraph\";\nimport BaseComponent from \"../../../baseComponent\";\nimport TokenListComponent from \"../../../tokenList/tokenList\";\nimport utility from \"../../../../utility\";\nimport accounts from \"../../../../services/accounts\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Highcharts from \"highcharts/highstock\";\n\nconst ProgressBarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-flow: row;\n  margin: 20px;\n`;\n\nconst NoDataFoundContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n  gap: 10px;\n  @media (min-width: 767px) {\n    margin: 100px !important;\n  }\n`;\n\nexport default function WrappedComponent(props) {\n  const { addr } = useParams();\n  return (\n    <TokenTransferCountGraph\n      address={addr}\n      contractAddress={props.contractAddress}\n    />\n  );\n}\n\nclass TokenTransferCountGraph extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        loading: false\n      },\n      graphData:[]\n    };\n  }\n\n  componentDidMount = () => {\n    this.getTokenTransfer();\n  };\n\n  async getTokenTransfer() {\n    this.setState({ loading: true });\n    const userAddress = this.props.address;\n    const tokenAddress = this.props.contractAddress;\n    let request = {\n      walletAddress: userAddress,\n      tokenAddress: tokenAddress,\n      from: moment().subtract(2, \"month\").valueOf(),\n      to: moment().valueOf(),\n    };\n    let [error, response] = await utility.parseResponse(\n      accounts.getTokenTransferCount(request)\n    );\n    this.setState({ loading: false });\n    if (error || !response) {\n      this.generateGraphData([]);\n      return;\n    }\n    this.setState({graphData:response})\n    this.generateGraphData(response);\n  }\n\n  generateGraphData(data) {\n    data = data.sort((itemA, itemB) => {\n      return itemA.date - itemB.date;\n    });\n    const totalTransferData = [];\n    const inBoundData = [];\n    const outBoundData = [];\n    const uniqueAddressSent = [];\n    const uniqueAddressReceived = [];\n    for (let index = 0; index < data.length; index++) {\n      const x = data[index].date;\n      totalTransferData.push({ x, y: data[index].totalTransfers });\n      inBoundData.push({ x, y: data[index].inBoundTransfer });\n      outBoundData.push({ x, y: data[index].outBoundTransfer });\n      uniqueAddressSent.push({\n        x,\n        y: data[index].uniqueAddressesSent,\n      });\n      uniqueAddressReceived.push({\n        x,\n        y: data[index].uniqueAddressesReceived,\n      });\n    }\n    let options = {\n      title: {\n        text: \"\",\n      },\n      chart: {\n        type: \"line\",\n      },\n      legend: {\n        layout: \"horizontal\",\n        align: \"center\",\n        enabled: true,\n        symbolPadding: 0,\n        symbolWidth: 0,\n        symbolHeight: 0,\n        squareSymbol: false,\n        backgroundColor: \"#FFFFFF\",\n        useHTML: true,\n        labelFormatter: function () {\n          let legend = \"<div style='display:flex; align-items: center;'>\";\n          if (this.name == \"Outbound Transfers Counts\") {\n            legend +=\n              \"<img style='margin:5px' src='/images/graph-triangle.svg' />\";\n          }\n          if (this.name == \"Inbound Transfers Counts\") {\n            legend +=\n              \"<img style='margin:5px' src='/images/graph-triangle-red.svg' />\";\n          }\n          if (this.name == \"Total Transfers\") {\n            legend +=\n              \"<img style='margin:5px' src='/images/graph-circle-blue.svg' />\";\n          }\n          if (this.name == \"Unique Address Sent\") {\n            legend +=\n              \"<img style='margin:5px' src='/images/graph-triangle.svg' />\";\n          }\n          if (this.name == \"Unique Address Received\") {\n            legend +=\n              \"<img style='margin:5px' src='/images/graph-triangle-red.svg' />\";\n          }\n\n          return (legend +=\n            \"<div style='margin:5px 5px 5px 0'>\" +\n            this.name +\n            \"</div>\" +\n            \"</div>\");\n        },\n      },\n      navigator: {\n        enabled: false,\n      },\n      scrollbar: {\n        enabled: false,\n      },\n      rangeSelector: {\n        enabled: true,\n        buttons: [\n          {\n            type: \"all\",\n            text: \"All\",\n          },\n          {\n            type: \"year\",\n            count: 1,\n            text: \"1y\",\n          },\n          {\n            type: \"month\",\n            count: 6,\n            text: \"6m\",\n          },\n          {\n            type: \"month\",\n            count: 3,\n            text: \"3m\",\n          },\n          {\n            type: \"month\",\n            count: 1,\n            text: \"1m\",\n          },\n        ],\n        buttonSpacing: 10,\n\n        buttonTheme: {\n          style: {\n            fill: \"none\",\n          },\n          stroke: \"none\",\n          fontWeight: \"bold\",\n          width: null,\n          height: 25,\n          \"stroke-width\": 0,\n          r: 5,\n          states: {\n            hover: {\n              fill: \"#4878ff\",\n              style: {\n                color: \"white\",\n              },\n            },\n            select: {\n              fill: \"#4878ff\",\n              style: {\n                color: \"white\",\n              },\n            },\n          },\n        },\n        inputBoxBorderColor: \"#e3e7eb\",\n        inputBoxWidth: 85,\n        inputBoxHeight: 25,\n        inputDateFormat: \"%d-%m-%Y\",\n        inputStyle: {\n          color: \"#2a2a2a\",\n        },\n        labelStyle: {\n          color: \"#252525\",\n          fontWeight: \"bold\",\n          fontSize: 10,\n        },\n      },\n      tooltip: {\n        split: false,\n        shared: true,\n      },\n      series: [\n        {\n          data: totalTransferData,\n          type: \"column\",\n          color: \"rgb(124, 181, 236)\",\n          name: \"Total Transfers\",\n        },\n        {\n          data: outBoundData,\n          type: \"line\",\n          color: \"rgb(67, 67, 72)\",\n          name: \"Outbound Transfers Counts\",\n        },\n        {\n          data: inBoundData,\n          type: \"line\",\n          color: \"rgb(144, 237, 125)\",\n          name: \"Inbound Transfers Counts\",\n        },\n        {\n          data: uniqueAddressSent,\n          type: \"line\",\n          color: \"rgb(247, 163, 92)\",\n          name: \"Unique Address Sent\",\n        },\n        {\n          data: uniqueAddressReceived,\n          type: \"line\",\n          color: \"rgb(128, 133, 233)\",\n          name: \"Unique Address Received\",\n        },\n      ],\n      credits: { enabled: false },\n      yAxis: [\n        {\n          opposite: false,\n          title: { text: \"Transfer Counts\" },\n        },\n      ],\n      xAxis: [\n        {\n          showInLegend: false,\n          opposite: false,\n          title: { text: \"\" },\n          labels: {\n            formatter: function () {\n              return Highcharts.dateFormat(\"%d-%m-%Y\", this.value);\n            },\n          },\n        },\n      ],\n    };\n    this.setState({ options });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <ProgressBarContainer>\n            <CircularProgress size={40} />\n          </ProgressBarContainer>\n        ) : (\n            <span>\n              {this.state.graphData.length == 0 ?\n                  <NoDataFoundContainer>\n                    <img\n                        src={require(\"../../../../../src/assets/images/XDC-Alert.svg\")}\n                    ></img>\n\n                    <div>No Data found.</div>\n                  </NoDataFoundContainer>\n                  :\n                  <Graph options={this.state.options}/>\n              }\n            </span>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport TokenBalanceGraph from \"./tokenBalanceGraph\";\nimport TokenTransferAmount from \"./tokenTransferAmountGraph\";\nimport TokenTransferCount from \"./tokenTransferCount\";\nimport TokeHistoryAnalytics from \"../tokenHistoryAnalytics\";\nimport Utility from \"../../../utility\";\nimport AccountService from \"../../../services/accounts\";\nimport moment from \"moment\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Utils from \"../../../utility\";\nimport TokenData from \"../../../services/token\";\n\nconst AnalyticsTabButton = styled.button`\n  border-radius: 5px;\n  border: 1px solid #d5dae2;\n  background: #fff;\n  color: #77838f;\n  font-weight: 600;\n  height: 35px;\n  ${({ active }) =>\n    active &&\n    `\n    background: #2149b9;\n    color: #fff;\n    border: none;\n  `}\n`;\n\nconst Buttonscontainer = styled.div`\n  padding: 15px 0 0 15px;\n  display: flex;\n  flex-flow: row;\n  gap: 15px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    flex-flow: column;\n    align-items: flex-start;\n    padding: 0 0 0 15px;\n  }\n`;\n\nconst ProgressBarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-flow: row;\n  margin: 20px;\n`;\n\nfunction TokenAnalytics(props) {\n  const [graphData, setGraphData] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [contractAdd, setContractAdd] = React.useState(\"\");\n\n  React.useEffect(async () => {\n    await getTokenBalance();\n  }, []);\n\n  const getTokenBalance = async () => {\n    let values = { addr: props.walletAddress, pageNum: 0, perpage: 1 };\n    let [err, tns] = await Utils.parseResponse(\n      TokenData.getHolderDetailsUsingAddressforToken(values)\n    );\n    if (err || !tns) return;\n    setContractAdd(tns[0]?.Contract_address);\n    setLoading(true);\n    let request = {\n      walletAddress: props.walletAddress,\n      tokenAddress: tns[0]?.Contract_address,\n      from: moment().subtract(3, \"month\").valueOf(),\n      to: moment().valueOf(),\n      type: \"\",\n    };\n    let [error, response] = await Utility.parseResponse(\n      AccountService.getTokenBalance(request)\n    );\n    setLoading(false);\n    if (error || !response) {\n      return [];\n    }\n    setGraphData(response.data);\n  };\n\n  let [activeTab, setActiveTab] = useState(\"tokenBalance\");\n\n  return (\n    <Paper\n      style={{\n        padding: \"15px 10px 0 0\",\n        borderRadius: \"14px\",\n        boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        gap: \"10px\",\n      }}\n      elevation={0}\n    >\n      <Buttonscontainer>\n        <AnalyticsTabButton\n          active={activeTab === \"tokenBalance\" ? true : false}\n          onClick={() => setActiveTab(\"tokenBalance\")}\n        >\n          Token Balance\n        </AnalyticsTabButton>\n        <AnalyticsTabButton\n          active={activeTab === \"tokenTransferAmounts\" ? true : false}\n          onClick={() => setActiveTab(\"tokenTransferAmounts\")}\n        >\n          Token Transfer Amounts\n        </AnalyticsTabButton>\n        <AnalyticsTabButton\n          active={activeTab === \"tokenTransferCounts\" ? true : false}\n          onClick={() => setActiveTab(\"tokenTransferCounts\")}\n        >\n          Token Transfer Counts\n        </AnalyticsTabButton>\n        <AnalyticsTabButton\n          active={activeTab === \"historicalPrice\" ? true : false}\n          onClick={() => setActiveTab(\"historicalPrice\")}\n        >\n          Historical Price\n        </AnalyticsTabButton>\n      </Buttonscontainer>\n      {activeTab === \"tokenBalance\" && (\n        <TokenBalanceGraph\n          graphData={graphData}\n          loading={loading}\n          ProgressBarContainer={ProgressBarContainer}\n        />\n      )}\n      {activeTab === \"tokenTransferAmounts\" && (\n        <TokenTransferAmount\n          graphData={graphData}\n          loading={loading}\n          ProgressBarContainer={ProgressBarContainer}\n        />\n      )}\n      {activeTab === \"tokenTransferCounts\" && (\n        <TokenTransferCount\n          contractAddress={contractAdd}\n          loading={loading}\n          ProgressBarContainer={ProgressBarContainer}\n        />\n      )}\n      {activeTab === \"historicalPrice\" && (\n        <TokeHistoryAnalytics contractAddress={contractAdd} loading={loading} />\n      )}\n    </Paper>\n  );\n}\n\nexport default TokenAnalytics;\n","import React, { useEffect, useState } from \"react\";\nimport \"../../../src/assets/styles/blocksAndTransactionList.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Grid, TableContainer } from \"@material-ui/core\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\nimport moment from \"moment\";\nimport Utility from \"../../utility\";\nimport AddressData from \"../../services/address\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport TokenData from \"../../services/token\";\nimport Loader from \"../../assets/loader\";\nimport format from \"format-number\";\n\nconst DeskTopView = styled.div`\n  @media (min-width: 0px) and (max-width: 1023px) {\n    display: none;\n  }\n\n  @media (min-width: 1024px) {\n    display: visible;\n  }\n`;\n\nconst MobileView = styled.div`\n  @media (min-width: 0px) and (max-width: 1023px) {\n    display: visible;\n  }\n\n  @media (min-width: 1024px) {\n    display: none;\n  }\n`;\nconst PaginationInLine = styled.div`\n  display: flex;\n  width: 75.125rem;\n  justify-content: space-between;\n`;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  /* width: 990px; */\n  margin: auto;\n\n  @media (max-width: 640px) {\n    display: flex;\n    flex-direction: column;\n  }\n  @media (min-width: 641px) and (max-width: 1023px) {\n    display: flex;\n  }\n`;\nconst RightPagination = styled.div`\n  display: flex;\n  margin-top: 20px;\n  flex-direction: row;\n  /* width: 100%; */\n`;\nconst LeftPagination = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 20px;\n`;\n\n\n\nconst useStyles = makeStyles({\n    container: {\n        borderRadius: \"14px\",\n        boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n        borderBottom: \"none\",\n        background: \"#fff\",\n    },\n});\nexport default function HolderTableComponent(props) {\n    const { state } = props;\n    const classes = useStyles();\n\n    function shorten(b, amountL = 10, amountR = 3, stars = 3) {\n        return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\n            b.length - 3,\n            b.length\n        )}`;\n    }\n\n    let { addr } = useParams();\n    const [address, setAddress] = useState([]);\n    const [txtAddress, setTxtAddress] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n    const [transactions, setTransactions] = useState([]);\n    const [totalRecord, setTotalRecord] = useState(0);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const [reportaddress, setReportaddress] = useState([]);\n    const [downloadaddress, setDownloadaddress] = useState([]);\n    const [page, setPage] = React.useState(0);\n    const [isDownloadActive, setDownloadActive] = useState(0);\n    const [noData, setNoData] = useState(false);\n    const [isLoading, setLoading] = useState(true);\n    const [sortKey, setSortKey] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"\");\n    let showPerPage = 10;\n    let datas = {};\n    const [rowsPerPage, setRowsPerPage] = React.useState(showPerPage);\n\n    const sortTable = (_sortKey) => {\n        let _sortOrder = -1;\n        if (sortKey.includes(_sortKey)) {\n            _sortOrder = sortOrder * -1;\n        } else {\n            setSortKey(_sortKey);\n        }\n        setSortOrder(_sortOrder);\n        let requestObj = {\n            skip: 0,\n            limit: rowsPerPage,\n            address: addr,\n            sortKey: { [_sortKey]: _sortOrder }\n        }\n        getHolderDetails(requestObj);\n    }\n\n    const handleChangePage = (action) => {\n        let requestObj = {\n            limit: rowsPerPage,\n            address: addr\n        }\n        if (keywords)\n            requestObj.keywords = keywords;\n        if (action == \"first\") {\n            requestObj.skip = 0;\n            setPage(0);\n        }\n        if (action === \"last\") {\n            let pagecount = totalRecord - rowsPerPage;\n            setPage(pagecount);\n            requestObj.skip = pagecount;\n        }\n\n        if (action === \"next\") {\n            if (rowsPerPage + page < totalRecord) {\n                let pagecount = rowsPerPage + page;\n                setPage(pagecount);\n                requestObj.skip = pagecount;\n            }\n        }\n\n        if (action === \"prev\") {\n            if (page - rowsPerPage >= 0) {\n                let pagecount = page - rowsPerPage;\n                setPage(pagecount);\n                requestObj.skip = pagecount;\n            }\n        }\n        getHolderDetails(requestObj);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(event.target.value);\n        setPage(0);\n        const reqObj = {\n            skip: 0,\n            limit: event.target.value,\n            address: addr,\n        };\n        getHolderDetails(reqObj);\n    };\n    const getHolderDetails = async (data) => {\n        try {\n            if (!data.sortKey && sortKey && sortOrder)\n                data.sortKey = { [sortKey]: sortOrder }\n            const [error, responseData] = await Utility.parseResponse(\n                TokenData.getHolderDetailsUsingAddressforToken(data)\n            );\n\n            if (responseData[0].Total_transfes_transactions_Count > 0) {\n                setLoading(false);\n                setNoData(false);\n                parseResponseData(responseData, 1);\n            } else {\n                setLoading(false);\n                setNoData(true);\n                setBalance(parseFloat(0).toFixed(2));\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    useEffect(() => {\n        datas = {\n            skip: page,\n            limit: rowsPerPage,\n            address: addr,\n        };\n        getHolderDetails(datas);\n    }, []);\n\n    // const getTransactionSearch = async (data) => {\n    //     try {\n    //         const [error, responseData] = await Utility.parseResponse(\n    //             AddressData.getTransactionSearch(data)\n    //         );\n    //\n    //         if (responseData.responseTransaction.length > 0) {\n    //             setNoData(false);\n    //             parseResponseData(responseData, 2);\n    //         } else {\n    //             setNoData(true);\n    //             setBalance(parseFloat(0).toFixed(2));\n    //         }\n    //     } catch (error) {\n    //         console.error(error);\n    //     }\n    // };\n\n    const parseResponseData = async (Recdata, type) => {\n        let trxn = [];\n        if (type == 1) {\n            trxn = JSON.parse(Recdata[0].Transfers);\n            setTotalRecord(Recdata[0].Total_transfes_transactions_Count);\n        } else {\n            trxn = Recdata.responseTransaction;\n            setTotalRecord(Recdata.total);\n        }\n\n        setAddress(\n            trxn.map((d) => {\n                return {\n                    Txn_Hash: d.hash,\n                    Age: d.timestamp,\n                    Block: d.blockNumber,\n                    From: d.from,\n                    To: d.to,\n                    Value: d.value,\n                    id: d._id,\n                };\n            })\n        );\n\n        setReportaddress(\n            trxn.map((d) => {\n                return {\n                    Txn_Hash: d.hash,\n                    Age: d.timestamp,\n                    Block: d.blockNumber,\n                    From: d.from,\n                    To: d.to,\n                    Value: d.value / 1000000000000000000,\n                };\n            })\n        );\n        setDownloadaddress(\n            trxn.map((d) => {\n                return {\n                    Txn_Hash: d.hash,\n                    Age: moment(d.timestamp * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\n                    Block: d.blockNumber,\n                    From: d.from,\n                    To: d.to,\n                    Value: d.value / 1000000000000000000,\n                };\n            })\n        );\n    };\n    const handleKeyUp = (event) => {\n        let searchkeyword = event.target.value;\n        setSortKey(0)\n        setSortOrder(0)\n        setPage(0);\n        if (searchkeyword.length > 2) {\n            setKeywords(searchkeyword);\n            datas = {\n                skip: 0,\n                limit: rowsPerPage,\n                address: addr,\n                keywords: searchkeyword,\n            };\n            getHolderDetails(datas);\n        }\n        if (searchkeyword.length == 0) {\n            setPage(0);\n            datas = {\n                skip: 0,\n                limit: rowsPerPage,\n                address: addr,\n            };\n            getHolderDetails(datas);\n        }\n    };\n\n    const handleChanged = (event) => {\n        const { name, checked } = event.target;\n        if (name === \"allselect\") {\n            let tempAddress = address.map((addr) => {\n                return { ...addr, isChecked: checked };\n            });\n            setAddress(tempAddress);\n            let tempAddr = tempAddress.filter((addr) => {\n                if (addr.isChecked === true) {\n                    return addr;\n                }\n            });\n            if (tempAddr.length > 0) {\n                setDownloadActive(1);\n            } else {\n                setDownloadActive(0);\n            }\n\n            setDownloadaddress(\n                tempAddress.map((d) => {\n                    return {\n                        TxHash: d.Txn_Hash,\n                        Age: moment(d.Age * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\n                        Block: d.Block,\n                        From: d.From,\n                        To: d.To,\n                        Amount: d.Value,\n                    };\n                })\n            );\n        } else {\n            let tempAddress = address.map((addr) =>\n                addr.id === name ? { ...addr, isChecked: checked } : addr\n            );\n            setAddress(tempAddress);\n            let tempAddr = tempAddress.filter((addr) => {\n                if (addr.isChecked === true) {\n                    return addr;\n                }\n            });\n            if (tempAddr.length > 0) {\n                setDownloadActive(1);\n            } else {\n                setDownloadActive(0);\n            }\n            setDownloadaddress(\n                tempAddr.map((d) => {\n                    return {\n                        TxHash: d.Txn_Hash,\n                        Age: moment(d.Age * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\n                        Block: d.Block,\n                        From: d.From,\n                        To: d.To,\n                        Amount: d.Value,\n                    };\n                })\n            );\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"content_input_all\">\n                <div className=\"searchelement-input3\">\n                    <img\n                        style={{ width: 18, height: 18, marginRight: 5, marginTop: 7 }}\n                        src={\"/images/Search.svg\"}\n                    />\n                    <input\n                        className=\"account-searchbar\"\n                        type=\"text\"\n                        placeholder=\"Search Transaction\"\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\") {\n                                handleKeyUp(e);\n                            }\n                        }}\n                        onChange={(e) => {\n                            if (e.target.value == \"\") {\n                                handleKeyUp(e);\n                            }\n                        }}\n                    />\n                </div>\n\n                {isDownloadActive ? (\n                    <CSVLink\n                        filename={\"transactions.csv\"}\n                        data={downloadaddress}\n                        style={{\n                            fontSize: \"0.938rem\",\n                            color: \"#ffffff\",\n                            textAlign: \"center\",\n                            backgroundColor: \"rgb(7 125 245)\",\n                            borderRadius: \"4px\",\n                            width: \"5.875rem\",\n                            height: \"2.125rem\",\n                        }}\n                    >\n                        Export\n                    </CSVLink>\n                ) : (\n                    <CSVLink\n                        filename={\"transactions.csv\"}\n                        data={downloadaddress}\n                        style={{\n                            pointerEvents: \"none\",\n                            fontSize: \"15px\",\n                            textAlign: \"center\",\n                            color: \"#ffffff\",\n                            backgroundColor: \"#e3e7eb\",\n                            borderRadius: \"4px\",\n                            width: \"94px\",\n                            height: \"30px\",\n                        }}\n                    >\n                        Export\n                    </CSVLink>\n                )}\n            </div>\n\n            <Grid lg={13} className=\"tablegrid_address\">\n                <Paper style={{ borderRadius: \"14px\" }} elevation={0}>\n                    <TableContainer\n                        className={classes.container}\n                        id=\"container-table-holder\"\n                    >\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                                        <input\n                                            onChange={handleChanged}\n                                            type=\"checkbox\"\n                                            name=\"allselect\"\n                                            checked={\n                                                address.filter((addr) => addr?.isChecked == true)\n                                                    .length == address.length\n                                            }\n                                            style={{ marginRight: \"8px\" }}\n                                        />\n                                        <span onClick={() => sortTable(\"hash\")}>\n                                            <span className={\"tableheader\"} >Transaction Hash</span>\n                                            {sortKey && sortOrder && sortKey == \"hash\" ? (sortOrder === -1 ? <img\n                                                alt=\"question-mark\"\n                                                src=\"/images/see-more.svg\"\n                                                height={\"14px\"}\n                                                className=\"tooltipInfoIcon\"\n                                            /> :\n                                                <img\n                                                    alt=\"question-mark\"\n                                                    src=\"/images/see-more.svg\"\n                                                    height={\"14px\"}\n                                                    className=\"tooltipInfoIcon rotate-180\"\n                                                />) : \"\"}\n                                        </span>\n                                    </TableCell>\n                                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                                        <span className={\"tableheader mar-right-45 mar-right-40\"} onClick={() => sortTable(\"timestamp\")}>\n                                            Age\n                                            {sortKey && sortOrder && sortKey == \"timestamp\" ? (sortOrder === -1 ? <img\n                                                alt=\"question-mark\"\n                                                src=\"/images/see-more.svg\"\n                                                height={\"14px\"}\n                                                className=\"tooltipInfoIcon\"\n                                            /> :\n                                                <img\n                                                    alt=\"question-mark\"\n                                                    src=\"/images/see-more.svg\"\n                                                    height={\"14px\"}\n                                                    className=\"tooltipInfoIcon rotate-180\"\n                                                />) : \"\"}\n                                        </span>\n                                    </TableCell>\n                                    <TableCell style={{ border: \"none\" }} align=\"left\" onClick={() => sortTable(\"blockNumber\")}>\n                                        <span className={\"tableheader\"}>Block</span>\n                                        {sortKey && sortOrder && sortKey == \"blockNumber\" ? (sortOrder === -1 ? <img\n                                            alt=\"question-mark\"\n                                            src=\"/images/see-more.svg\"\n                                            height={\"14px\"}\n                                            className=\"tooltipInfoIcon\"\n                                        /> :\n                                            <img\n                                                alt=\"question-mark\"\n                                                src=\"/images/see-more.svg\"\n                                                height={\"14px\"}\n                                                className=\"tooltipInfoIcon rotate-180\"\n                                            />) : \"\"}\n                                    </TableCell>\n                                    <TableCell style={{ border: \"none\" }} align=\"left\" onClick={() => sortTable(\"from\")}>\n                                        <span className={\"tableheader\"}>From</span>\n                                        {sortKey && sortOrder && sortKey == \"from\" ? (sortOrder === -1 ? <img\n                                            alt=\"question-mark\"\n                                            src=\"/images/see-more.svg\"\n                                            height={\"14px\"}\n                                            className=\"tooltipInfoIcon\"\n                                        /> :\n                                            <img\n                                                alt=\"question-mark\"\n                                                src=\"/images/see-more.svg\"\n                                                height={\"14px\"}\n                                                className=\"tooltipInfoIcon rotate-180\"\n                                            />) : \"\"}\n                                    </TableCell>\n                                    <TableCell style={{ border: \"none\" }} align=\"left\" onClick={() => sortTable(\"to\")}>\n                                        <span className={\"tableheader\"}>To</span>\n                                        {sortKey && sortOrder && sortKey == \"to\" ? (sortOrder === -1 ? <img\n                                            alt=\"question-mark\"\n                                            src=\"/images/see-more.svg\"\n                                            height={\"14px\"}\n                                            className=\"tooltipInfoIcon\"\n                                        /> :\n                                            <img\n                                                alt=\"question-mark\"\n                                                src=\"/images/see-more.svg\"\n                                                height={\"14px\"}\n                                                className=\"tooltipInfoIcon rotate-180\"\n                                            />) : \"\"}\n                                    </TableCell>\n                                    <TableCell style={{ border: \"none\" }} align=\"left\" onClick={() => sortTable(\"value\")}>\n                                        <span className={\"tableheader\"}>Amount</span>\n                                        {sortKey && sortOrder && sortKey == \"value\" ? (sortOrder === -1 ? <img\n                                            alt=\"question-mark\"\n                                            src=\"/images/see-more.svg\"\n                                            height={\"14px\"}\n                                            className=\"tooltipInfoIcon\"\n                                        /> :\n                                            <img\n                                                alt=\"question-mark\"\n                                                src=\"/images/see-more.svg\"\n                                                height={\"14px\"}\n                                                className=\"tooltipInfoIcon rotate-180\"\n                                            />) : \"\"}\n                                    </TableCell>\n                                    {/* <TableCell style={{ border: \"none\", paddingLeft: \"2.5%\" }} align=\"left\"><span className={\"tableheaders\"}>Txn Fee</span></TableCell> */}\n                                </TableRow>\n                            </TableHead>\n                            {isLoading == true ? (\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell style={{ border: \"none\" }} colspan=\"6\">\n                                            <div className=\"loader-address-details-list\">\n                                                <Loader />\n                                            </div>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            ) : (\n                                noData == false && (\n                                    <TableBody>\n                                        {address.map((row, index) => {\n                                            const currentTime = new Date();\n                                            const previousTime = new Date(row.Age * 1000);\n                                            const TimeAge = Utility.timeDiff(currentTime, previousTime);\n                                            const value = Utility.divideByDecimalValue(\n                                                row.Value,\n                                                Number(props?.decimal)\n                                            );\n\n                                            return (\n                                                <TableRow\n                                                    style={\n                                                        index % 2 !== 1\n                                                            ? { background: \"#f9f9f9\" }\n                                                            : { background: \"white\" }\n                                                    }\n                                                >\n                                                    <TableCell\n                                                        style={{ border: \"none\", width: \"22%\" }}\n                                                        marginleft=\"5px\"\n                                                    >\n                                                        <div className=\"dis-flex input_12\">\n                                                            {\" \"}\n                                                            <input\n                                                                key={row.id}\n                                                                name={row.id}\n                                                                onChange={handleChanged}\n                                                                type=\"checkbox\"\n                                                                checked={row?.isChecked || false}\n                                                                style={{ marginRight: \"8px\" }}\n                                                            />\n                                                            <a\n                                                                className=\"linkTable\"\n                                                                href={\"/transaction-details/\" + row.Txn_Hash}\n                                                            >\n                                                                <Tooltip placement=\"top\" title={row.Txn_Hash}>\n                                                                    <span className=\"tabledata\">\n                                                                        {shorten(row.Txn_Hash)}{\" \"}\n                                                                    </span>\n                                                                </Tooltip>\n                                                            </a>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        style={{ border: \"none\", width: \"17%\" }}\n                                                        align=\"left\"\n                                                    >\n                                                        <span className=\"tabledata\">{TimeAge}</span>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        style={{ border: \"none\", width: \"15%\" }}\n                                                        align=\"left\"\n                                                    >\n                                                        <a\n                                                            className=\"linkTable\"\n                                                            href={\"/block-details/\" + row.Block}\n                                                        >\n                                                            <span className=\"tabledata\">{row.Block}</span>\n                                                        </a>\n                                                    </TableCell>\n                                                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                                                        {row.From != addr ? (\n                                                            <a\n                                                                className=\"linkTable\"\n                                                                href={\"/address-details/\" + row.From}\n                                                            >\n                                                                <Tooltip placement=\"top\" title={row.From}>\n                                                                    <span className=\"tabledata\">\n                                                                        {\" \"}\n                                                                        {shorten(row.From)}\n                                                                    </span>\n                                                                </Tooltip>\n                                                            </a>\n                                                        ) : (\n                                                            <Tooltip placement=\"top\" title={row.From}>\n                                                                <span className=\"tabledata\">\n                                                                    {\" \"}\n                                                                    {shorten(row.From)}\n                                                                </span>\n                                                            </Tooltip>\n                                                        )}\n                                                    </TableCell>\n                                                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                                                        {row.To != addr ? (\n                                                            <a\n                                                                className=\"linkTable\"\n                                                                href={\"/address-details/\" + row.To}\n                                                            >\n                                                                <Tooltip placement=\"top\" title={row.To}>\n                                                                    <span className=\"tabledata\">\n                                                                        {shorten(row.To)}\n                                                                    </span>\n                                                                </Tooltip>\n                                                            </a>\n                                                        ) : (\n                                                            <Tooltip placement=\"top\" title={row.To}>\n                                                                <span className=\"tabledata\">\n                                                                    {shorten(row.To)}\n                                                                </span>\n                                                            </Tooltip>\n                                                        )}\n                                                    </TableCell>\n                                                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                                                        <span className=\"tabledata\">\n                                                            {Number(value) === Number(row.Value)\n                                                                ? 0\n                                                                : format({})(parseFloat(value))}\n                                                        </span>\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                )\n                            )}\n                            {noData == true && (\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell\n                                            id=\"td\"\n                                            colspan=\"6\"\n                                            style={{ borderBottom: \"none\" }}\n                                        >\n                                            <span className=\"tabledata\" style={{ color: \"red\" }}>\n                                                No transaction found.\n                                            </span>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                </Paper>\n                <DeskTopView>\n                    <Grid container style={{ marginTop: \"2.25rem\" }}>\n                        <PaginationInLine>\n                            <Grid item style={{ width: \"12.5rem\" }}>\n                                <span className=\"text\">Show</span>\n                                <select\n                                    value={rowsPerPage}\n                                    className=\"select-amount\"\n                                    onChange={handleChangeRowsPerPage}\n                                >\n                                    <option value={10}>10</option>\n                                    <option value={25}>25</option>\n                                    <option value={50}>50</option>\n                                    <option value={75}>75</option>\n                                    <option value={100}>100</option>\n                                </select>\n                                <span className=\"text\">Records</span>\n                            </Grid>\n\n                            <Grid>\n                                <button\n                                    style={{ marginLeft: \"0px\" }}\n                                    onClick={() => handleChangePage(\"first\")}\n                                    className={page === 0 ? \"btn disabled\" : \"btn\"}\n                                >\n                                    First\n                                </button>\n                                <button\n                                    onClick={() => handleChangePage(\"prev\")}\n                                    className={page === 0 ? \"btn disabled\" : \"btn\"}\n                                >\n                                    {\"<\"}\n                                </button>\n                                <button className=\"btn\">\n                                    Page{\" \"}\n                                    {Math.round(totalRecord / rowsPerPage) +\n                                        1 -\n                                        Math.round((totalRecord - page) / rowsPerPage)}\n                                    &nbsp;of {Math.ceil(totalRecord / rowsPerPage)}\n                                </button>\n                                <button\n                                    onClick={() => handleChangePage(\"next\")}\n                                    className={\n                                        page + rowsPerPage === totalRecord ? \"btn disabled\" : \"btn\"\n                                    }\n                                >\n                                    {\">\"}\n                                </button>\n                                <button\n                                    onClick={() => handleChangePage(\"last\")}\n                                    className={\n                                        page + rowsPerPage === totalRecord ? \"btn disabled\" : \"btn\"\n                                    }\n                                >\n                                    Last\n                                </button>\n                            </Grid>\n                        </PaginationInLine>\n                    </Grid>\n                </DeskTopView>\n                <MobileView>\n                    <Pagination>\n                        <LeftPagination>\n                            <span className=\"text\">Show</span>\n                            <select\n                                value={rowsPerPage}\n                                className=\"select-amount\"\n                                onChange={handleChangeRowsPerPage}\n                            >\n                                <option value={10}>10</option>\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={75}>75</option>\n                                <option value={100}>100</option>\n                            </select>\n                            <span className=\"text\">Records</span>\n                        </LeftPagination>\n\n                        <RightPagination className=\"pagiantion-11\">\n                            <button\n                                id=\"btn_12\"\n                                style={{ marginLeft: \"0px\" }}\n                                onClick={() => handleChangePage(\"first\")}\n                                className={page === 0 ? \"btn disabled\" : \"btn\"}\n                            >\n                                First\n                            </button>\n                            <button\n                                id=\"btn_12\"\n                                onClick={() => handleChangePage(\"prev\")}\n                                className={page === 0 ? \"btn disabled\" : \"btn\"}\n                            >\n                                {\"<\"}\n                            </button>\n                            <button id=\"btn_12\" className=\"btn w-100\">\n                                <div className=\"txt-center\">\n                                    Page\n                                    {Math.round(totalRecord / rowsPerPage) +\n                                        1 -\n                                        Math.round((totalRecord - page) / rowsPerPage)}{\" \"}\n                                    &nbsp;of {Math.round(totalRecord / rowsPerPage)}\n                                </div>\n                            </button>\n                            <button\n                                id=\"btn_12\"\n                                onClick={() => handleChangePage(\"next\")}\n                                className={\n                                    page + rowsPerPage === totalRecord ? \"btn disabled\" : \"btn\"\n                                }\n                            >\n                                {\">\"}\n                            </button>\n                            <button\n                                id=\"btn_12\"\n                                onClick={() => handleChangePage(\"last\")}\n                                className={\n                                    page + rowsPerPage === totalRecord ? \"btn disabled\" : \"btn\"\n                                }\n                            >\n                                Last\n                            </button>\n                        </RightPagination>\n                    </Pagination>\n                </MobileView>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"../../assets/styles/custom.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\nimport FooterComponent from \"../common/footerComponent\";\nimport HolderTableComponent from \"./holderTable\";\nimport { ImQrcode } from \"react-icons/im\";\nimport Popup from \"reactjs-popup\";\nimport { Grid, TableContainer } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\nimport Utils from \"../../utility\";\nimport TokenData from \"../../services/token\";\nimport { Row } from \"simple-flexbox\";\nimport format from \"format-number\";\nimport ContractData from \"../../services/contract\";\nimport HolderAnalytics from \"../token/holderAnalytics/analyticsComponent\";\n\nvar QRCode = require(\"qrcode.react\");\n\nconst DeskTopView = styled.div`\n  @media (min-width: 0px) and (max-width: 640px) {\n    display: none;\n  }\n\n  @media (min-width: 641px) {\n    display: visible;\n  }\n`;\n\nconst MobileView = styled.div`\n  @media (min-width: 0px) and (max-width: 640px) {\n    display: visible;\n  }\n\n  @media (min-width: 641px) {\n    display: none;\n  }\n`;\nconst CloseIcon = styled.img`\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n  @media (min-width: 0) and (max-width: 768px) {\n    margin-left: 18rem;\n    width: 10.6px;\n    height: 10.8px;\n    // margin-right: 20px;\n    display: ${(props) => (props.isDesktop ? \"none\" : \"block\")};\n  }\n  @media (min-width: 768px) {\n    display: ${(props) => (props.isDesktop ? \"block\" : \"none\")};\n  }\n`;\n\nconst useStyles = makeStyles({\n  container: {\n    borderRadius: \"14px\",\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n    borderBottom: \"none\",\n    background: \"#fff\",\n    // width: \"75.125rem\"\n  },\n  \"@media (max-width: 767px)\": {\n    container: {\n      padding: \"0 15px\",\n    },\n  }\n});\nexport default function HoldersDetails(props) {\n  const urlParams = new URLSearchParams(window.location.search);\n  const isAnalytics = urlParams.get(\"isAnalytics\");\n  const [toggleState, setToggleState] = useState(\n    isAnalytics === \"true\" ? 2 : 1\n  );\n\n  const [transactions, setTransactions] = useState([]);\n\n  const [copiedText, setCopiedText] = useState(\"\");\n\n  const [holder, setHolderDetail] = useState(0);\n  const [contractAddress, setContractAddress] = useState(0);\n  const [decimal, setDecimal] = useState(0);\n  const { addr } = useParams();\n  const { tn } = useParams();\n\n  useEffect(() => {\n    let values = { address: addr, skip: 0, limit: 1 };\n    holderDetail(values);\n    if (holder !== 0) {\n      getContractDetails();\n    }\n  }, [contractAddress]);\n\n  const getContractDetails = async () => {\n    let urlPath = `${contractAddress}`;\n    let [error, contractDecimal] = await Utils.parseResponse(\n      ContractData.getContractDetailsUsingAddress(urlPath, {})\n    );\n    if (error || !contractDecimal) return;\n    setDecimal(contractDecimal.contractResponse?.decimals);\n  };\n\n  const holderDetail = async (values) => {\n    let [error, tns] = await Utils.parseResponse(\n      TokenData.getHolderDetailsUsingAddressforToken(values)\n    );\n    if (error || !tns) return;\n    setHolderDetail(tns);\n    setContractAddress(tns[0]?.Contract_address);\n  };\n\n  const toggleTab = (index) => {\n    setToggleState(index);\n  };\n  const classes = useStyles();\n\n  return (\n    <>\n      <DeskTopView>\n        <div style={{ backgroundColor: \"#fff\" }}>\n          <Tokensearchbar />\n          <Grid className=\"table-grid-block grid-block-table_11\">\n            <div\n              className=\"block_details_heading\"\n              style={{ display: \"flex\", flexDirection: \"row\" }}\n            >\n              <p className=\"block_details_heading_left\">Holder Details</p>\n            </div>\n            <Paper style={{ borderRadius: \"14px\" }} elevation={0}>\n              <TableContainer\n                className={classes.container}\n                id=\"container-table\"\n              >\n                <Table>\n                  <TableHead>\n                    <TableRow >\n                      <TableCell\n                        className={classes.tableCell}\n                        style={{\n                          width: \"0px\",\n                          paddingRight: \"1px\",\n                        }}\n                        id=\"td\"\n                      />\n                      <TableCell className=\"first-row-table_address1\">\n                        Holder\n                      </TableCell>\n                      <TableCell className=\"second-row-table_address1\">\n                        {addr}\n                      </TableCell>\n                      <TableCell>\n                        <div>\n                          <CopyToClipboard\n                            text={addr}\n                            onCopy={() => setCopiedText(addr)}\n                          >\n                            <Tooltip\n                              title={\n                                copiedText === addr\n                                  ? \"Copied\"\n                                  : \"Copy To Clipboard\"\n                              }\n                              placement=\"top\"\n                            >\n                              <button\n                                style={{\n                                  color: \"blue\",\n                                  backgroundColor: \"white\",\n                                  fontSize: 14,\n                                  marginLeft: \"25px\",\n                                }}\n                              >\n                                {\" \"}\n                                <img alt=\"copy\" src={\"/images/copy.svg\"} />{\" \"}\n                              </button>\n                            </Tooltip>\n                          </CopyToClipboard>\n                          <Popup\n                            trigger={<ImQrcode className=\"imQrcode\" />}\n                            lockScroll\n                            modal\n                          >\n                            {(close) => (\n                              <div className=\"popup_qr\">\n                                <CloseIcon\n                                  isDesktop={false}\n                                  src=\"/images/XDC-Cross.svg\"\n                                  // className=\"qrClose\"\n                                  onClick={close}\n                                />\n                                <p>\n                                  <div>\n                                    <div className=\"header-popup\">\n                                      <Row alignItems=\"center\">{addr}</Row>\n                                      <CloseIcon\n                                        isDesktop={true}\n                                        src=\"/images/XDC-Cross.svg\"\n                                        // className=\"qrClose\"\n                                        onClick={close}\n                                      />\n                                      {/* &times; */}\n                                      {/* </img> */}\n                                    </div>\n                                    {window.innerWidth > 767 ? (\n                                      <QRCode\n                                        size={320}\n                                        style={{\n                                          height: 400,\n                                          width: 400,\n                                          marginTop: \"0.625rem\",\n                                        }}\n                                        value={addr}\n                                      />\n                                    ) : (\n                                      <QRCode\n                                        // style={{window.innerWidth > 768 ? '800px' : '400px'}}\n                                        size={320}\n                                        className=\"qrcode-label\"\n                                        //style={{ height: 400, width: 400, marginTop: '0.625rem' }}\n                                        value={addr}\n                                      />\n                                    )}\n                                  </div>\n                                </p>\n                              </div>\n\n                              // <div className=\"popup_qr\">\n                              //   <p>\n                              //     <div>\n                              //       <button style={{ outline: 'none', width: '0px', height: '0px', marginLeft: \"0px\", paddingTop: '1.5rem' }} className=\"close\" onClick={close}>\n                              //         &times;\n                              //       </button>\n                              //       <div className=\"header\" style={{ fontSize: '0.875rem', paddingTop: '1.563rem', paddingBottom: '60px' }}> {addr} </div>\n                              //       <QRCode size={320} style={{ height: 400, width: 400 }} value={addr} />\n                              //     </div>\n                              //   </p>\n                              // </div>\n                            )}\n                          </Popup>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        style={{\n                          width: \"0px\",\n                          paddingRight: \"1px\",\n                        }}\n                        id=\"td\"\n                      />\n                      <TableCell className=\"first-row-table_address-balance\">\n                        Balance\n                      </TableCell>\n                      <TableCell className=\"second-row-table_address-balance\">\n                        {format({})(holder[0]?.Holder_token_balance)} {tn}\n                        {/* ({ReactHtmlParser(convertCurrency)} {coinValue}) */}\n                      </TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        style={{\n                          width: \"0px\",\n                          paddingRight: \"1px\",\n                        }}\n                        id=\"td\"\n                      />\n                      <TableCell className=\"first-row-table_address-balance\">\n                        Transfers\n                      </TableCell>\n                      <TableCell className=\"second-row-table_address-balance\">\n                        {holder[0]?.Total_transfes_transactions_Count}\n                      </TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        style={{\n                          width: \"0px\",\n                          paddingRight: \"1px\",\n                          borderBottom: \"none\",\n                        }}\n                        id=\"td\"\n                      />\n                      <TableCell className=\"first-row-table_address\">\n                        Contract Address\n                      </TableCell>\n                      <TableCell className=\"second-row-table_address\">\n                        {holder[0]?.Contract_address}\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n            </Paper>\n            <br />\n            <br />\n            <TabComponent\n              toggleTab={toggleTab}\n              toggleState={toggleState}\n              transactions={transactions}\n              decimal={decimal}\n              contractAddress={contractAddress}\n              addr={addr}\n            />\n          </Grid>\n          <FooterComponent />\n        </div>\n      </DeskTopView>\n      <MobileView>\n        <div style={{ backgroundColor: \"#fff\" }}>\n          <Tokensearchbar />\n          <Grid lg={8} className=\"table-grid-block\">\n            <div\n              className=\"holder-detail-table\"\n            >\n              <p className=\"block_details_heading_left  fs-15\">\n                Holder Details\n              </p>\n            </div>\n            <Paper\n              className=\"holder-detail-table\"\n              elevation={0}\n            >\n              <TableContainer\n                className={classes.container}\n                id=\"container-table-holder-mob\"\n              >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {/* <TableCell\n                    style={{\n                      width: \"0px\",\n                      paddingRight: \"1px\",\n\n                    }}\n                    id=\"td\"\n                  /> */}\n                      <TableCell className=\"first-row-table_address1\">\n                        Holder\n                        <div className=\"sec-row-table\">\n                          <div className=\"word-break\">\n                            {\" \"}\n                            {addr}\n                            <CopyToClipboard\n                              text={addr}\n                              onCopy={() => setCopiedText(addr)}\n                            >\n                              <Tooltip\n                                title={\n                                  copiedText === addr\n                                    ? \"Copied\"\n                                    : \"Copy To Clipboard\"\n                                }\n                                placement=\"top\"\n                              >\n                                <button\n                                  style={{\n                                    color: \"blue\",\n                                    backgroundColor: \"white\",\n                                    fontSize: 14,\n                                    marginLeft: \"25px\",\n                                  }}\n                                >\n                                  <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\n                                </button>\n                              </Tooltip>\n                            </CopyToClipboard>\n                            <Popup\n                              trigger={<ImQrcode className=\"imQrcode\" />}\n                              lockScroll\n                              modal\n                            >\n                              {(close) => (\n                                <div className=\"popup_qr\">\n                                  <CloseIcon\n                                    isDesktop={false}\n                                    src=\"/images/XDC-Cross.svg\"\n                                    // className=\"qrClose\"\n                                    onClick={close}\n                                  />\n                                  <p>\n                                    <div>\n                                      <div className=\"header-popup\">\n                                        <Row alignItems=\"center\">{addr}</Row>\n                                        <CloseIcon\n                                          isDesktop={true}\n                                          src=\"/images/XDC-Cross.svg\"\n                                          // className=\"qrClose\"\n                                          onClick={close}\n                                        />\n                                        {/* &times; */}\n                                        {/* </img> */}\n                                      </div>\n                                      {window.innerWidth > 767 ? (\n                                        <QRCode\n                                          size={320}\n                                          style={{\n                                            height: 400,\n                                            width: 400,\n                                            marginTop: \"0.625rem\",\n                                          }}\n                                          value={addr}\n                                        />\n                                      ) : (\n                                        <QRCode\n                                          // style={{window.innerWidth > 768 ? '800px' : '400px'}}\n                                          size={320}\n                                          className=\"qrcode-label\"\n                                          //style={{ height: 400, width: 400, marginTop: '0.625rem' }}\n                                          value={addr}\n                                        />\n                                      )}\n                                    </div>\n                                  </p>\n                                </div>\n                              )}\n                            </Popup>\n                            {/* <Popup\n                              trigger={\n                                <ImQrcode\n                                  style={{\n                                    marginLeft: \"10px\",\n                                    marginBottom: \"2px\",\n                                    cursor: \"pointer\",\n                                  }}\n                                />\n                              }\n                              modal\n                            >\n                              {(close) => (\n                                <div className=\"popup_qr\">\n                                  <p>\n                                    <div>\n                                      <button\n                                        style={{\n                                          outline: \"none\",\n                                          width: \"0px\",\n                                          height: \"0px\",\n                                          marginLeft: \"0px\",\n                                        }}\n                                        className=\"close\"\n                                        onClick={close}\n                                      >\n                                        &times;\n                                      </button>\n                                      <div\n                                        className=\"header\"\n                                        style={{\n                                          fontSize: \"11.5px\",\n                                          paddingTop: \"5px\",\n                                          paddingBottom: \"22px\",\n                                        }}\n                                      >\n                                        {\" \"}\n                                        {addr}{\" \"}\n                                      </div>\n                                      <QRCode\n                                        size={320}\n                                        style={{ height: 320, width: 320 }}\n                                        value={addr}\n                                      />\n                                    </div>\n                                  </p>\n                                </div>\n                              )}\n                            </Popup> */}\n                          </div>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                      <TableCell className=\"first-row-table_address-balance\">\n                        Balance\n                        <div className=\"sec-row-table\">\n                          {\" \"}\n                          {holder[0]?.Holder_token_balance} XDC\n                          {/* ({ReactHtmlParser(convertCurrency)} {coinValue}) */}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                      <TableCell className=\"first-row-table_address-balance\">\n                        Transfers\n                        <div className=\"sec-row-table\">\n                          {\" \"}\n                          {holder[0]?.Total_transfes_transactions_Count}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell className=\"first-row-table_address\">\n                        Contract Address\n                        <div className=\"sec-row-table\">\n                          {holder[0]?.Contract_address}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n            </Paper>\n            <br />\n            <br />\n            <TabComponent\n              toggleTab={toggleTab}\n              toggleState={toggleState}\n              transactions={transactions}\n              decimal={decimal}\n              contractAddress={contractAddress}\n              addr={addr}\n            />\n            {/* <div className=\"container_sec\">\n              <div className=\"block_sec\">\n                <div className=\"bloc-tabs_sec\">\n                  <button\n                    className={\n                      toggleState === 1\n                        ? \"tabs_sec active-tabs_sec\"\n                        : \"tabs_sec\"\n                    }\n                    onClick={() => toggleTab(1)}\n                  >\n                    Transfers\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"content-tabs_sec\">\n                <div\n                  className={\n                    toggleState === 1\n                      ? \"content_sec  active-content_sec\"\n                      : \"content_sec\"\n                  }\n                >\n                  <HolderTableComponent\n                    trans={transactions}\n                    decimal={decimal}\n                  />\n                </div> */}\n\n            {/* <div\n                  className={\n                    toggleState === 2\n                      ? \"content_sec  active-content_sec\"\n                      : \"content_sec\"\n                  }\n                >\n                  <HolderTableComponent  />\n                </div> */}\n            {/* </div>\n            </div> */}\n          </Grid>\n          <FooterComponent />\n        </div>\n      </MobileView>\n    </>\n  );\n}\n\nconst TabComponent = ({\n  toggleTab,\n  toggleState,\n  transactions,\n  decimal,\n  contractAddress,\n  addr,\n}) => {\n  return (\n    <div className=\"container_sec_holder\">\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          backgroundColor: \"transparent\",\n          height: \"25px\",\n          borderBottom: \"solid 1px #e3e7eb\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            backgroundColor: \"transparent\",\n          }}\n        >\n          <button\n            className={\n              toggleState === 1 ? \"tabs-data active-tabs-token\" : \"tabs-data\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            Transfers\n          </button>\n          <button\n            className={\n              toggleState === 2\n                ? \"tabs-data active-tabs-token-holder\"\n                : \"tabs-data\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            Analytics\n          </button>\n        </div>\n      </div>\n\n      <div\n        className={\n          toggleState === 1 ? \"content_sec  active-content_sec\" : \"content_sec\"\n        }\n      >\n        <HolderTableComponent trans={transactions} decimal={decimal} />\n      </div>\n\n      <div\n        className={\n          toggleState === 2 ? \"content_sec  active-content_sec\" : \"content_sec\"\n        }\n      >\n        <HolderAnalytics\n          walletAddress={addr}\n          contractAddress={contractAddress}\n        />\n      </div>\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/XDC-Alert.2cb87ec5.svg\";","import { httpService } from \"../managers/httpService\";\nimport { httpConstants } from \"../constants\";\n\nexport default {\n  getTotalAccount,\n  getSomeDaysAccount,\n  getLatestAccount,\n  getTokenBalance,\n  getTokenTransferCount,\n  getHistoryPrice,\n  getTokenOverview,\n  getTokenInfo,\n  getAccountList,\n  getAddressAnalytics,\n};\n\nfunction getHeaders() {\n  return {\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\n  };\n}\n\nasync function getTotalAccount() {\n  let url = process.env.REACT_APP_GET_TOTAL_ACCOUNTS;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenInfo(symbol) {\n  let url =\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\n    httpConstants.API_END_POINT.GET_TOKEN_INFO +\n    `/${symbol}`;\n  //   let url =\n  //     \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008\" +\n  //     httpConstants.API_END_POINT.GET_TOKEN_INFO +\n  //     `/${symbol}`;\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getAccountList(requestData) {\n  let url = process.env.REACT_APP_GET_ACCOUNT_LIST;\n  return httpService(\n    httpConstants.METHOD_TYPE.POST,\n    getHeaders(),\n    requestData,\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getSomeDaysAccount() {\n  let url = process.env.REACT_APP_GET_SOME_DAYS_ACCOUNTS;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getLatestAccount(path, data) {\n  let url = process.env.REACT_APP_GET_LATEST_ACCOUNTS + path;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenBalance(data) {\n  let url =\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\n    httpConstants.API_END_POINT.GET_TOKEN_BALANCE;\n  // let url =\n  //     \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008/get-token-balance\";\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getAddressAnalytics(data) {\n  let url =\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\n    httpConstants.API_END_POINT.GET_ADDRESS_ANALYTICS;\n  // let url =\n  //   \"http://localhost:3007\" + httpConstants.API_END_POINT.GET_ADDRESS_ANALYTICS;\n  // let url =\n  //     \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008/get-token-balance\";\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenTransferCount(data) {\n  // let url =\n  //   process.env.REACT_APP_GET_LATEST_ACCOUNTS +\n  //   httpConstants.API_END_POINT.GET_TOKEN_TRANSFER_COUNT;\n  let url =\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\n    httpConstants.API_END_POINT.GET_TOKEN_TRANSFER_COUNT;\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenOverview(data) {\n  let url =\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\n    httpConstants.API_END_POINT.GET_TOKEN_OVERVIEW;\n  // let url = \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008\" +\n  //     httpConstants.API_END_POINT.GET_TOKEN_OVERVIEW;\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getHistoryPrice(data) {\n  let url =\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\n    httpConstants.API_END_POINT.GET_HISTORY_PRICE;\n  // let url = \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008\" + httpConstants.API_END_POINT.GET_HISTORY_PRICE;\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n","import Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport styled from \"styled-components\";\nimport React from \"react\";\n\nconst PageSelect = styled(Select)`\n  width: 100%;\n  height: ${({ height }) => height}px;\n  margin: 0 10px;\n\n  legend {\n    float: left;\n  }\n`;\nconst PageSelector = ({ value, handler, height = 35 }) => {\n  return (\n    <PageSelect\n      value={value}\n      onChange={(event) => handler(event)}\n      displayEmpty\n      height={height}\n    >\n      <MenuItem disabled value=\"\">\n        <em>Select</em>\n      </MenuItem>\n      <MenuItem value={10}>10</MenuItem>\n      <MenuItem value={25}>25</MenuItem>\n      <MenuItem value={50}>50</MenuItem>\n      <MenuItem value={75}>75</MenuItem>\n      <MenuItem value={100}>100</MenuItem>\n    </PageSelect>\n  );\n};\nexport default PageSelector;\n","import { httpService } from \"../managers/httpService\";\nimport { httpConstants } from \"../constants\";\n\nexport default {\n  CoinMarketExchangeForToken,\n  getTokenLists,\n  getTotalToken,\n  getSomeDaysHolders,\n  getTokenSearch,\n  getHolderDetailsUsingAddressforToken,\n  getTransferTransactionDetailsUsingHash,\n  getTotalTransferTransactionsForToken,\n  getListOfTransferTransactionsForToken,\n  getListOfHoldersForToken,\n  getListOfTokenForAddress,\n};\nfunction getHeaders() {\n  return {\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\n  };\n}\n\nasync function CoinMarketExchangeForToken(data) {\n  let url = process.env.REACT_APP_GET_TOKEN_MARKETCAP + \"/\" + data;\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenLists(data) {\n  let url = process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL + httpConstants.API_END_POINT.GET_TOKEN_LIST;//\"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage;\n  // let url = \"http://localhost:3007/getListOfTokens\";\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getSomeDaysHolders(path, data) {\n  let url = process.env.REACT_APP_GET_SOME_DAYS_HOLDERS + path;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenSearch(data) {\n  let url =\n    process.env.REACT_APP_GET_TOKEN_SEARCH +\n    \"?skip=\" +\n    Math.ceil(data.pageNum) +\n    \"&limit=\" +\n    data.perpage +\n    \"&data=\" +\n    data.searchkey;\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTotalToken() {\n  let url = process.env.REACT_APP_GET_TOTAL_TOKEN;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getListOfTransferTransactionsForToken(data) {\n  // let url = \"http://localhost:3005/getListOfTransferTransactionsForToken/\"+data.addr;\n  let url = process.env.REACT_APP_GET_LIST_OF_TRANSFER_FOR_TOKEN + data.addr;\n  delete data.addr;\n    //+ \"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage + (data.searchValue ? \"&searchValue=\" + data.searchValue : \"\") + (data.startDate ? \"&startDate=\" + data.startDate : \"\");\n\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getTotalTransferTransactionsForToken(data) {\n    let url = process.env.REACT_APP_GET_TOTAL_TRANSFER_FOR_TOKEN + data.addr + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\n        + (data.startDate ? (data.searchValue ? \"&startDate=\" : \"?startDate=\") + data.startDate : \"\");\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getListOfHoldersForToken(data) {\n   let url = process.env.REACT_APP_GET_LIST_OF_HOLDERS_FOR_TOKEN + data.address;\n    // let url = \"http://localhost:3007/getListOfHoldersForToken/\"+data.address;\n    delete data.address;\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getTransferTransactionDetailsUsingHash(path, data) {\n  let url =\n    process.env.REACT_APP_GET_TRANSFER_TRANSACTION_DETAIL_USING_ADDRESS + path;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getListOfTokenForAddress(path, data) {\n  let url =\n    process.env.REACT_APP_GET_LIST_OF_TOKENS_FOR_ADDRESS+ path;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getHolderDetailsUsingAddressforToken(data) {\n  let url = process.env.REACT_APP_GET_HOLDER_DETAIL_USING_ADDRESS_FOR_TOKEN\n  // let url = \"http://localhost:3007/getHolderDetailsUsingAddress\"\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n","import React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst options = {\n  title: {\n    text: \"My stock chart\",\n  },\n  series: [\n    {\n      data: [1, 2, 1, 4, 3, 6, 7, 3, 8, 6, 9, 15],\n    },\n  ],\n};\n\nexport default function Chart(props) {\n  Highcharts.setOptions({\n    lang: {\n      rangeSelectorFrom: \"From\",\n      rangeSelectorTo: \"To\",\n      rangeSelectorZoom: \"Show\",\n    },\n  });\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      constructorType={\"stockChart\"}\n      options={props.options}\n    />\n  );\n}\n","import React from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paperWidthSm: {\n        maxWidth: \"320px\",\n        width: \"100%\",\n        borderRadius: \"8px\",\n    }\n}));\nfunction ConfigureColumnsPopOver(props) {\n    const classes = useStyles();\n\n    return (<Popover classes={{paperWidthSm: classes.paperWidthSm}}\n        open={props.isOpen}\n        anchorEl={props.anchorEl}\n        onClose={props.handleOnClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}>\n        <div className=\"w-320\">\n            <div className=\"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center\">Configure Columns</div>\n            <div className=\"margin-0 m-b-15 b-t-1\"/>\n            <div className=\"p-l-15 p-r-15\">\n                {\n                    props.tableColumns && Object.keys(props.tableColumns).map(key => {\n                        if (key !== 'Balance')\n                            return (\n                                <div className=\"display-flex justify-content-between p-b-25\">\n                                    <div className=\"display-flex\">\n                                        <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\n                                            <img className=\"tooltipInfoIconConfigDesk\"\n                                                 src=\"/images/info.svg\"></img>\n                                        </Tooltip>\n                                        <div className=\"p-l-5\">{key}</div>\n                                    </div>\n                                    <div onClick={() => props.toggleTableColumns(key)}>\n                                        {props.tableColumns[key].isActive ?\n                                            <img className=\"\" src=\"/images/active-switch.svg\"/> :\n                                            <img className=\"\" src=\"/images/inactive-switch.svg\"/>}\n                                    </div>\n                                </div>\n                            )\n                    })\n                }\n            </div>\n        </div>\n    </Popover>)\n}\n\nexport default ConfigureColumnsPopOver;","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paperWidthSm: {\n        maxWidth: \"320px\",\n        width: \"100%\",\n        borderRadius: \"8px\",\n        margin: \"20px\",\n    }\n}));\n\nfunction ConfigureColumnsModal(props) {\n    const classes = useStyles();\n    return (\n        <Dialog\n            className=\"\"\n            classes={{paperWidthSm: classes.paperWidthSm}}\n            open={props.isOpen}\n            onClose={props.onModalClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <div className=\"w-320\">\n                <div className=\"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center\">Configure Columns</div>\n                <div className=\"margin-0 m-b-15 b-t-1\"/>\n                <div className=\"p-l-15 p-r-15\">\n                    {\n                        props.tableColumns && Object.keys(props.tableColumns).map(key => {\n                            if (key !== 'Balance')\n                                return (\n                                    <div className=\"display-flex justify-content-between p-b-25\">\n                                        <div className=\"display-flex\">\n                                            <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\n                                                <img className=\"tooltipInfoIconConfigMob\"\n                                                    src=\"/images/info.svg\"></img>\n                                            </Tooltip>\n                                            <div className=\"p-l-12\">{key}</div>\n                                        </div>\n                                        <div onClick={() => props.toggleTableColumns(key)}>\n                                            {props.tableColumns[key].isActive ?\n                                                <img className=\"\" src=\"/images/active-switch.svg\" /> :\n                                                <img className=\"\" src=\"/images/inactive-switch.svg\" />}\n                                        </div>\n                                    </div>\n                                )\n                        })\n                    }\n                </div>\n            </div>\n        </Dialog>)\n}\n\nexport default ConfigureColumnsModal;","import { httpService } from \"../managers/httpService\";\nimport { httpConstants } from \"../constants\";\n\nexport default {\n  getContractLists,\n  getTotalContractList,\n  getContractSearch,\n  getContractDetails,\n  getContractDetailsUsingAddress,\n};\n\nfunction getHeaders() {\n  return {\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\n  };\n}\n\nasync function getContractDetails(data) {\n  let url =\n    process.env.REACT_APP_GET_CONTRACT_DETAILS +\n    data.addr\n\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getContractLists(data) {\n  let url =\n    process.env.REACT_APP_GET_CONTRACT_LIST +\n    \"?skip=\" +\n    Math.ceil(data.pageNum) +\n    \"&limit=\" +\n    data.perpage;\n\n  return httpService(\n    httpConstants.METHOD_TYPE.POST,\n    getHeaders(),\n    data,\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTotalContractList() {\n  let url = process.env.REACT_APP_GET_TOTAL_CONTRACT_LIST;\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getContractSearch(data) {\n  let url =\n    process.env.REACT_APP_GET_CONTRACT_SEARCH +\n    \"?skip=\" +\n    Math.ceil(data.pageNum) +\n    \"&limit=\" +\n    data.perpage +\n    \"&keywords=\" +\n    data.keywords;\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getContractDetailsUsingAddress(path, data) {\n  let url = process.env.REACT_APP_GET_CONTRACT_DETAIL_USING_ADDRESS + path\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    data,\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n","import { httpService } from \"../managers/httpService\";\nimport { httpConstants } from \"../constants\";\n\nexport default {\n  getAddressDetail,\n  getAddressDetailWithlimit,\n  getFilteredAddressDetailWithLimit,\n  getFiltersForAccountTransaction,\n  getTransactionSearch,\n  getTransactionsCountForAddress,\n  getAddressStats,\n};\nfunction getHeaders() {\n  return {\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\n  };\n}\nasync function getAddressDetail(address) {\n  let url = process.env.REACT_APP_GET_ADDRESS_DETAILS + address;\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTransactionSearch(data) {\n  let url =\n    process.env.REACT_APP_GET_TRANSACTION_SEARCH +\n    data.addrr +\n    \"/\" +\n    data.keywords +\n    \"?skip=\" +\n    Math.ceil(data.pageNum) +\n    \"&limit=\" +\n    data.perpage;\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getAddressDetailWithlimit(data) {\n  let url =\n    process.env.REACT_APP_GET_TRANSACTIONS_FOR_ADDRESS +\n    data.addrr +\n    \"?skip=\" +\n    Math.ceil(data.pageNum) +\n    \"&limit=\" +\n    data.perpage + \"&sortKey=\" + data?.sortKey + \"&sortType=\" + data?.sortType;\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getFilteredAddressDetailWithLimit(requestData) {\n    let url = process.env.REACT_APP_GET_FILTERED_TRANSACTIONS_FOR_ADDRESS + requestData.address\n    return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), requestData, url)\n        .then((response) => {\n            if (\n                !response.success ||\n                response.responseCode !== 200 ||\n                !response.responseData ||\n                response.responseData.length === 0\n            )\n                return Promise.reject();\n            return Promise.resolve(response.responseData);\n        })\n        .catch(function (err) {\n            return Promise.reject(err);\n        });\n}\nasync function getFiltersForAccountTransaction(requestData) {\n    let url = process.env.REACT_APP_GET_FILTERS_FOR_ADDRESS_TXN + requestData.address\n    return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n        .then((response) => {\n            if (\n                !response.success ||\n                response.responseCode !== 200 ||\n                !response.responseData ||\n                response.responseData.length === 0\n            )\n                return Promise.reject();\n            return Promise.resolve(response.responseData);\n        })\n        .catch(function (err) {\n            return Promise.reject(err);\n        });\n}\nasync function getTransactionsCountForAddress(data) {\n  let url =\n    process.env.REACT_APP_GET_TRANSACTIONS_COUNT_FOR_ADDRESS + data.address\n      + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\n      + (data.txnType ? (data.searchValue ? \"&txnType=\" : \"?txnType=\") + data.txnType : \"\")\n      + (data.status ? (data.searchValue || data.txnType ? \"&status=\" : \"?status=\") + data.status : \"\")\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getAddressStats(address) {\n  let url = process.env.REACT_APP_GET_ADDRESS_STATS + address;\n  return httpService(\n    httpConstants.METHOD_TYPE.GET,\n    getHeaders(),\n    {},\n    url\n  )\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\nimport \"../../assets/styles/custom.css\";\nimport FooterComponent from \"../common/footerComponent\";\nimport Utility from \"../../utility\";\nimport TokenData from \"../../services/token\";\nimport styled from \"styled-components\";\nimport Loader from \"../../assets/loader\";\nimport utility from \"../../utility\";\nimport ConfigureColumnPopOver from \"../common/configureColumnsPopOver\";\nimport { Column, Row } from \"simple-flexbox\";\nimport ConfigureColumnsModal from \"../common/configureColumnsModal\";\nimport format from \"format-number\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { messages } from \"../../constants\";\n\nimport { useParams } from \"react-router-dom\";\nimport PageSelector from \"../common/pageSelector\";\n\nconst Responsive = styled.div`\n  max-width: 1220px;\n  width: 100%;\n  margin: 0 auto;\n  @media (min-width: 0px) and (max-width: 767px) {\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n`;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  width: 75.125rem;\n  margin: 28px auto 0 auto;\n\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    width: 21rem;\n    margin: 25px auto 25px 0;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 41.5rem;\n    margin: 28px auto 60px auto;\n  }\n`;\nconst RightPagination = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-right: 0%;\n  }\n`;\nconst LeftPagination = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-flow: row nowrap; \n\n  @media (min-width: 0px) and (max-width: 767px) {\n    width: 180px;\n    margin-bottom: 25px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-right: 5%;\n  }\n`;\nconst Show = styled.div`\n  font-size: 0.875rem;\n  font-weight: 600;\n  margin: auto;\n  padding-bottom: 2px;\n`;\nconst Record = styled.div`\n  font-size: 0.875rem;\n  font-weight: 600;\n  margin: auto;\n  padding-bottom: 2px;\n`;\n// function capitalize(text) {\n//   return text.charAt(0).toUpperCase() + text.slice(1);\n// }\n\nconst useStyles = makeStyles({\n  rootui: {\n    borderRadius: \"0.875rem\",\n    marginLeft: \"18%\",\n    marginRight: \"18%\",\n  },\n  container: {\n    borderRadius: \"0.875rem\",\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n    borderBottom: \"none\",\n    background: \"#fff\",\n  },\n  tableFirstHeading: {\n    border: \"none\",\n    paddingLeft: \"75px !important\",\n  },\n  tableFirstData: {\n    paddingLeft: \"75px !important\",\n  },\n  divider: {\n    borderTop: \"0rem solid #bbb\",\n    width: \"100%\",\n  },\n\n  // \"@media (max-width: 1240px)\": {\n  //     container: {\n  //         marginTop: \"7px !important\",\n  //     },\n  // },\n  \"@media (max-width: 767px)\": {\n    container: {\n      marginTop: \"0px\",\n    },\n  },\n\n  \"@media (max-width: 1240px)\": {\n    tableFirstHeading: {\n      paddingLeft: \"32px !important\",\n    },\n    tableFirstData: {\n      paddingLeft: \"32px !important\",\n    },\n    container: {\n      marginTop: \"7px\",\n    },\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [from, setFrom] = React.useState(0);\n  const [amount, setAmount] = React.useState(10);\n  const [isLoading, setLoading] = React.useState(true);\n  const [totalToken, setTotalToken] = React.useState(0);\n  const [keywords, setKeywords] = React.useState(\"\");\n  const [rows, setRows] = React.useState([]);\n  const [visibleTokenCount, setVisibleTokenCount] = React.useState(0);\n  const [sortKey, setSortKey] = React.useState(\"\");\n  const [sortOrder, setSortOrder] = React.useState(0);\n  let { token } = useParams();\n\n  const [noData, setNoData] = React.useState(true);\n  const handleChangePage = (action) => {\n    let data = { searchKey: keywords ? keywords : \"\" };\n    if (sortKey && sortOrder)\n      data.sortKey = { [sortKey]: sortOrder };\n    // if (sortedByHolderCount)\n    //     data.sortKey = {holdersCount: sortedByHolderCount};\n    if (!keywords)\n      setNoData(false);\n    if (action === \"first\") {\n      setFrom(0);\n      data.skip = 0;\n      data.limit = amount;\n      sortKey= {[sortKey]: sortOrder};\n    }\n    if (action === \"prev\") {\n      if (from - amount >= 0) {\n        let page = from - amount;\n        setFrom(page);\n        data.skip = page;\n        data.limit = amount;\n      }\n    }\n    if (action === \"next\") {\n      if (+amount + +from < totalToken) {\n        let page = +amount + +from;\n        setFrom(page);\n        data.skip = page;\n        data.limit = amount;\n      }\n    }\n\n    if (action === \"last\") {\n      let page = (Math.ceil(totalToken / amount) - 1) * amount;\n      setFrom(page);\n      data.skip = page;\n      data.limit = amount;\n    }\n    getTokenList(data);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    // setFrom(0);\n    setAmount(event.target.value);\n    // setSortKey(\"holdersCount\");\n    // setSortOrder(-1);\n    // setFrom(0);\n    let data = {\n      skip: 0,\n      limit: event.target.value,\n      searchKey: keywords ? keywords : '',\n      sortKey: {[sortKey]: sortOrder}\n    };\n    if (!keywords)\n      setNoData(false);\n    getTokenList(data);\n  };\n  const handleSearchKeyUp = (event) => {\n    let searchkeyword = event?.target?.value;\n    setSortKey(\"\");\n    setSortOrder(0);\n    if (searchkeyword?.length > 1) {\n      setKeywords(searchkeyword);\n      setLoading(false);\n      let data = { skip: 0, limit: amount, searchKey: searchkeyword };\n      data['sortKey'] = { \"holdersCount\": -1 }\n      getTokenList(data);\n    }\n    if (searchkeyword?.length === 0) {\n      setKeywords(\"\");\n      setLoading(false);\n      setNoData(false);\n      let data = { skip: from, limit: amount, searchKey: '' };\n      data['sortKey'] = { \"holdersCount\": -1 }\n      getTokenList(data);\n    }\n  };\n  const getTokenList = async (data) => {\n    try {\n      const [error, responseData] = await Utility.parseResponse(\n        TokenData.getTokenLists(data)\n      );\n      if (error) return;\n      if (responseData) {\n        setNoData(false);\n        setLoading(false);\n        setRows(responseData?.tokens);\n        setVisibleTokenCount(responseData?.tokens.length)\n        setTotalToken(responseData?.totalCount);\n      } else {\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // const getTotalTokenList = async () => {\n  //     try {\n  //         const [error, responseData] = await Utility.parseResponse(\n  //             TokenData.getTotalToken()\n  //         );\n  //         if (error) return;\n  //         if (responseData) {\n  //             setNoData(false);\n  //             setTotalToken(responseData);\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // };\n  // const SearchTokens = async (data) => {\n  //     try {\n  //         const [error, responseData] = await Utility.parseResponse(\n  //             TokenData.getTokenSearch(data)\n  //         );\n  //         if (error) return;\n  //         if (responseData.total === 0) {\n  //             setNoData(true);\n  //             setTotalToken(0);\n  //             setRows([]);\n  //         }\n  //\n  //         if (responseData.total > 0) {\n  //             setNoData(false);\n  //             setTotalToken(responseData.total);\n  //             setLoading(false);\n  //             setRows(responseData.resultSet);\n  //             //alert(responseData.length)\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // };\n\n  let [anchorEl, setAnchorEl] = React.useState();\n  let [isColumnsModalOpen, setColumnsModal] = React.useState(false);\n  let isSettingColumnOpen = Boolean(anchorEl);\n\n  function handleSettingsClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function toggleModal() {\n    setColumnsModal(!isColumnsModalOpen);\n  }\n\n  function handleOnClose() {\n    setAnchorEl(null);\n  }\n\n  React.useEffect(() => {\n    let unmounted = false;\n    let data = { skip: from, limit: amount, searchKey: token ? token : '' };\n    data['sortKey'] = { \"holdersCount\": -1 }\n    getTokenList(data);\n    // return () => {\n    //     unmounted = true;\n    // };\n    sortTable(\"holdersCount\");\n  }, []);\n\n  function shorten(b, amountL = 10, amountR = 4, stars = 3) {\n    return `${b.slice(0, amountL)}${\".\".repeat(stars)}${b.slice(\n      b.length - amountR,\n      b.length\n    )}`;\n  }\n\n  async function sortTable(_sortKey) {\n    let data = { skip: from, limit: amount, searchKey: keywords }\n    if (sortKey && sortKey.includes(_sortKey)) {\n      data['sortKey'] = { [_sortKey]: -1 * sortOrder }\n      setSortOrder(-1 * sortOrder);\n    } else {\n      setSortKey(_sortKey)\n      setSortOrder(-1)\n      data['sortKey'] = { [_sortKey]: -1 }\n    }\n    getTokenList(data);\n  }\n\n  const navigateToTokenDetails = (row) => {\n    window.location.href = `/token-data/${row.address}/${row?.symbol ? row?.symbol : \"NA\"\n      }`\n  }\n\n  // async function sortByHoldersCount() {\n  //     setSortedByTotalSupply(0);\n  //     let data = {skip: from, limit: amount, searchKey: keywords}\n  //     if (!sortedByHolderCount) {\n  //         setSortedByHolderCount(-1);\n  //         data['sortKey'] = {\"holdersCount\": -1}\n  //     } else if (sortedByHolderCount === -1) {\n  //         setSortedByHolderCount(1);\n  //         data['sortKey'] = {\"holdersCount\": 1}\n  //     } else {\n  //         setSortedByHolderCount(-1);\n  //         data['sortKey'] = {\"holdersCount\": -1}\n  //     }\n  //     getTokenList(data);\n  // }\n\n  const TokenTitle = styled.div`\n    font-family: Inter;\n    font-size: 24px;\n    font-weight: 600;\n    color: #2a2a2a;\n    margin-bottom: 22px;\n      @media (max-width: 1250px) {\n        font-size: 18px;\n        margin-bottom: 12px;\n      }\n      @media (max-width: 767px) {\n        font-size: 14px;\n        color: #252525;\n        margin-bottom: 12px;\n      }\n    `;\n\n  const NoDataFoundContainer = styled.div`\n      display: flex;\n      flex-flow: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: 100px;\n      gap: 10px;\n      @media (min-width: 767px) {\n        margin: 100px 0 !important;\n      }\n    `;\n\n  return (\n    <div style={{ backgroundColor: \"#fff\" }}>\n      <Tokensearchbar />\n      <Responsive>\n        <form\n          method=\"post\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            }\n          }}\n        >\n\n          <Column\n            className={\n              \"responsive-table-width-token-list token-list-tab_11 search-container\"\n            }\n          >\n            {window.innerWidth >= 768 ?\n              <>\n                <TokenTitle>Tokens</TokenTitle>\n                <Row justifyContent=\"space-between\" alignItems=\"center\">\n                  <div className=\"searchelement-input input-searchelement_11\">\n                    <img\n                      style={{\n                        width: 18,\n                        height: 18,\n                        marginRight: 2,\n                      }}\n                      src={\"/images/Search.svg\"}\n                    />\n\n                    <input\n                      onChange={(e) => {\n\n                        handleSearchKeyUp(e);\n\n                      }}\n                      // onChange={(e) => {\n                      //   if (e.target.value == \"\") {\n                      //     handleSearchKeyUp(e);\n                      //   }\n                      // }}\n                      id=\"tokenSearch\"\n                      className=\"account-searchbar\"\n                      type=\"text\"\n                      placeholder=\"Search\"\n                    />\n                  </div>\n                  <div className=\"display-none-mobile display-flex flex-direction-column w-100 margin-0 justify-content-end align-items-end\">\n                    <img\n                      onClick={handleSettingsClick}\n                      className=\"h-20 w-20-px cursor-pointer m-r-9\"\n                      src=\"/images/settings.svg\"\n                    />\n                    <ConfigureColumnPopOver\n                      isOpen={isSettingColumnOpen}\n                      anchorEl={anchorEl}\n                      handleOnClose={handleOnClose}\n                      tableColumns={props.state.tableColumns}\n                      toggleTableColumns={props.toggleTableColumns}\n                    />\n                  </div>\n                  <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\n                    <img\n                      onClick={toggleModal}\n                      className=\"h-20 w-20-px cursor-pointer\"\n                      src=\"/images/settings.svg\"\n                    />\n                    <ConfigureColumnsModal\n                      isOpen={isColumnsModalOpen}\n                      onModalClose={toggleModal}\n                      tableColumns={props.state.tableColumns}\n                      toggleTableColumns={props.toggleTableColumns}\n                    />\n                  </div>\n                </Row></> : (<>\n                  <Row justifyContent=\"space-between\" alignItems=\"center\">\n                    <TokenTitle>Tokens</TokenTitle>\n                    <div className=\"display-none-mobile display-flex flex-direction-column w-100 margin-0 justify-content-end align-items-end\">\n                      <img\n                        onClick={handleSettingsClick}\n                        className=\"h-16 w-16-px cursor-pointer m-t_-7\"\n                        src=\"/images/settings.svg\"\n                      />\n                      <ConfigureColumnPopOver\n                        isOpen={isSettingColumnOpen}\n                        anchorEl={anchorEl}\n                        handleOnClose={handleOnClose}\n                        tableColumns={props.state.tableColumns}\n                        toggleTableColumns={props.toggleTableColumns}\n                      />\n                    </div>\n                    <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\n                      <img\n                        onClick={toggleModal}\n                        className=\"h-16 w-16-px cursor-pointer m-t_-7\"\n                        src=\"/images/settings.svg\"\n                      />\n                      <ConfigureColumnsModal\n                        isOpen={isColumnsModalOpen}\n                        onModalClose={toggleModal}\n                        tableColumns={props.state.tableColumns}\n                        toggleTableColumns={props.toggleTableColumns}\n                      />\n                    </div>\n                  </Row>\n                  <div className=\"searchelement-input input-searchelement_11\">\n                    <img\n                      style={{\n                        width: 18,\n                        height: 18,\n                        marginRight: 2,\n                        marginTop: -1,\n                      }}\n                      src={\"/images/Search.svg\"}\n                    />\n\n                    <input\n                      onChange={(e) => {\n\n                        handleSearchKeyUp(e);\n\n                      }}\n                      // onChange={(e) => {\n                      //   if (e.target.value == \"\") {\n                      //     handleSearchKeyUp(e);\n                      //   }\n                      // }}\n                      id=\"tokenSearch\"\n                      className=\"account-searchbar\"\n                      type=\"text\"\n                      placeholder=\"Search\"\n                    />\n                  </div>\n                </>)}\n\n          </Column>\n        </form>\n        {/* </div> */}\n        {/* </div> */}\n\n        <br />\n\n        <Paper\n          className={\"responsive-table-width-token-list token-list-tab_11\"}\n          style={{\n            borderRadius: \"0.875rem\",\n            // marginLeft: \"18%\",\n            // marginRight: \"18%\",\n          }}\n          elevation={0}\n        >\n          <TableContainer\n            className={classes.container}\n            id=\"container-table-token\"\n            style={{\n              borderRadius: \"0.75rem\",\n              border: \"solid 0.063rem #e3e7eb\",\n              backgroundColor: \"#ffffff\",\n              boxShadow: \"0 0.063rem 0.625rem 0 rgba(0 0, 0, 0.,1)\",\n            }}\n          >\n            <Table style={{ borderBottom: \"none\" }}>\n              <TableHead style={{ borderBottom: \"0.063rem solid #e5e8f0\" }}>\n                <TableRow>\n                  <TableCell\n                    style={{ border: \"none\", }}\n                    align=\"left\"\n                  >\n                    <span className={\"tablehead-token-details\"}>\n                      #\n                      <Tooltip placement=\"top\" title={messages.SI_NO}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                  {props?.state?.tableColumns[\"Symbol\"].isActive && (\n                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                      <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"symbol\")}>\n                        Symbol\n                        <Tooltip placement=\"top\" title={messages.SYMBOL}>\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/info.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          />\n                        </Tooltip>\n                        {sortKey && sortKey === \"symbol\" ? (\n                          sortOrder === -1 ? <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          /> :\n                            <img\n                              alt=\"question-mark\"\n                              src=\"/images/see-more.svg\"\n                              height={\"14px\"}\n                              className=\"tooltipInfoIcon rotate-180\"\n                            />) : \"\"}\n                      </span>\n                    </TableCell>\n                  )}\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\n                    <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"tokenName\")}>\n                      Name\n                      <Tooltip placement=\"top\" title={messages.NAME}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                      {sortKey && sortKey === \"tokenName\" ? (\n                        sortOrder === -1 ? <img\n                          alt=\"question-mark\"\n                          src=\"/images/see-more.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        /> :\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon rotate-180\"\n                          />) : \"\"}\n                    </span>\n                  </TableCell>\n                  {/* {props?.state?.tableColumns[\"Type\"].isActive && (\n                                    <TableCell\n                                        style={{border: \"none\", whiteSpace: \"nowrap\"}}\n                                        align=\"left\"\n                                    >\n                    <span className={\"tablehead-token-details\"}>\n                      Type\n                      <Tooltip placement=\"top\" title={messages.TOKEN_TYPE}>\n                        <img\n                            alt=\"question-mark\"\n                            src=\"/images/info.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                                    </TableCell>\n                                )} */}\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\n                    <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"address\")}>\n                      Contract\n                      <Tooltip placement=\"top\" title={messages.CONTRACT}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                      {sortKey && sortKey === \"address\" ? (\n                        sortOrder === -1 ? <img\n                          alt=\"question-mark\"\n                          src=\"/images/see-more.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        /> :\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon rotate-180\"\n                          />) : \"\"}\n                    </span>\n                  </TableCell>\n\n                  <TableCell\n                    style={{ border: \"none\", whiteSpace: \"nowrap\" }}\n                    align=\"left\"\n                  >\n                    <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"totalSupply\")}>\n                      Total Supply\n                      <Tooltip\n                        placement=\"top\"\n                        title={messages.TOKEN_TOTAL_SUPPLY}\n                      >\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                      {sortKey && sortKey === \"totalSupply\" ? (\n                        sortOrder === -1 ? <img\n                          alt=\"question-mark\"\n                          src=\"/images/see-more.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        /> :\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon rotate-180\"\n                          />) : \"\"}\n                    </span>\n                  </TableCell>\n                  {props?.state?.tableColumns[\"Total Holders\"].isActive && (\n                    <TableCell\n                      style={{ border: \"none\", whiteSpace: \"nowrap\" }}\n                      align=\"left\"\n                    >\n                      <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"holdersCount\")}>\n                        Total Holders\n                        <Tooltip placement=\"top\" title={messages.HOLDER}>\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/info.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          />\n                        </Tooltip>\n                        {sortKey && sortKey === \"holdersCount\" ? (\n                          sortOrder === -1 ? <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          /> :\n                            <img\n                              alt=\"question-mark\"\n                              src=\"/images/see-more.svg\"\n                              height={\"14px\"}\n                              className=\"tooltipInfoIcon rotate-180\"\n                            />) : \"\"}\n                      </span>\n                    </TableCell>\n                  )}\n                </TableRow>\n              </TableHead>\n              {isLoading == true ? (\n                <TableBody>\n                  <TableRow>\n                    <TableCell style={{ border: \"none\" }} colspan=\"8\">\n                      <div className=\"loader-token-list\">\n                        <Loader />\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              ) : (\n                noData == false && (\n                  <TableBody>\n                    {rows?.map((row, index) => {\n                      let totalsupply = utility.divideByDecimalValue(\n                        row?.totalSupply,\n                        row?.decimals\n                      );\n                      \n                      const supply =\n                      totalsupply >= 1\n                          ? format({})(\n\n                            utility.convertToInternationalCurrencySystem(\n                              Number(totalsupply)\n                            )\n                          )\n                          : utility.divideByDecimalValue(\n                            row?.totalSupply,\n                            row?.decimals\n                          );\n                      var supply1 = supply.toString().split(\".\")[0];\n                      var supply2 = supply.toString().split(\".\")[1];\n                      var regex = new RegExp(\"([0-9]+)|([a-zA-Z]+)\", \"g\");\n                      var splittedArray = supply2?.match(regex);\n\n                      var supply4 =\n                        splittedArray && splittedArray.length\n                          ? splittedArray[0]\n                          : 0;\n                      var text =\n                        splittedArray && splittedArray.length\n                          ? splittedArray[1]\n                          : 0;\n                      let tokenName =\n                        row?.tokenName?.length <= 15 ||\n                          row?.tokenName?.length == 0\n                          ? row?.tokenName\n                          : shorten(row?.tokenName, 15, 0, 3);\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={row._id}\n                          onClick={() => navigateToTokenDetails(row)}\n                        >\n                          <TableCell id=\"td\">\n                            {index + 1}\n                          </TableCell>\n\n                          {props?.state?.tableColumns[\"Symbol\"].isActive && (\n                            <TableCell id=\"td\">\n                              {row?.tokenImage ?\n                                <img\n                                  style={{ height: \"20px\", width: \"20px\" }}\n                                  src={row?.tokenImage}\n                                ></img> :\n                                <img\n                                  style={{ height: \"20px\", width: \"20px\" }}\n                                  src={\"/images/XRC20-Icon.svg\"}\n                                ></img>}\n                              &nbsp;{row.symbol}\n                            </TableCell>\n                          )}\n\n                          <TableCell id=\"td\" style={{ whiteSpace: \"nowrap\" }}>\n                            {tokenName}\n                          </TableCell>\n                          {/* {props?.state?.tableColumns[\"Type\"].isActive && (\n                                                    <TableCell id=\"td\">{row.type}</TableCell>\n                                                )} */}\n\n                          <TableCell>\n                            <a\n                              className=\"token-details-address-link\"\n                              href={`/token-data/${row.address}/${row?.symbol ? row?.symbol : \"NA\"\n                                }`}\n                            >\n                              {shorten(row.address)}\n                            </a>\n                          </TableCell>\n\n\n                          <TableCell id=\"td\" style={{ paddingleft: \"15\" }}>\n                            <Tooltip\n                              placement=\"top\"\n                              title={format({})(\n                                totalsupply >= 1\n                                  ? parseFloat(totalsupply)\n                                  : totalsupply == 0\n                                    ? parseFloat(totalsupply)\n                                    : totalsupply\n                              )}\n                            >\n                              <span>\n                                {supply4 === 0 || supply4 == null ? (\n                                  <span className=\"tabledata\">{supply1}</span>\n                                ) : (\n                                  <span className=\"tabledata\">\n                                    {supply1}\n                                    {\".\"}\n                                    <span style={{ color: \"#9FA9BA\" }}>\n                                      {supply4}\n                                    </span>\n                                    {text}\n                                  </span>\n                                )}\n                              </span>\n                            </Tooltip>\n                          </TableCell>\n                          {props?.state?.tableColumns[\"Total Holders\"]\n                            .isActive && (\n                              <TableCell id=\"td\" style={{ paddingleft: \"15\" }}>\n                                {format({})(row.holdersCount)}\n                              </TableCell>\n                            )}\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                )\n              )}\n              {/* {noData == true && (\n              <TableBody>\n                <TableCell id=\"td\" style={{ borderBottom: \"none\" }}>\n                  <span\n                    style={{ textAlign: \"center\", color: \"#2a2a2a\" }}\n                    className=\"tabledata\"\n                  >\n                    No data found.\n                  </span>\n                </TableCell>\n              </TableBody>\n            )} */}\n            </Table>\n            {noData == true && !isLoading ? (\n              <NoDataFoundContainer>\n                <img\n                  src={require(\"../../../src/assets/images/XDC-Alert.svg\")}\n                ></img>\n\n                <div style={{ color: \"#c6cbcf\" }}>No Tokens found</div>\n              </NoDataFoundContainer>\n            ) : (\n              \"\"\n            )}\n          </TableContainer>\n\n          {/* <Divider className={classes.divider}/>*/}\n        </Paper>\n\n        <Pagination>\n          <LeftPagination>\n            {!noData == true && !isLoading ? (<>\n              <Show>\n                Show\n              </Show>\n              <PageSelector value={amount}\n                height={30}\n                handler={handleChangeRowsPerPage} />\n              <Record>\n                Records\n              </Record></>) : (\"\")}\n          </LeftPagination>\n\n          <RightPagination>\n            <div\n              className={\n                from === 0 ? \"firstbox-contract disabled\" : \"firstbox-contract\"\n              }\n              onClick={() => handleChangePage(\"first\")}\n            >\n              <button\n                style={{ backgroundColor: \"white\" }}\n                className=\"first-contract\"\n              >\n                First\n              </button>\n            </div>\n            <div\n              className={\n                from === 0\n                  ? \"previousbox-contract disabled\"\n                  : \"previousbox-contract\"\n              }\n              onClick={() => handleChangePage(\"prev\")}\n            >\n              <img className=\"navigation-arrow rotate-180\" src={\"/images/next.svg\"} />\n\n              {/* <p className=\"path-contract\">{\"<\"}</p> */}\n            </div>\n            <div className=\"pagebox-contract\">\n              <p className=\"Page-1-of-5-contract\">\n                Page{\" \"}\n                {Math.ceil(totalToken / amount) -\n                  Math.ceil((totalToken - from) / amount) +\n                  1}{\" \"}\n                of {Math.ceil(totalToken / amount)}\n              </p>\n            </div>\n            <div\n              className={\n                from + visibleTokenCount === totalToken\n                \n                  ? \"nextbox-contract disabled\"\n                  : \"nextbox-contract\"\n              }\n              onClick={() => handleChangePage(\"next\")}\n            >\n              <img className=\"navigation-arrow\" src={\"/images/next.svg\"} />\n            </div>\n            <div\n              className={\n                from + visibleTokenCount === totalToken\n                  ? \"lastbox-contract disabled\"\n                  : \"lastbox-contract\"\n              }\n              onClick={() => handleChangePage(\"last\")}\n            >\n              <button\n                style={{ backgroundColor: \"white\" }}\n                className=\"last-contract\"\n              >\n                Last\n              </button>\n            </div>\n          </RightPagination>\n        </Pagination>\n      </Responsive>\n      <FooterComponent />\n    </div>\n  );\n}\n"],"sourceRoot":""}