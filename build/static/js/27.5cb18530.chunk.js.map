{"version":3,"sources":["modules/token/tokenHistoryAnalytics/index.js","modules/token/holderAnalytics/tokenBalanceGraph/index.js","modules/token/holderAnalytics/tokenTransferAmountGraph/index.js","modules/token/holderAnalytics/tokenTransferCount/index.js","modules/token/holderAnalytics/analyticsComponent.js","modules/holders/holderTable.js","modules/holders/holderDetails.js","services/accounts.js","modules/common/commonGraph.js","services/contract.js","services/address.js"],"names":["ProgressBarContainer","styled","div","NoDataFoundContainer","WrappedComponent","props","tn","useParams","TokenPriceHistoryGraph","contractAddress","tokenName","theme","componentDidMount","splitRes","window","location","pathname","split","length","setState","getHistoricalTokenData","a","loading","tokenAddress","request","startTime","moment","subtract","valueOf","endTime","utility","parseResponse","accounts","getHistoryPrice","error","response","generateGraphData","graphData","data","__this","options","title","text","chart","type","zoomType","enabled","backgroundColor","legend","layout","align","symbolPadding","symbolWidth","symbolHeight","squareSymbol","useHTML","labelFormatter","this","name","state","navigator","scrollbar","rangeSelector","exporting","buttons","contextButton","tooltip","formatter","x","format","point","highestPrice","lowestPrice","closingPrice","series","map","obj","timestamp","y","color","credits","yAxis","opposite","xAxis","showInLegend","className","size","src","require","BaseComponent","TokenBalanceGraphComponent","count","buttonSpacing","buttonTheme","style","fill","stroke","fontWeight","fontSize","width","height","r","states","hover","select","inputBoxBorderColor","inputBoxWidth","inputBoxHeight","inputDateFormat","inputStyle","labelStyle","shared","date","Math","abs","Number","currentBalance","toFixed","labels","Highcharts","dateFormat","value","CircularProgress","receiveAmountSeries","sentAmountSeries","push","toAmount","fromAmount","addr","address","TokenTransferCountGraph","getTokenTransfer","userAddress","walletAddress","from","to","getTokenTransferCount","sort","itemA","itemB","totalTransferData","inBoundData","outBoundData","uniqueAddressSent","uniqueAddressReceived","index","totalTransfers","inBoundTransfer","outBoundTransfer","uniqueAddressesSent","uniqueAddressesReceived","AnalyticsTabButton","button","active","Buttonscontainer","TokenAnalytics","React","useState","setGraphData","setLoading","contractAdd","setContractAdd","useEffect","getTokenBalance","values","pageNum","perpage","Utils","TokenData","getHolderDetailsUsingAddressforToken","err","tns","Contract_address","Utility","AccountService","activeTab","setActiveTab","Paper","padding","borderRadius","boxShadow","display","flexFlow","gap","elevation","onClick","DeskTopView","MobileView","useStyles","makeStyles","container","borderBottom","background","containerDark","customTooltip","customTooltipDarkMode","HolderTableComponent","classes","shorten","b","amountL","stars","slice","repeat","setAddress","setBalance","totalRecord","setTotalRecord","keywords","setKeywords","setReportaddress","downloadaddress","setDownloadaddress","page","setPage","isDownloadActive","setDownloadActive","noData","setNoData","isLoading","sortKey","setSortKey","sortOrder","setSortOrder","rowsPerPage","setRowsPerPage","txHashToolTop","setTxHashToolTop","ageToolTip","setAgeToolTip","blockToolTip","setBlockToolTip","fromToolTip","setFromToolTip","toToolTip","setToToolTip","amountToolTip","setAmountToolTip","exportToolTip","setExportToolTip","sortTable","_sortKey","_sortOrder","includes","requestObj","skip","limit","getHolderDetails","handleChangePage","action","pagecount","handleChangeRowsPerPage","event","target","reqObj","responseData","Total_transfes_transactions_Count","parseResponseData","parseFloat","console","Recdata","trxn","JSON","parse","Transfers","responseTransaction","total","d","Txn_Hash","hash","Age","Block","blockNumber","From","To","Value","id","_id","handleKeyUp","searchkeyword","handleChanged","checked","tempAddress","isChecked","filter","TxHash","Amount","tempAddr","marginRight","marginTop","placeholder","onKeyPress","e","key","onChange","filename","textAlign","paddingTop","Tooltip","open","onOpen","onClose","placement","messages","DOWNLOAD_CSV","pointerEvents","Grid","lg","TableContainer","Table","TableHead","TableRow","TableCell","border","innerWidth","HASH","alt","AGE","BLOCK","FROM","TO","AMOUNT","TableBody","colspan","row","currentTime","Date","previousTime","TimeAge","timeDiff","divideByDecimalValue","decimal","marginleft","href","handler","item","round","ceil","QRCode","CloseIcon","img","isDesktop","TabComponent","toggleTab","toggleState","transactions","flexDirection","trans","connect","dispatchAction","isAnalytics","URLSearchParams","search","get","setToggleState","copiedText","setCopiedText","holder","setHolderDetail","setContractAddress","setDecimal","holderDetail","getContractDetails","urlPath","ContractData","getContractDetailsUsingAddress","contractDecimal","contractResponse","decimals","holderBalance","Holder_token_balance","currentTheme","tableCell","paddingRight","onCopy","marginLeft","trigger","lockScroll","modal","close","alignItems","getHeaders","httpConstants","CONTENT_TYPE","APPLICATION_JSON","process","httpService","METHOD_TYPE","GET","then","success","responseCode","Promise","resolve","reject","catch","symbol","url","API_END_POINT","GET_TOKEN_INFO","requestData","POST","path","GET_TOKEN_BALANCE","GET_ADDRESS_ANALYTICS","GET_TOKEN_TRANSFER_COUNT","GET_TOKEN_OVERVIEW","GET_HISTORY_PRICE","getTotalAccount","getSomeDaysAccount","getLatestAccount","getTokenOverview","getTokenInfo","getAccountList","getAddressAnalytics","Chart","setOptions","lang","rangeSelectorFrom","rangeSelectorTo","rangeSelectorZoom","highcharts","constructorType","getContractLists","getTotalContractList","getContractSearch","addrr","sortType","searchValue","txnType","status","getAddressDetail","getAddressDetailWithlimit","getFilteredAddressDetailWithLimit","getFiltersForAccountTransaction","getTransactionSearch","getTransactionsCountForAddress","getAddressStats"],"mappings":"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","file":"static/js/27.5cb18530.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Graph from \"../../common/commonGraph\";\r\nimport BaseComponent from \"../../baseComponent\";\r\nimport utility from \"../../../utility\";\r\nimport accounts from \"../../../services/accounts\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-flow: row;\r\n  margin: 20px;\r\n`;\r\n\r\nconst NoDataFoundContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  gap: 10px;\r\n  @media (min-width: 767px) {\r\n    margin: 100px !important;\r\n  }\r\n`;\r\nexport default function WrappedComponent(props) {\r\n  const { tn } = useParams();\r\n  return (\r\n    <TokenPriceHistoryGraph\r\n      contractAddress={props.contractAddress}\r\n      tokenName={tn}\r\n      theme={props.theme}\r\n    />\r\n  );\r\n}\r\n\r\nclass TokenPriceHistoryGraph extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      tokenName: \"\",\r\n      graphData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let splitRes = window.location.pathname.split(\"/\");\r\n    if (splitRes && splitRes.length) {\r\n      this.setState({ tokenName: splitRes[splitRes.length - 1] });\r\n    }\r\n    this.getHistoricalTokenData();\r\n  };\r\n\r\n  getHistoricalTokenData = async () => {\r\n    this.setState({ loading: true });\r\n    // const tokenAddress = window.location.pathname.split(\"/\")[2];\r\n    const tokenAddress = this.props.contractAddress;\r\n    let request = {\r\n      tokenAddress: tokenAddress,\r\n      startTime: moment().subtract(2, \"month\").valueOf(),\r\n      endTime: moment().valueOf(),\r\n    };\r\n    let [error, response] = await utility.parseResponse(\r\n      accounts.getHistoryPrice(request)\r\n    );\r\n    if (error || !response) {\r\n      this.setState({ loading: false });\r\n      this.generateGraphData([]);\r\n      return;\r\n    }\r\n    this.setState({ loading: false, graphData: response });\r\n    this.generateGraphData(response);\r\n  };\r\n\r\n  generateGraphData = (data) => {\r\n    // const data = [{\r\n    //     \"tokenAddress\": \"xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1\",\r\n    //     \"closingTime\": 1641427199000,\r\n    //     \"openingTime\": 1641340800000,\r\n    //     \"highValueTime\": 1641391199000,\r\n    //     \"lowValueTime\": 1641405599000,\r\n    //     \"openingPrice\": 100,\r\n    //     \"highestPrice\": 120,\r\n    //     \"lowestPrice\": 90,\r\n    //     \"closingPrice\": 105,\r\n    //     \"volume\": 66994920902.7202,\r\n    //     \"marketCap\": 4530215218.84018,\r\n    //     \"timestamp\": 1641340800000\r\n    // },\r\n    //     {\r\n    //         \"tokenAddress\": \"xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1\",\r\n    //         \"closingTime\": 1641427199000,\r\n    //         \"openingTime\": 1641340800000,\r\n    //         \"highValueTime\": 1641391199000,\r\n    //         \"lowValueTime\": 1641405599000,\r\n    //         \"openingPrice\": 100,\r\n    //         \"highestPrice\": 120,\r\n    //         \"lowestPrice\": 90,\r\n    //         \"closingPrice\": 120,\r\n    //         \"volume\": 66994920902.7202,\r\n    //         \"marketCap\": 4530215218.84018,\r\n    //         \"timestamp\": 1641487232000\r\n    //     },\r\n    //     {\r\n    //         \"tokenAddress\": \"xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1\",\r\n    //         \"closingTime\": 1641427199000,\r\n    //         \"openingTime\": 1641340800000,\r\n    //         \"highValueTime\": 1641391199000,\r\n    //         \"lowValueTime\": 1641405599000,\r\n    //         \"openingPrice\": 100,\r\n    //         \"highestPrice\": 120,\r\n    //         \"lowestPrice\": 90,\r\n    //         \"closingPrice\": 150,\r\n    //         \"volume\": 66994920902.7202,\r\n    //         \"marketCap\": 4530215218.84018,\r\n    //         \"timestamp\": 1641573632000\r\n    //     }\r\n    // ]\r\n    const __this = this;\r\n    let options = {\r\n      title: {\r\n        text: \"\",\r\n      },\r\n      chart: {\r\n        type: \"line\",\r\n        zoomType: {\r\n          enabled: false,\r\n        },\r\n        backgroundColor: \"#ffffff\",\r\n      },\r\n      legend: {\r\n        layout: \"horizontal\",\r\n        align: \"center\",\r\n        enabled: true,\r\n        symbolPadding: 0,\r\n        symbolWidth: 0,\r\n        symbolHeight: 0,\r\n        squareSymbol: false,\r\n        backgroundColor: \"#FFFFFF\",\r\n        useHTML: true,\r\n        labelFormatter: function () {\r\n          let legend = \"<div style='display:flex; align-items: center;'>\";\r\n          if (this.name == __this.state.tokenName + \" Daily Price\") {\r\n            legend +=\r\n              \"<img style='margin:5px' src='/images/graph-circle-blue.svg' />\";\r\n          }\r\n\r\n          return (legend +=\r\n            \"<div style='margin:5px 5px 5px 0'>\" +\r\n            __this.state.tokenName +\r\n            \" Daily Price\" +\r\n            \"</div>\" +\r\n            \"</div>\");\r\n        },\r\n      },\r\n      navigator: {\r\n        enabled: false,\r\n      },\r\n      scrollbar: {\r\n        enabled: false,\r\n      },\r\n      rangeSelector: {\r\n        enabled: false,\r\n      },\r\n      exporting: {\r\n        buttons: {\r\n          contextButton: {\r\n            text: \"Export\",\r\n            enabled: true,\r\n          },\r\n        },\r\n        enabled: true,\r\n      },\r\n      tooltip: {\r\n        split: false,\r\n        formatter: function () {\r\n          let tooltip = moment(this.x).format(\"dddd, MMM D, YYYY\");\r\n          tooltip += '<br><h2 style=\"font-size:20px\">Daily Price</h2>';\r\n          tooltip +=\r\n            \"<br><h2>High - </h2>\" +\r\n            '<label style=\"font-weight: bold\">' +\r\n            this.point.highestPrice +\r\n            \" USD</label>\";\r\n          tooltip +=\r\n            \"<br><h2>Low - </h2>\" +\r\n            '<label style=\"font-weight: bold\">' +\r\n            this.point.lowestPrice +\r\n            \" USD</label>\";\r\n          tooltip +=\r\n            \"<br><h2>Close - </h2>\" +\r\n            '<label style=\"font-weight: bold\">' +\r\n            this.point.closingPrice +\r\n            \" USD</label>\";\r\n          return tooltip;\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          data: data.map((obj) => {\r\n            obj.x = obj.timestamp;\r\n            obj.y = obj.closingPrice;\r\n            return obj;\r\n          }),\r\n          color: \"rgb(124, 181, 236)\",\r\n          name: __this.state.tokenName + \" Daily Price\",\r\n        },\r\n      ],\r\n      credits: { enabled: false },\r\n      yAxis: [\r\n        {\r\n          opposite: false,\r\n          title: { text: __this.state.tokenName + \" Price(USD)\" },\r\n        },\r\n      ],\r\n      xAxis: [\r\n        {\r\n          showInLegend: false,\r\n          opposite: false,\r\n          title: { text: \"\" },\r\n        },\r\n      ],\r\n    };\r\n    this.setState({ options });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.theme === \"dark\" ? \"bg-192a59\" : \"\"}>\r\n        {this.state.loading ? (\r\n          <ProgressBarContainer>\r\n            <CircularProgress size={40} />\r\n          </ProgressBarContainer>\r\n        ) : (\r\n          <span>\r\n            {this.state.graphData.length == 0 ?\r\n              <NoDataFoundContainer>\r\n                <img\r\n                  src={require(\"../../../../src/assets/images/XDC-Alert.svg\")}\r\n                ></img>\r\n\r\n                <div className={this.props.theme === \"dark\" ? \"fc-b1c3e1\" : \"\"}>No Data found.</div>\r\n              </NoDataFoundContainer>\r\n              :\r\n              <Graph options={this.state.options} />\r\n            }\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Graph from \"../../../common/commonGraph\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Highcharts from \"highcharts/highstock\";\r\n\r\nconst NoDataFoundContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  gap: 10px;\r\n  @media (min-width: 767px) {\r\n    margin: 100px !important;\r\n  }\r\n`;\r\n\r\nfunction TokenBalanceGraphComponent(props) {\r\n  const graphData = props.graphData.map((data) => {\r\n    data.x = data.date;\r\n    data.y = Math.abs(Number(data.currentBalance.toFixed(2)));\r\n    return data;\r\n  });\r\n\r\n  const options = {\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    legend: {\r\n      layout: \"horizontal\",\r\n      align: \"center\",\r\n      enabled: true,\r\n      symbolPadding: 0,\r\n      symbolWidth: 0,\r\n      symbolHeight: 0,\r\n      squareSymbol: false,\r\n      backgroundColor: \"#FFFFFF\",\r\n      useHTML: true,\r\n      labelFormatter: function () {\r\n        let legend = \"<div style='display:flex; align-items: center;'>\";\r\n        if (this.name == \"Token Balance\") {\r\n          legend +=\r\n            \"<img style='margin:5px' src='/images/graph-circle-blue.svg' />\";\r\n        }\r\n\r\n        return (legend +=\r\n          \"<div style='margin:5px 5px 5px 0'>\" +\r\n          this.name +\r\n          \"</div>\" +\r\n          \"</div>\");\r\n      },\r\n    },\r\n    navigator: {\r\n      enabled: false,\r\n    },\r\n    scrollbar: {\r\n      enabled: false,\r\n    },\r\n    rangeSelector: {\r\n      enabled: true,\r\n      buttons: [\r\n        {\r\n          type: \"all\",\r\n          text: \"All\",\r\n        },\r\n        {\r\n          type: \"year\",\r\n          count: 1,\r\n          text: \"1y\",\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 6,\r\n          text: \"6m\",\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 3,\r\n          text: \"3m\",\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 1,\r\n          text: \"1m\",\r\n        },\r\n      ],\r\n      buttonSpacing: 10,\r\n\r\n      buttonTheme: {\r\n        style: {\r\n          fill: \"none\",\r\n        },\r\n        stroke: \"none\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 10,\r\n        width: null,\r\n        height: 25,\r\n        \"stroke-width\": 0,\r\n        r: 5,\r\n        states: {\r\n          hover: {\r\n            fill: \"#4878ff\",\r\n            style: {\r\n              color: \"white\",\r\n            },\r\n          },\r\n          select: {\r\n            fill: \"#4878ff\",\r\n            style: {\r\n              color: \"white\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      inputBoxBorderColor: \"#e3e7eb\",\r\n      inputBoxWidth: 85,\r\n      inputBoxHeight: 25,\r\n      inputDateFormat: \"%d-%m-%Y\",\r\n      inputStyle: {\r\n        color: \"#2a2a2a\",\r\n      },\r\n      labelStyle: {\r\n        color: \"#252525\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    tooltip: {\r\n      split: false,\r\n      shared: true,\r\n    },\r\n    series: [\r\n      {\r\n        showInLegend: true,\r\n        data: graphData,\r\n        name: \"Token Balance\",\r\n        type: \"line\",\r\n      },\r\n    ],\r\n    credits: { enabled: false },\r\n    yAxis: [\r\n      {\r\n        opposite: false,\r\n        title: { text: \"Token Balance\" },\r\n      },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        showInLegend: false,\r\n        opposite: false,\r\n        title: { text: \"\" },\r\n        labels: {\r\n          formatter: function () {\r\n            return Highcharts.dateFormat(\"%d-%m-%Y\", this.value);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={props.theme === \"dark\" ? \"bg-192a59\" : \"\"}>\r\n      {props.loading ? (\r\n        <props.ProgressBarContainer>\r\n          <CircularProgress size={40} />\r\n        </props.ProgressBarContainer>\r\n      ) : (\r\n          <span>\r\n              {props.graphData.length == 0 ?\r\n                  <NoDataFoundContainer>\r\n                    <img\r\n                        src={require(\"../../../../../src/assets/images/XDC-Alert.svg\")}\r\n                    ></img>\r\n\r\n                    <div className={props.theme === \"dark\" ? \"fc-b1c3e1\" : \"\"}>No Data found.</div>\r\n                  </NoDataFoundContainer>\r\n                  :\r\n                  <Graph options={options}/>\r\n              }\r\n            </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenBalanceGraphComponent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Graph from \"../../../common/commonGraph\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Highcharts from \"highcharts/highstock\";\r\n\r\n\r\nconst NoDataFoundContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  gap: 10px;\r\n  @media (min-width: 767px) {\r\n    margin: 100px !important;\r\n  }\r\n`;\r\nfunction TokenBalanceGraphComponent(props) {\r\n  let receiveAmountSeries = [],\r\n    sentAmountSeries = [];\r\n  props.graphData.map((data) => {\r\n    sentAmountSeries.push({\r\n      x: data.date,\r\n      y: data.toAmount,\r\n    });\r\n    receiveAmountSeries.push({\r\n      x: data.date,\r\n      y: data.fromAmount,\r\n    });\r\n  });\r\n\r\n  const options = {\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    chart: {\r\n      type: \"column\",\r\n    },\r\n    legend: {\r\n      layout: \"horizontal\",\r\n      align: \"center\",\r\n      enabled: true,\r\n      symbolPadding: 0,\r\n      symbolWidth: 0,\r\n      symbolHeight: 0,\r\n      squareSymbol: false,\r\n      backgroundColor: \"#FFFFFF\",\r\n      useHTML: true,\r\n      labelFormatter: function () {\r\n        let legend = \"<div style='display:flex; align-items: center;'>\";\r\n        if (this.name == \"Sent (out)\") {\r\n          legend +=\r\n            \"<img style='margin:5px' src='/images/graph-triangle.svg' />\";\r\n        }\r\n        if (this.name == \"Receive (in)\") {\r\n          legend +=\r\n            \"<img style='margin:5px' src='/images/graph-triangle-red.svg' />\";\r\n        }\r\n\r\n        return (legend +=\r\n          \"<div style='margin:5px 5px 5px 0'>\" +\r\n          this.name +\r\n          \"</div>\" +\r\n          \"</div>\");\r\n      },\r\n    },\r\n    navigator: {\r\n      enabled: false,\r\n    },\r\n    scrollbar: {\r\n      enabled: false,\r\n    },\r\n    rangeSelector: {\r\n      enabled: true,\r\n      buttons: [\r\n        {\r\n          type: \"all\",\r\n          text: \"All\",\r\n        },\r\n        {\r\n          type: \"year\",\r\n          count: 1,\r\n          text: \"1y\",\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 6,\r\n          text: \"6m\",\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 3,\r\n          text: \"3m\",\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 1,\r\n          text: \"1m\",\r\n        },\r\n      ],\r\n      buttonSpacing: 10,\r\n\r\n      buttonTheme: {\r\n        style: {\r\n          fill: \"none\",\r\n        },\r\n        stroke: \"none\",\r\n        fontWeight: \"bold\",\r\n        width: null,\r\n        height: 25,\r\n        \"stroke-width\": 0,\r\n        r: 5,\r\n        states: {\r\n          hover: {\r\n            fill: \"#4878ff\",\r\n            style: {\r\n              color: \"white\",\r\n            },\r\n          },\r\n          select: {\r\n            fill: \"#4878ff\",\r\n            style: {\r\n              color: \"white\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      inputBoxBorderColor: \"#e3e7eb\",\r\n      inputBoxWidth: 85,\r\n      inputBoxHeight: 25,\r\n      inputDateFormat: \"%d-%m-%Y\",\r\n      inputStyle: {\r\n        color: \"#2a2a2a\",\r\n      },\r\n      labelStyle: {\r\n        color: \"#252525\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    tooltip: {\r\n      split: false,\r\n      shared: true,\r\n    },\r\n    series: [\r\n      {\r\n        showInLegend: true,\r\n        data: sentAmountSeries,\r\n        name: \"Sent (out)\",\r\n      },\r\n      {\r\n        showInLegend: true,\r\n        data: receiveAmountSeries,\r\n        name: \"Receive (in)\",\r\n      },\r\n    ],\r\n    credits: { enabled: false },\r\n    yAxis: [\r\n      {\r\n        opposite: false,\r\n        title: { text: \"Transfer Amounts\" },\r\n      },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        showInLegend: false,\r\n        opposite: false,\r\n        title: { text: \"\" },\r\n        labels: {\r\n          formatter: function () {\r\n            return Highcharts.dateFormat(\"%d-%m-%Y\", this.value);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={props.theme === \"dark\" ? \"bg-192a59\" : \"\"}>\r\n      {props.loading ? (\r\n        <props.ProgressBarContainer> \r\n          <CircularProgress size={40} />\r\n        </props.ProgressBarContainer>\r\n      ) : (\r\n          <span>\r\n              {props.graphData.length == 0 ?\r\n                  <NoDataFoundContainer>\r\n                    <img\r\n                        src={require(\"../../../../../src/assets/images/XDC-Alert.svg\")}\r\n                    ></img>\r\n\r\n                    <div className={props.theme === \"dark\" ? \"fc-b1c3e1\" : \"\"}>No Data found.</div>\r\n                  </NoDataFoundContainer>\r\n                  :\r\n                  <Graph options={options}/>\r\n              }\r\n            </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenBalanceGraphComponent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Graph from \"../../../common/commonGraph\";\r\nimport BaseComponent from \"../../../baseComponent\";\r\nimport TokenListComponent from \"../../../tokenList/tokenList\";\r\nimport utility from \"../../../../utility\";\r\nimport accounts from \"../../../../services/accounts\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Highcharts from \"highcharts/highstock\";\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-flow: row;\r\n  margin: 20px;\r\n`;\r\n\r\nconst NoDataFoundContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  gap: 10px;\r\n  @media (min-width: 767px) {\r\n    margin: 100px !important;\r\n  }\r\n`;\r\n\r\nexport default function WrappedComponent(props) {\r\n  const { addr } = useParams();\r\n  return (\r\n    <TokenTransferCountGraph\r\n      address={addr}\r\n      contractAddress={props.contractAddress}\r\n      theme={props.theme}\r\n    />\r\n  );\r\n}\r\n\r\nclass TokenTransferCountGraph extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        loading: false\r\n      },\r\n      graphData:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getTokenTransfer();\r\n  };\r\n\r\n  async getTokenTransfer() {\r\n    this.setState({ loading: true });\r\n    const userAddress = this.props.address;\r\n    const tokenAddress = this.props.contractAddress;\r\n    let request = {\r\n      walletAddress: userAddress,\r\n      tokenAddress: tokenAddress,\r\n      from: moment().subtract(2, \"month\").valueOf(),\r\n      to: moment().valueOf(),\r\n    };\r\n    let [error, response] = await utility.parseResponse(\r\n      accounts.getTokenTransferCount(request)\r\n    );\r\n    this.setState({ loading: false });\r\n    if (error || !response) {\r\n      this.generateGraphData([]);\r\n      return;\r\n    }\r\n    this.setState({graphData:response})\r\n    this.generateGraphData(response);\r\n  }\r\n\r\n  generateGraphData(data) {\r\n    data = data.sort((itemA, itemB) => {\r\n      return itemA.date - itemB.date;\r\n    });\r\n    const totalTransferData = [];\r\n    const inBoundData = [];\r\n    const outBoundData = [];\r\n    const uniqueAddressSent = [];\r\n    const uniqueAddressReceived = [];\r\n    for (let index = 0; index < data.length; index++) {\r\n      const x = data[index].date;\r\n      totalTransferData.push({ x, y: data[index].totalTransfers });\r\n      inBoundData.push({ x, y: data[index].inBoundTransfer });\r\n      outBoundData.push({ x, y: data[index].outBoundTransfer });\r\n      uniqueAddressSent.push({\r\n        x,\r\n        y: data[index].uniqueAddressesSent,\r\n      });\r\n      uniqueAddressReceived.push({\r\n        x,\r\n        y: data[index].uniqueAddressesReceived,\r\n      });\r\n    }\r\n    let options = {\r\n      title: {\r\n        text: \"\",\r\n      },\r\n      chart: {\r\n        type: \"line\",\r\n      },\r\n      legend: {\r\n        layout: \"horizontal\",\r\n        align: \"center\",\r\n        enabled: true,\r\n        symbolPadding: 0,\r\n        symbolWidth: 0,\r\n        symbolHeight: 0,\r\n        squareSymbol: false,\r\n        backgroundColor: \"#FFFFFF\",\r\n        useHTML: true,\r\n        labelFormatter: function () {\r\n          let legend = \"<div style='display:flex; align-items: center;'>\";\r\n          if (this.name == \"Outbound Transfers Counts\") {\r\n            legend +=\r\n              \"<img style='margin:5px' src='/images/graph-triangle.svg' />\";\r\n          }\r\n          if (this.name == \"Inbound Transfers Counts\") {\r\n            legend +=\r\n              \"<img style='margin:5px' src='/images/graph-triangle-red.svg' />\";\r\n          }\r\n          if (this.name == \"Total Transfers\") {\r\n            legend +=\r\n              \"<img style='margin:5px' src='/images/graph-circle-blue.svg' />\";\r\n          }\r\n          if (this.name == \"Unique Address Sent\") {\r\n            legend +=\r\n              \"<img style='margin:5px' src='/images/graph-triangle.svg' />\";\r\n          }\r\n          if (this.name == \"Unique Address Received\") {\r\n            legend +=\r\n              \"<img style='margin:5px' src='/images/graph-triangle-red.svg' />\";\r\n          }\r\n\r\n          return (legend +=\r\n            \"<div style='margin:5px 5px 5px 0'>\" +\r\n            this.name +\r\n            \"</div>\" +\r\n            \"</div>\");\r\n        },\r\n      },\r\n      navigator: {\r\n        enabled: false,\r\n      },\r\n      scrollbar: {\r\n        enabled: false,\r\n      },\r\n      rangeSelector: {\r\n        enabled: true,\r\n        buttons: [\r\n          {\r\n            type: \"all\",\r\n            text: \"All\",\r\n          },\r\n          {\r\n            type: \"year\",\r\n            count: 1,\r\n            text: \"1y\",\r\n          },\r\n          {\r\n            type: \"month\",\r\n            count: 6,\r\n            text: \"6m\",\r\n          },\r\n          {\r\n            type: \"month\",\r\n            count: 3,\r\n            text: \"3m\",\r\n          },\r\n          {\r\n            type: \"month\",\r\n            count: 1,\r\n            text: \"1m\",\r\n          },\r\n        ],\r\n        buttonSpacing: 10,\r\n\r\n        buttonTheme: {\r\n          style: {\r\n            fill: \"none\",\r\n          },\r\n          stroke: \"none\",\r\n          fontWeight: \"bold\",\r\n          width: null,\r\n          height: 25,\r\n          \"stroke-width\": 0,\r\n          r: 5,\r\n          states: {\r\n            hover: {\r\n              fill: \"#4878ff\",\r\n              style: {\r\n                color: \"white\",\r\n              },\r\n            },\r\n            select: {\r\n              fill: \"#4878ff\",\r\n              style: {\r\n                color: \"white\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        inputBoxBorderColor: \"#e3e7eb\",\r\n        inputBoxWidth: 85,\r\n        inputBoxHeight: 25,\r\n        inputDateFormat: \"%d-%m-%Y\",\r\n        inputStyle: {\r\n          color: \"#2a2a2a\",\r\n        },\r\n        labelStyle: {\r\n          color: \"#252525\",\r\n          fontWeight: \"bold\",\r\n          fontSize: 10,\r\n        },\r\n      },\r\n      tooltip: {\r\n        split: false,\r\n        shared: true,\r\n      },\r\n      series: [\r\n        {\r\n          data: totalTransferData,\r\n          type: \"column\",\r\n          color: \"rgb(124, 181, 236)\",\r\n          name: \"Total Transfers\",\r\n        },\r\n        {\r\n          data: outBoundData,\r\n          type: \"line\",\r\n          color: \"rgb(67, 67, 72)\",\r\n          name: \"Outbound Transfers Counts\",\r\n        },\r\n        {\r\n          data: inBoundData,\r\n          type: \"line\",\r\n          color: \"rgb(144, 237, 125)\",\r\n          name: \"Inbound Transfers Counts\",\r\n        },\r\n        {\r\n          data: uniqueAddressSent,\r\n          type: \"line\",\r\n          color: \"rgb(247, 163, 92)\",\r\n          name: \"Unique Address Sent\",\r\n        },\r\n        {\r\n          data: uniqueAddressReceived,\r\n          type: \"line\",\r\n          color: \"rgb(128, 133, 233)\",\r\n          name: \"Unique Address Received\",\r\n        },\r\n      ],\r\n      credits: { enabled: false },\r\n      yAxis: [\r\n        {\r\n          opposite: false,\r\n          title: { text: \"Transfer Counts\" },\r\n        },\r\n      ],\r\n      xAxis: [\r\n        {\r\n          showInLegend: false,\r\n          opposite: false,\r\n          title: { text: \"\" },\r\n          labels: {\r\n            formatter: function () {\r\n              return Highcharts.dateFormat(\"%d-%m-%Y\", this.value);\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.setState({ options });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.theme === \"dark\" ? \"bg-192a59\" : \"\"}>\r\n        {this.state.loading ? (\r\n          <ProgressBarContainer>\r\n            <CircularProgress size={40} />\r\n          </ProgressBarContainer>\r\n        ) : (\r\n            <span>\r\n              {this.state.graphData.length == 0 ?\r\n                  <NoDataFoundContainer>\r\n                    <img\r\n                        src={require(\"../../../../../src/assets/images/XDC-Alert.svg\")}\r\n                    ></img>\r\n\r\n                    <div className={this.props.theme === \"dark\" ? \"fc-b1c3e1\" : \"\"}>No Data found.</div>\r\n                  </NoDataFoundContainer>\r\n                  :\r\n                  <Graph options={this.state.options}/>\r\n              }\r\n            </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport TokenBalanceGraph from \"./tokenBalanceGraph\";\r\nimport TokenTransferAmount from \"./tokenTransferAmountGraph\";\r\nimport TokenTransferCount from \"./tokenTransferCount\";\r\nimport TokeHistoryAnalytics from \"../tokenHistoryAnalytics\";\r\nimport Utility from \"../../../utility\";\r\nimport AccountService from \"../../../services/accounts\";\r\nimport moment from \"moment\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Utils from \"../../../utility\";\r\nimport TokenData from \"../../../services/token\";\r\n\r\nconst AnalyticsTabButton = styled.button`\r\n  border-radius: 5px;\r\n  border: 1px solid #d5dae2;\r\n  background: #fff;\r\n  color: #77838f;\r\n  font-weight: 600;\r\n  height: 35px;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    background: #2149b9;\r\n    color: #fff;\r\n    border: none;\r\n  `}\r\n`;\r\n\r\nconst Buttonscontainer = styled.div`\r\n  padding: 15px 0 0 15px;\r\n  display: flex;\r\n  flex-flow: row;\r\n  gap: 15px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    flex-flow: column;\r\n    align-items: flex-start;\r\n    padding: 0 0 0 15px;\r\n  }\r\n`;\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-flow: row;\r\n  margin: 20px;\r\n`;\r\n\r\nfunction TokenAnalytics(props) {\r\n  const [graphData, setGraphData] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [contractAdd, setContractAdd] = React.useState(\"\");\r\n\r\n  React.useEffect(async () => {\r\n    await getTokenBalance();\r\n  }, []);\r\n\r\n  const getTokenBalance = async () => {\r\n    let values = { addr: props.walletAddress, pageNum: 0, perpage: 1 };\r\n    let [err, tns] = await Utils.parseResponse(\r\n      TokenData.getHolderDetailsUsingAddressforToken(values)\r\n    );\r\n    if (err || !tns) return;\r\n    setContractAdd(tns[0]?.Contract_address);\r\n    setLoading(true);\r\n    let request = {\r\n      walletAddress: props.walletAddress,\r\n      tokenAddress: tns[0]?.Contract_address,\r\n      from: moment().subtract(3, \"month\").valueOf(),\r\n      to: moment().valueOf(),\r\n      type: \"\",\r\n    };\r\n    let [error, response] = await Utility.parseResponse(\r\n      AccountService.getTokenBalance(request)\r\n    );\r\n    setLoading(false);\r\n    if (error || !response) {\r\n      return [];\r\n    }\r\n    setGraphData(response.data);\r\n  };\r\n\r\n  let [activeTab, setActiveTab] = useState(\"tokenBalance\");\r\n\r\n  return (\r\n    <Paper\r\n      style={props.theme === \"dark\" ? {\r\n        padding: \"15px 10px 0 0\",\r\n        borderRadius: \"14px\",\r\n        boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        gap: \"10px\",\r\n        backgroundColor: \"#192a59\"\r\n      } : {\r\n        padding: \"15px 10px 0 0\",\r\n        borderRadius: \"14px\",\r\n        boxShadow: \" 0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        gap: \"10px\",\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <Buttonscontainer>\r\n        <AnalyticsTabButton\r\n          active={activeTab === \"tokenBalance\" ? true : false}\r\n          onClick={() => setActiveTab(\"tokenBalance\")}\r\n        >\r\n          Token Balance\r\n        </AnalyticsTabButton>\r\n        <AnalyticsTabButton\r\n          active={activeTab === \"tokenTransferAmounts\" ? true : false}\r\n          onClick={() => setActiveTab(\"tokenTransferAmounts\")}\r\n        >\r\n          Token Transfer Amounts\r\n        </AnalyticsTabButton>\r\n        <AnalyticsTabButton\r\n          active={activeTab === \"tokenTransferCounts\" ? true : false}\r\n          onClick={() => setActiveTab(\"tokenTransferCounts\")}\r\n        >\r\n          Token Transfer Counts\r\n        </AnalyticsTabButton>\r\n        <AnalyticsTabButton\r\n          active={activeTab === \"historicalPrice\" ? true : false}\r\n          onClick={() => setActiveTab(\"historicalPrice\")}\r\n        >\r\n          Historical Price\r\n        </AnalyticsTabButton>\r\n      </Buttonscontainer>\r\n      {activeTab === \"tokenBalance\" && (\r\n        <TokenBalanceGraph\r\n          graphData={graphData}\r\n          loading={loading}\r\n          ProgressBarContainer={ProgressBarContainer}\r\n          theme={props.theme}\r\n        />\r\n      )}\r\n      {activeTab === \"tokenTransferAmounts\" && (\r\n        <TokenTransferAmount\r\n          graphData={graphData}\r\n          loading={loading}\r\n          ProgressBarContainer={ProgressBarContainer}\r\n          theme={props.theme}\r\n        />\r\n      )}\r\n      {activeTab === \"tokenTransferCounts\" && (\r\n        <TokenTransferCount\r\n          contractAddress={contractAdd}\r\n          loading={loading}\r\n          ProgressBarContainer={ProgressBarContainer}\r\n          theme={props.theme}\r\n        />\r\n      )}\r\n      {activeTab === \"historicalPrice\" && (\r\n        <TokeHistoryAnalytics contractAddress={contractAdd} loading={loading} theme={props.theme}/>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default TokenAnalytics;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../../src/assets/styles/blocksAndTransactionList.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Grid, TableContainer } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\nimport Utility from \"../../utility\";\r\nimport AddressData from \"../../services/address\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\nimport TokenData from \"../../services/token\";\r\nimport Loader from \"../../assets/loader\";\r\nimport format from \"format-number\";\r\nimport PageSelector from \"../common/pageSelector\";\r\nimport { messages } from \"../../constants\";\r\n\r\nconst DeskTopView = styled.div`\r\n  @media (min-width: 0px) and (max-width: 1023px) {\r\n    display: none;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    display: visible;\r\n  }\r\n`;\r\n\r\nconst MobileView = styled.div`\r\n  @media (min-width: 0px) and (max-width: 1023px) {\r\n    display: visible;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst PaginationInLine = styled.div`\r\n  display: flex;\r\n  width: 75.125rem;\r\n  justify-content: space-between;\r\n`;\r\nconst Pagination = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  /* width: 990px; */\r\n  margin: auto;\r\n\r\n  @media (max-width: 640px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  @media (min-width: 641px) and (max-width: 1023px) {\r\n    display: flex;\r\n  }\r\n`;\r\nconst RightPagination = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  flex-direction: row;\r\n  /* width: 100%; */\r\n`;\r\nconst LeftPagination = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#fff\",\r\n  },\r\n  containerDark: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"none\",\r\n    background: \"#192a59\",\r\n  },\r\n  customTooltip: {\r\n    fontSize: \"13px\",\r\n  },\r\n  customTooltipDarkMode: {\r\n    background: \"#051440\",\r\n    color: \"#adc4e4\",\r\n    fontSize: \"13px\",\r\n  },\r\n});\r\nexport default function HolderTableComponent(props) {\r\n  const { state } = props;\r\n  const classes = useStyles();\r\n\r\n  function shorten(b, amountL = 10, amountR = 3, stars = 3) {\r\n    return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\r\n      b.length - 3,\r\n      b.length\r\n    )}`;\r\n  }\r\n\r\n  let { addr } = useParams();\r\n  const [address, setAddress] = useState([]);\r\n  const [txtAddress, setTxtAddress] = useState(\"\");\r\n  const [balance, setBalance] = useState(0);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [totalRecord, setTotalRecord] = useState(0);\r\n  const [keywords, setKeywords] = useState(\"\");\r\n\r\n  const [reportaddress, setReportaddress] = useState([]);\r\n  const [downloadaddress, setDownloadaddress] = useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [isDownloadActive, setDownloadActive] = useState(0);\r\n  const [noData, setNoData] = useState(false);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"\");\r\n  let showPerPage = 10;\r\n  let datas = {};\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(showPerPage);\r\n\r\n  // tooltip states\r\n  const [txHashToolTop, setTxHashToolTop] = React.useState(false);\r\n  const [ageToolTip, setAgeToolTip] = React.useState(false);\r\n  const [blockToolTip, setBlockToolTip] = React.useState(false);\r\n  const [fromToolTip, setFromToolTip] = React.useState(false);\r\n  const [toToolTip, setToToolTip] = React.useState(false);\r\n  const [amountToolTip, setAmountToolTip] = React.useState(false);\r\n  const [exportToolTip, setExportToolTip] = React.useState(false);\r\n\r\n  const sortTable = (_sortKey) => {\r\n    let _sortOrder = -1;\r\n    if (sortKey.includes(_sortKey)) {\r\n      _sortOrder = sortOrder * -1;\r\n    } else {\r\n      setSortKey(_sortKey);\r\n    }\r\n    setSortOrder(_sortOrder);\r\n    let requestObj = {\r\n      skip: 0,\r\n      limit: rowsPerPage,\r\n      address: addr,\r\n      sortKey: { [_sortKey]: _sortOrder },\r\n    };\r\n    getHolderDetails(requestObj);\r\n  };\r\n\r\n  const handleChangePage = (action) => {\r\n    let requestObj = {\r\n      limit: rowsPerPage,\r\n      address: addr,\r\n    };\r\n    if (keywords) requestObj.keywords = keywords;\r\n    if (action == \"first\") {\r\n      requestObj.skip = 0;\r\n      setPage(0);\r\n    }\r\n    if (action === \"last\") {\r\n      let pagecount = totalRecord - rowsPerPage;\r\n      setPage(pagecount);\r\n      requestObj.skip = pagecount;\r\n    }\r\n\r\n    if (action === \"next\") {\r\n      if (rowsPerPage + page < totalRecord) {\r\n        let pagecount = rowsPerPage + page;\r\n        setPage(pagecount);\r\n        requestObj.skip = pagecount;\r\n      }\r\n    }\r\n\r\n    if (action === \"prev\") {\r\n      if (page - rowsPerPage >= 0) {\r\n        let pagecount = page - rowsPerPage;\r\n        setPage(pagecount);\r\n        requestObj.skip = pagecount;\r\n      }\r\n    }\r\n    getHolderDetails(requestObj);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n    const reqObj = {\r\n      skip: 0,\r\n      limit: event.target.value,\r\n      address: addr,\r\n    };\r\n    getHolderDetails(reqObj);\r\n  };\r\n  const getHolderDetails = async (data) => {\r\n    try {\r\n      if (!data.sortKey && sortKey && sortOrder)\r\n        data.sortKey = { [sortKey]: sortOrder };\r\n      const [error, responseData] = await Utility.parseResponse(\r\n        TokenData.getHolderDetailsUsingAddressforToken(data)\r\n      );\r\n\r\n      if (responseData[0].Total_transfes_transactions_Count > 0) {\r\n        setLoading(false);\r\n        setNoData(false);\r\n        parseResponseData(responseData, 1);\r\n      } else {\r\n        setLoading(false);\r\n        setNoData(true);\r\n        setBalance(parseFloat(0).toFixed(2));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    datas = {\r\n      skip: page,\r\n      limit: rowsPerPage,\r\n      address: addr,\r\n    };\r\n    getHolderDetails(datas);\r\n  }, []);\r\n\r\n  // const getTransactionSearch = async (data) => {\r\n  //     try {\r\n  //         const [error, responseData] = await Utility.parseResponse(\r\n  //             AddressData.getTransactionSearch(data)\r\n  //         );\r\n  //\r\n  //         if (responseData.responseTransaction.length > 0) {\r\n  //             setNoData(false);\r\n  //             parseResponseData(responseData, 2);\r\n  //         } else {\r\n  //             setNoData(true);\r\n  //             setBalance(parseFloat(0).toFixed(2));\r\n  //         }\r\n  //     } catch (error) {\r\n  //         console.error(error);\r\n  //     }\r\n  // };\r\n\r\n  const parseResponseData = async (Recdata, type) => {\r\n    let trxn = [];\r\n    if (type == 1) {\r\n      trxn = JSON.parse(Recdata[0].Transfers);\r\n      setTotalRecord(Recdata[0].Total_transfes_transactions_Count);\r\n    } else {\r\n      trxn = Recdata.responseTransaction;\r\n      setTotalRecord(Recdata.total);\r\n    }\r\n\r\n    setAddress(\r\n      trxn.map((d) => {\r\n        return {\r\n          Txn_Hash: d.hash,\r\n          Age: d.timestamp,\r\n          Block: d.blockNumber,\r\n          From: d.from,\r\n          To: d.to,\r\n          Value: d.value,\r\n          id: d._id,\r\n        };\r\n      })\r\n    );\r\n\r\n    setReportaddress(\r\n      trxn.map((d) => {\r\n        return {\r\n          Txn_Hash: d.hash,\r\n          Age: d.timestamp,\r\n          Block: d.blockNumber,\r\n          From: d.from,\r\n          To: d.to,\r\n          Value: d.value / 1000000000000000000,\r\n        };\r\n      })\r\n    );\r\n    setDownloadaddress(\r\n      trxn.map((d) => {\r\n        return {\r\n          Txn_Hash: d.hash,\r\n          Age: moment(d.timestamp * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\r\n          Block: d.blockNumber,\r\n          From: d.from,\r\n          To: d.to,\r\n          Value: d.value / 1000000000000000000,\r\n        };\r\n      })\r\n    );\r\n  };\r\n  const handleKeyUp = (event) => {\r\n    let searchkeyword = event.target.value;\r\n    setSortKey(0);\r\n    setSortOrder(0);\r\n    setPage(0);\r\n    if (searchkeyword.length > 2) {\r\n      setKeywords(searchkeyword);\r\n      datas = {\r\n        skip: 0,\r\n        limit: rowsPerPage,\r\n        address: addr,\r\n        keywords: searchkeyword,\r\n      };\r\n      getHolderDetails(datas);\r\n    }\r\n    if (searchkeyword.length == 0) {\r\n      setPage(0);\r\n      datas = {\r\n        skip: 0,\r\n        limit: rowsPerPage,\r\n        address: addr,\r\n      };\r\n      getHolderDetails(datas);\r\n    }\r\n  };\r\n\r\n  const handleChanged = (event) => {\r\n    const { name, checked } = event.target;\r\n    if (name === \"allselect\") {\r\n      let tempAddress = address.map((addr) => {\r\n        return { ...addr, isChecked: checked };\r\n      });\r\n      setAddress(tempAddress);\r\n      let tempAddr = tempAddress.filter((addr) => {\r\n        if (addr.isChecked === true) {\r\n          return addr;\r\n        }\r\n      });\r\n      if (tempAddr.length > 0) {\r\n        setDownloadActive(1);\r\n      } else {\r\n        setDownloadActive(0);\r\n      }\r\n\r\n      setDownloadaddress(\r\n        tempAddress.map((d) => {\r\n          return {\r\n            TxHash: d.Txn_Hash,\r\n            Age: moment(d.Age * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\r\n            Block: d.Block,\r\n            From: d.From,\r\n            To: d.To,\r\n            Amount: d.Value,\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      let tempAddress = address.map((addr) =>\r\n        addr.id === name ? { ...addr, isChecked: checked } : addr\r\n      );\r\n      setAddress(tempAddress);\r\n      let tempAddr = tempAddress.filter((addr) => {\r\n        if (addr.isChecked === true) {\r\n          return addr;\r\n        }\r\n      });\r\n      if (tempAddr.length > 0) {\r\n        setDownloadActive(1);\r\n      } else {\r\n        setDownloadActive(0);\r\n      }\r\n      setDownloadaddress(\r\n        tempAddr.map((d) => {\r\n          return {\r\n            TxHash: d.Txn_Hash,\r\n            Age: moment(d.Age * 1000).format(\"DD/MM/YYYY hh:mm:ss\"),\r\n            Block: d.Block,\r\n            From: d.From,\r\n            To: d.To,\r\n            Amount: d.Value,\r\n          };\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content_input_all\">\r\n        <div\r\n          className={\r\n            props.theme === \"dark\"\r\n              ? \"searchelement-input3 bg-transparent-dark\"\r\n              : \"searchelement-input3\"\r\n          }\r\n        >\r\n          <img\r\n            style={{ width: 18, height: 18, marginRight: 5, marginTop: 7 }}\r\n            src={\"/images/Search.svg\"}\r\n          />\r\n          <input\r\n            className={\r\n              props.theme === \"dark\"\r\n                ? \"account-searchbar bg-transparent-dark fc-b1c3e1\"\r\n                : \"account-searchbar\"\r\n            }\r\n            type=\"text\"\r\n            placeholder=\"Search Transaction\"\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleKeyUp(e);\r\n              }\r\n            }}\r\n            onChange={(e) => {\r\n              if (e.target.value == \"\") {\r\n                handleKeyUp(e);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {isDownloadActive ? (\r\n          <CSVLink\r\n            filename={\"transactions.csv\"}\r\n            data={downloadaddress}\r\n            style={{\r\n              fontSize: \"0.938rem\",\r\n              color: \"#ffffff\",\r\n              textAlign: \"center\",\r\n              backgroundColor: \"rgb(7 125 245)\",\r\n              borderRadius: \"4px\",\r\n              width: \"5.875rem\",\r\n              height: \"2.125rem\",\r\n              paddingTop: \"2px\"\r\n            }}\r\n          >\r\n            Export\r\n          </CSVLink>\r\n        ) : (\r\n          <Tooltip\r\n            open={exportToolTip}\r\n            onOpen={() => setExportToolTip(true)}\r\n            onClose={() => setExportToolTip(false)}\r\n            placement=\"top\"\r\n            title={messages.DOWNLOAD_CSV}\r\n            classes={{\r\n              tooltip:\r\n                props.theme === \"dark\"\r\n                  ? classes.customTooltipDarkMode\r\n                  : classes.customTooltip,\r\n            }}\r\n          >\r\n            <div onClick={() => setExportToolTip(!exportToolTip)}>\r\n              <CSVLink\r\n                filename={\"transactions.csv\"}\r\n                data={downloadaddress}\r\n                style={{\r\n                  pointerEvents: \"none\",\r\n                  fontSize: \"15px\",\r\n                  textAlign: \"center\",\r\n                  color: \"#ffffff\",\r\n                  backgroundColor: \"#e3e7eb\",\r\n                  borderRadius: \"4px\",\r\n                  // width: \"94px\",\r\n                  // height: \"2.125rem\",\r\n                  padding: \"7px 24px\",\r\n                }}\r\n              >\r\n                Export\r\n              </CSVLink>\r\n            </div>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n\r\n      <Grid lg={13} className=\"tablegrid_address\">\r\n        <Paper\r\n          style={\r\n            props.theme === \"dark\"\r\n              ? { background: \"#192a59\", borderRadius: \"14px\" }\r\n              : { borderRadius: \"14px\" }\r\n          }\r\n          elevation={0}\r\n        >\r\n          <TableContainer\r\n            className={\r\n              props.theme === \"dark\" ? classes.containerDark : classes.container\r\n            }\r\n            id=\"container-table-holder\"\r\n          >\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                    <input\r\n                      onChange={handleChanged}\r\n                      type=\"checkbox\"\r\n                      name=\"allselect\"\r\n                      checked={\r\n                        address.filter((addr) => addr?.isChecked == true)\r\n                          .length == address.length\r\n                      }\r\n                      style={{ marginRight: \"8px\" }}\r\n                    />\r\n                    <span onClick={() => sortTable(\"hash\")}>\r\n                      <span\r\n                        className={\r\n                          props.theme === \"dark\"\r\n                            ? \"tableheader fc-white\"\r\n                            : \"tableheader\"\r\n                        }\r\n                      >\r\n                        Transaction Hash\r\n                        {window.innerWidth > 1024 ? (\r\n                          <Tooltip\r\n                            placement=\"top\"\r\n                            title={messages.HASH}\r\n                            classes={{\r\n                              tooltip:\r\n                                props.theme === \"dark\"\r\n                                  ? classes.customTooltipDarkMode\r\n                                  : classes.customTooltip,\r\n                            }}\r\n                          >\r\n                            <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/info.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon\"\r\n                            />\r\n                          </Tooltip>\r\n                        ) : (\r\n                          <Tooltip\r\n                            open={txHashToolTop}\r\n                            onOpen={() => setTxHashToolTop(true)}\r\n                            onClose={() => setTxHashToolTop(false)}\r\n                            placement=\"top\"\r\n                            title={messages.HASH}\r\n                            classes={{\r\n                              tooltip:\r\n                                props.theme === \"dark\"\r\n                                  ? classes.customTooltipDarkMode\r\n                                  : classes.customTooltip,\r\n                            }}\r\n                          >\r\n                            <img\r\n                              onClick={() => setTxHashToolTop(!txHashToolTop)}\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/info.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIconAccount\"\r\n                            />\r\n                          </Tooltip>\r\n                        )}\r\n                      </span>\r\n                      {sortKey && sortOrder && sortKey == \"hash\" ? (\r\n                        sortOrder === -1 ? (\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon rotate-180\"\r\n                          />\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                    <span\r\n                      className={\r\n                        props.theme === \"dark\"\r\n                          ? \"tableheader mar-right-45 mar-right-40 fc-white\"\r\n                          : \"tableheader mar-right-45 mar-right-40\"\r\n                      }\r\n                      onClick={() => sortTable(\"timestamp\")}\r\n                    >\r\n                      Age\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          placement=\"top\"\r\n                          title={messages.AGE}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={ageToolTip}\r\n                          onOpen={() => setAgeToolTip(true)}\r\n                          onClose={() => setAgeToolTip(false)}\r\n                          placement=\"top\"\r\n                          title={messages.AGE}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            onClick={() => setAgeToolTip(!ageToolTip)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      {sortKey && sortOrder && sortKey == \"timestamp\" ? (\r\n                        sortOrder === -1 ? (\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon rotate-180\"\r\n                          />\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ border: \"none\" }}\r\n                    align=\"left\"\r\n                    onClick={() => sortTable(\"blockNumber\")}\r\n                  >\r\n                    <span\r\n                      className={\r\n                        props.theme === \"dark\"\r\n                          ? \"tableheader fc-white\"\r\n                          : \"tableheader\"\r\n                      }\r\n                    >\r\n                      Block\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          placement=\"top\"\r\n                          title={messages.BLOCK}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={blockToolTip}\r\n                          onOpen={() => setBlockToolTip(true)}\r\n                          onClose={() => setBlockToolTip(false)}\r\n                          placement=\"top\"\r\n                          title={messages.BLOCK}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            onClick={() => setBlockToolTip(!blockToolTip)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                    </span>\r\n                    {sortKey && sortOrder && sortKey == \"blockNumber\" ? (\r\n                      sortOrder === -1 ? (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon rotate-180\"\r\n                        />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ border: \"none\" }}\r\n                    align=\"left\"\r\n                    onClick={() => sortTable(\"from\")}\r\n                  >\r\n                    <span\r\n                      className={\r\n                        props.theme === \"dark\"\r\n                          ? \"tableheader fc-white\"\r\n                          : \"tableheader\"\r\n                      }\r\n                    >\r\n                      From\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          placement=\"top\"\r\n                          title={messages.FROM}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={fromToolTip}\r\n                          onOpen={() => setFromToolTip(true)}\r\n                          onClose={() => setFromToolTip(false)}\r\n                          placement=\"top\"\r\n                          title={messages.FROM}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            onClick={() => setFromToolTip(!fromToolTip)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                    </span>\r\n                    {sortKey && sortOrder && sortKey == \"from\" ? (\r\n                      sortOrder === -1 ? (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon rotate-180\"\r\n                        />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ border: \"none\" }}\r\n                    align=\"left\"\r\n                    onClick={() => sortTable(\"to\")}\r\n                  >\r\n                    <span\r\n                      className={\r\n                        props.theme === \"dark\"\r\n                          ? \"tableheader fc-white\"\r\n                          : \"tableheader\"\r\n                      }\r\n                    >\r\n                      To\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          placement=\"top\"\r\n                          title={messages.TO}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={toToolTip}\r\n                          onOpen={() => setToToolTip(true)}\r\n                          onClose={() => setToToolTip(false)}\r\n                          placement=\"top\"\r\n                          title={messages.TO}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            onClick={() => setToToolTip(!toToolTip)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIconAccount\"\r\n                            classes={{\r\n                              tooltip:\r\n                                props.theme === \"dark\"\r\n                                  ? classes.customTooltipDarkMode\r\n                                  : classes.customTooltip,\r\n                            }}\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                    </span>\r\n                    {sortKey && sortOrder && sortKey == \"to\" ? (\r\n                      sortOrder === -1 ? (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon rotate-180\"\r\n                        />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ border: \"none\" }}\r\n                    align=\"left\"\r\n                    onClick={() => sortTable(\"value\")}\r\n                  >\r\n                    <span\r\n                      className={\r\n                        props.theme === \"dark\"\r\n                          ? \"tableheader fc-white\"\r\n                          : \"tableheader\"\r\n                      }\r\n                    >\r\n                      Amount\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          placement=\"top\"\r\n                          title={messages.AMOUNT}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={amountToolTip}\r\n                          onOpen={() => setAmountToolTip(true)}\r\n                          onClose={() => setAmountToolTip(false)}\r\n                          placement=\"top\"\r\n                          title={messages.AMOUNT}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            onClick={() => setAmountToolTip(!amountToolTip)}\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIconAccount\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                    </span>\r\n                    {sortKey && sortOrder && sortKey == \"value\" ? (\r\n                      sortOrder === -1 ? (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon rotate-180\"\r\n                        />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </TableCell>\r\n                  {/* <TableCell style={{ border: \"none\", paddingLeft: \"2.5%\" }} align=\"left\"><span className={\"tableheaders\"}>Txn Fee</span></TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              {isLoading == true ? (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell style={{ border: \"none\" }} colspan=\"6\">\r\n                      <div className=\"loader-address-details-list\">\r\n                        <Loader />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                noData == false && (\r\n                  <TableBody>\r\n                    {address.map((row, index) => {\r\n                      const currentTime = new Date();\r\n                      const previousTime = new Date(row.Age * 1000);\r\n                      const TimeAge = Utility.timeDiff(\r\n                        currentTime,\r\n                        previousTime\r\n                      );\r\n                      const value = Utility.divideByDecimalValue(\r\n                        row.Value,\r\n                        Number(props?.decimal)\r\n                      );\r\n\r\n                      return (\r\n                        <TableRow\r\n                          style={\r\n                            index % 2 !== 1\r\n                              ? props.theme === \"dark\"\r\n                                ? { background: \"#192a59\" }\r\n                                : { background: \"#f9f9f9\" }\r\n                              : props.theme === \"dark\"\r\n                              ? { background: \"#192a59\" }\r\n                              : { background: \"white\" }\r\n                          }\r\n                        >\r\n                          <TableCell\r\n                            style={{ border: \"none\", width: \"22%\" }}\r\n                            marginleft=\"5px\"\r\n                          >\r\n                            <div className=\"dis-flex input_12\">\r\n                              {\" \"}\r\n                              <input\r\n                                key={row.id}\r\n                                name={row.id}\r\n                                onChange={handleChanged}\r\n                                type=\"checkbox\"\r\n                                checked={row?.isChecked || false}\r\n                                style={{ marginRight: \"8px\" }}\r\n                              />\r\n                              <a\r\n                                className={\r\n                                  props.theme === \"dark\"\r\n                                    ? \"linkTable fc-4878ff\"\r\n                                    : \"linkTable\"\r\n                                }\r\n                                href={\"/transaction-details/\" + row.Txn_Hash}\r\n                              >\r\n                                <Tooltip\r\n                                  placement=\"top\"\r\n                                  title={row.Txn_Hash}\r\n                                  classes={{\r\n                                    tooltip:\r\n                                      props.theme === \"dark\"\r\n                                        ? classes.customTooltipDarkMode\r\n                                        : classes.customTooltip,\r\n                                  }}\r\n                                >\r\n                                  <span className=\"tabledata\">\r\n                                    {shorten(row.Txn_Hash)}{\" \"}\r\n                                  </span>\r\n                                </Tooltip>\r\n                              </a>\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ border: \"none\", width: \"17%\" }}\r\n                            align=\"left\"\r\n                          >\r\n                            <span\r\n                              className={\r\n                                props.theme === \"dark\"\r\n                                  ? \"tabledata fc-b1c3e1\"\r\n                                  : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {TimeAge}\r\n                            </span>\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ border: \"none\", width: \"15%\" }}\r\n                            align=\"left\"\r\n                          >\r\n                            <a\r\n                              className={\r\n                                props.theme === \"dark\"\r\n                                  ? \"linkTable fc-4878ff\"\r\n                                  : \"linkTable\"\r\n                              }\r\n                              href={\"/block-details/\" + row.Block}\r\n                            >\r\n                              <span className=\"tabledata\">{row.Block}</span>\r\n                            </a>\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            {row.From != addr ? (\r\n                              <a\r\n                                className={\r\n                                  props.theme === \"dark\"\r\n                                    ? \"linkTable fc-4878ff\"\r\n                                    : \"linkTable\"\r\n                                }\r\n                                href={\"/address-details/\" + row.From}\r\n                              >\r\n                                <Tooltip\r\n                                  placement=\"top\"\r\n                                  title={row.From}\r\n                                  classes={{\r\n                                    tooltip:\r\n                                      props.theme === \"dark\"\r\n                                        ? classes.customTooltipDarkMode\r\n                                        : classes.customTooltip,\r\n                                  }}\r\n                                >\r\n                                  <span className=\"tabledata\">\r\n                                    {\" \"}\r\n                                    {shorten(row.From)}\r\n                                  </span>\r\n                                </Tooltip>\r\n                              </a>\r\n                            ) : (\r\n                              <Tooltip\r\n                                placement=\"top\"\r\n                                title={row.From}\r\n                                classes={{\r\n                                  tooltip:\r\n                                    props.theme === \"dark\"\r\n                                      ? classes.customTooltipDarkMode\r\n                                      : classes.customTooltip,\r\n                                }}\r\n                              >\r\n                                <span\r\n                                  className={\r\n                                    props.theme === \"dark\"\r\n                                      ? \"tabledata fc-b1c3e1\"\r\n                                      : \"tabledata\"\r\n                                  }\r\n                                >\r\n                                  {\" \"}\r\n                                  {shorten(row.From)}\r\n                                </span>\r\n                              </Tooltip>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            {row.To != addr ? (\r\n                              <a\r\n                                className={\r\n                                  props.theme === \"dark\"\r\n                                    ? \"linkTable fc-4878ff\"\r\n                                    : \"linkTable\"\r\n                                }\r\n                                href={\"/address-details/\" + row.To}\r\n                              >\r\n                                <Tooltip\r\n                                  placement=\"top\"\r\n                                  title={row.To}\r\n                                  classes={{\r\n                                    tooltip:\r\n                                      props.theme === \"dark\"\r\n                                        ? classes.customTooltipDarkMode\r\n                                        : classes.customTooltip,\r\n                                  }}\r\n                                >\r\n                                  <span className=\"tabledata\">\r\n                                    {shorten(row.To)}\r\n                                  </span>\r\n                                </Tooltip>\r\n                              </a>\r\n                            ) : (\r\n                              <Tooltip\r\n                                placement=\"top\"\r\n                                title={row.To}\r\n                                classes={{\r\n                                  tooltip:\r\n                                    props.theme === \"dark\"\r\n                                      ? classes.customTooltipDarkMode\r\n                                      : classes.customTooltip,\r\n                                }}\r\n                              >\r\n                                <span className=\"tabledata\">\r\n                                  {shorten(row.To)}\r\n                                </span>\r\n                              </Tooltip>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                            <span\r\n                              className={\r\n                                props.theme === \"dark\"\r\n                                  ? \"tabledata fc-b1c3e1\"\r\n                                  : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {Number(value) === Number(row.Value)\r\n                                ? 0\r\n                                : format({})(parseFloat(value))}\r\n                            </span>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                )\r\n              )}\r\n              {noData == true && (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      id=\"td\"\r\n                      colspan=\"6\"\r\n                      style={{ borderBottom: \"none\" }}\r\n                    >\r\n                      <span className=\"tabledata\" style={{ color: \"red\" }}>\r\n                        No transaction found.\r\n                      </span>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n        <DeskTopView>\r\n          <Grid\r\n            container\r\n            style={{ marginTop: \"1.75rem\" }}\r\n            className=\"Pagination\"\r\n          >\r\n            <Grid className=\"Pagination_1\">\r\n              <span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>\r\n                Show\r\n              </span>\r\n              <PageSelector\r\n                value={rowsPerPage}\r\n                height={35}\r\n                handler={handleChangeRowsPerPage}\r\n                theme={props.theme}\r\n              />\r\n              <span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>\r\n                Records\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item className=\"Pagination_2\">\r\n              <button\r\n                onClick={() => handleChangePage(\"first\")}\r\n                className={\r\n                  page === 0\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark btn-first\"\r\n                      : \"btn disabled btn-first\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark btn-first\"\r\n                    : \"btn btn-first\"\r\n                }\r\n              >\r\n                First\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"prev\")}\r\n                className={\r\n                  page === 0\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark btn-back\"\r\n                      : \"btn disabled btn-back\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-back\"\r\n                    : \"btn btn-back\"\r\n                }\r\n              >\r\n                <img\r\n                  className=\"rotate-180\"\r\n                  alt=\"back\"\r\n                  src={\"/images/next.svg\"}\r\n                />{\" \"}\r\n              </button>\r\n              <button\r\n                className={\r\n                  props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-page\"\r\n                    : \"btn btn-page\"\r\n                }\r\n              >\r\n                Page{\" \"}\r\n                {Math.round(totalRecord / rowsPerPage) +\r\n                  1 -\r\n                  Math.round((totalRecord - page) / rowsPerPage)}\r\n                &nbsp;of {Math.ceil(totalRecord / rowsPerPage)}\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"next\")}\r\n                className={\r\n                  page + rowsPerPage === totalRecord\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark\"\r\n                      : \"btn disabled\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-next\"\r\n                    : \"btn btn-next\"\r\n                }\r\n              >\r\n                <img alt=\"next\" src={\"/images/next.svg\"} />\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"last\")}\r\n                className={\r\n                  page + rowsPerPage === totalRecord\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark\"\r\n                      : \"btn disabled\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-last\"\r\n                    : \"btn btn-last\"\r\n                }\r\n              >\r\n                Last\r\n              </button>\r\n            </Grid>\r\n          </Grid>\r\n        </DeskTopView>\r\n        <MobileView>\r\n          <Grid\r\n            container\r\n            style={{ marginTop: \"1.75rem\" }}\r\n            className=\"Pagination\"\r\n          >\r\n            <Grid className=\"Pagination_1\">\r\n              <span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>\r\n                Show\r\n              </span>\r\n              <PageSelector\r\n                value={rowsPerPage}\r\n                height={35}\r\n                handler={handleChangeRowsPerPage}\r\n                theme={props.theme}\r\n              />\r\n              <span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>\r\n                Records\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item className=\"Pagination_2\">\r\n              <button\r\n                onClick={() => handleChangePage(\"first\")}\r\n                className={\r\n                  page === 0\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark btn-first\"\r\n                      : \"btn disabled btn-first\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark btn-first\"\r\n                    : \"btn btn-first\"\r\n                }\r\n              >\r\n                First\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"prev\")}\r\n                className={\r\n                  page === 0\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark btn-back\"\r\n                      : \"btn disabled btn-back\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-back\"\r\n                    : \"btn btn-back\"\r\n                }\r\n              >\r\n                <img\r\n                  className=\"rotate-180\"\r\n                  alt=\"back\"\r\n                  src={\"/images/next.svg\"}\r\n                />{\" \"}\r\n              </button>\r\n              <button\r\n                className={\r\n                  props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-page\"\r\n                    : \"btn btn-page\"\r\n                }\r\n              >\r\n                Page{\" \"}\r\n                {Math.round(totalRecord / rowsPerPage) +\r\n                  1 -\r\n                  Math.round((totalRecord - page) / rowsPerPage)}\r\n                &nbsp;of {Math.ceil(totalRecord / rowsPerPage)}\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"next\")}\r\n                className={\r\n                  page + rowsPerPage === totalRecord\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark\"\r\n                      : \"btn disabled\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-next\"\r\n                    : \"btn btn-next\"\r\n                }\r\n              >\r\n                <img alt=\"next\" src={\"/images/next.svg\"} />\r\n              </button>\r\n              <button\r\n                onClick={() => handleChangePage(\"last\")}\r\n                className={\r\n                  page + rowsPerPage === totalRecord\r\n                    ? props.theme === \"dark\"\r\n                      ? \"btn-latest-block-dark disabled-dark\"\r\n                      : \"btn disabled\"\r\n                    : props.theme === \"dark\"\r\n                    ? \"btn-latest-block-dark  btn-last\"\r\n                    : \"btn btn-last\"\r\n                }\r\n              >\r\n                Last\r\n              </button>\r\n            </Grid>\r\n          </Grid>\r\n        </MobileView>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport HolderTableComponent from \"./holderTable\";\r\nimport { ImQrcode } from \"react-icons/im\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { Grid, TableContainer } from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport styled from \"styled-components\";\r\nimport Utils from \"../../utility\";\r\nimport TokenData from \"../../services/token\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport format from \"format-number\";\r\nimport ContractData from \"../../services/contract\";\r\nimport HolderAnalytics from \"../token/holderAnalytics/analyticsComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport utility, { dispatchAction } from \"../../utility\"\r\nimport { sessionManager } from \"../../managers/sessionManager\";\r\n\r\nvar QRCode = require(\"qrcode.react\");\r\n\r\nconst DeskTopView = styled.div`\r\n  @media (min-width: 0px) and (max-width: 640px) {\r\n    display: none;\r\n  }\r\n\r\n  @media (min-width: 641px) {\r\n    display: visible;\r\n  }\r\n`;\r\n\r\nconst MobileView = styled.div`\r\n  @media (min-width: 0px) and (max-width: 640px) {\r\n    display: visible;\r\n  }\r\n\r\n  @media (min-width: 641px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst CloseIcon = styled.img`\r\n  width: 1rem;\r\n  height: 1rem;\r\n  cursor: pointer;\r\n  @media (min-width: 0) and (max-width: 768px) {\r\n    margin-left: 18rem;\r\n    width: 10.6px;\r\n    height: 10.8px;\r\n    // margin-right: 20px;\r\n    display: ${(props) => (props.isDesktop ? \"none\" : \"block\")};\r\n  }\r\n  @media (min-width: 768px) {\r\n    display: ${(props) => (props.isDesktop ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#fff\",\r\n    // width: \"75.125rem\"\r\n  },\r\n  containerDark: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#192a59\",\r\n    // width: \"75.125rem\"\r\n  },\r\n  \"@media (max-width: 767px)\": {\r\n    container: {\r\n      padding: \"0 15px\",\r\n    },\r\n    containerDark: {\r\n      padding: \"0 15px\",\r\n    },\r\n  },\r\n  customTooltip: {\r\n    fontSize: \"13px\"\r\n  },\r\n  customTooltipDarkMode: {\r\n    background: \"#051440\",\r\n    color: \"#adc4e4\",\r\n    fontSize: \"13px\"\r\n  }\r\n});\r\nfunction HoldersDetails(props) {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const isAnalytics = urlParams.get(\"isAnalytics\");\r\n  const [toggleState, setToggleState] = useState(\r\n    isAnalytics === \"true\" ? 2 : 1\r\n  );\r\n\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n\r\n  const [holder, setHolderDetail] = useState(0);\r\n  const [contractAddress, setContractAddress] = useState(0);\r\n  const [decimal, setDecimal] = useState(0);\r\n  const { addr } = useParams();\r\n  const { tn } = useParams();\r\n\r\n  useEffect(() => {\r\n    let values = { address: addr, skip: 0, limit: 1 };\r\n    holderDetail(values);\r\n    if (holder !== 0) {\r\n      getContractDetails();\r\n    }\r\n  }, [contractAddress]);\r\n\r\n  const getContractDetails = async () => {\r\n    let urlPath = `${contractAddress}`;\r\n    let [error, contractDecimal] = await Utils.parseResponse(\r\n      ContractData.getContractDetailsUsingAddress(urlPath, {})\r\n    );\r\n    if (error || !contractDecimal) return;\r\n    setDecimal(contractDecimal.contractResponse?.decimals);\r\n  };\r\n\r\n  const holderDetail = async (values) => {\r\n    let [error, tns] = await Utils.parseResponse(\r\n      TokenData.getHolderDetailsUsingAddressforToken(values)\r\n    );\r\n    if (error || !tns) return;\r\n    setHolderDetail(tns);\r\n    setContractAddress(tns[0]?.Contract_address);\r\n  };\r\n\r\n  const toggleTab = (index) => {\r\n    setToggleState(index);\r\n  };\r\n  const classes = useStyles();\r\nlet holderBalance = holder[0]?.Holder_token_balance/ 10 ** decimal\r\n  return (\r\n    <>\r\n      <DeskTopView>\r\n        <div style={props.theme.currentTheme === \"dark\" ?{ backgroundColor: \"#091b4e\" } : { backgroundColor: \"#fff\" }}>\r\n          <Tokensearchbar theme={props.theme.currentTheme}/>\r\n          <Grid className=\"table-grid-block grid-block-table_11\">\r\n            <div\r\n              className=\"block_details_heading\"\r\n              style={{ display: \"flex\", flexDirection: \"row\" }}\r\n            >\r\n              <p className={props.theme.currentTheme === \"dark\" ?\"block_details_heading_left fc-white\" : \"block_details_heading_left\"}>Holder Details</p>\r\n            </div>\r\n            <Paper style={props.theme.currentTheme === \"dark\" ?{ backgroundColor: \"#091b4e\", borderRadius: \"14px\" }: {borderRadius: \"14px\" }} elevation={0}>\r\n              <TableContainer\r\n                className={props.theme.currentTheme === \"dark\" ? classes.containerDark : classes.container}\r\n                id=\"container-table\"\r\n              >\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow >\r\n                      <TableCell\r\n                        className={classes.tableCell}\r\n                        style={{\r\n                          width: \"0px\",\r\n                          paddingRight: \"1px\",\r\n                        }}\r\n                        id=\"td\"\r\n                      />\r\n                      <TableCell className=\"first-row-table_address1\">\r\n                        <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Holder</div>\r\n                      </TableCell>\r\n                      <TableCell className=\"second-row-table_address1\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{addr}</div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div>\r\n                          <CopyToClipboard\r\n                            text={addr}\r\n                            onCopy={() => setCopiedText(addr)}\r\n                          >\r\n                            <Tooltip\r\n                              title={\r\n                                copiedText === addr\r\n                                  ? \"Copied\"\r\n                                  : \"Copy To Clipboard\"\r\n                              }\r\n                              placement=\"top\"\r\n                              classes={{\r\n                                tooltip: props.theme.currentTheme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                              }}\r\n                            >\r\n                              <button\r\n                                style={{\r\n                                  backgroundColor: \"transparent\",\r\n                                  fontSize: 14,\r\n                                  marginLeft: \"25px\",\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <img alt=\"copy\" src={\"/images/copy-grey.svg\"} />{\" \"}\r\n                              </button>\r\n                            </Tooltip>\r\n                          </CopyToClipboard>\r\n                          <Popup\r\n                            trigger={<ImQrcode className=\"imQrcode\" />}\r\n                            lockScroll\r\n                            modal\r\n                          >\r\n                            {(close) => (\r\n                              <div className=\"popup_qr\">\r\n                                <CloseIcon\r\n                                  isDesktop={false}\r\n                                  src=\"/images/XDC-Cross.svg\"\r\n                                  // className=\"qrClose\"\r\n                                  onClick={close}\r\n                                />\r\n                                <p>\r\n                                  <div>\r\n                                    <div className=\"header-popup\">\r\n                                      <Row alignItems=\"center\">{addr}</Row>\r\n                                      <CloseIcon\r\n                                        isDesktop={true}\r\n                                        src=\"/images/XDC-Cross.svg\"\r\n                                        // className=\"qrClose\"\r\n                                        onClick={close}\r\n                                      />\r\n                                      {/* &times; */}\r\n                                      {/* </img> */}\r\n                                    </div>\r\n                                    {window.innerWidth > 767 ? (\r\n                                      <QRCode\r\n                                        size={320}\r\n                                        style={{\r\n                                          height: 400,\r\n                                          width: 400,\r\n                                          marginTop: \"0.625rem\",\r\n                                        }}\r\n                                        value={addr}\r\n                                      />\r\n                                    ) : (\r\n                                      <QRCode\r\n                                        // style={{window.innerWidth > 768 ? '800px' : '400px'}}\r\n                                        size={320}\r\n                                        className=\"qrcode-label\"\r\n                                        //style={{ height: 400, width: 400, marginTop: '0.625rem' }}\r\n                                        value={addr}\r\n                                      />\r\n                                    )}\r\n                                  </div>\r\n                                </p>\r\n                              </div>\r\n\r\n                              // <div className=\"popup_qr\">\r\n                              //   <p>\r\n                              //     <div>\r\n                              //       <button style={{ outline: 'none', width: '0px', height: '0px', marginLeft: \"0px\", paddingTop: '1.5rem' }} className=\"close\" onClick={close}>\r\n                              //         &times;\r\n                              //       </button>\r\n                              //       <div className=\"header\" style={{ fontSize: '0.875rem', paddingTop: '1.563rem', paddingBottom: '60px' }}> {addr} </div>\r\n                              //       <QRCode size={320} style={{ height: 400, width: 400 }} value={addr} />\r\n                              //     </div>\r\n                              //   </p>\r\n                              // </div>\r\n                            )}\r\n                          </Popup>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        style={{\r\n                          width: \"0px\",\r\n                          paddingRight: \"1px\",\r\n                        }}\r\n                        id=\"td\"\r\n                      />\r\n                      <TableCell className=\"first-row-table_address-balance\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Balance</div>\r\n                      </TableCell>\r\n                      <TableCell className=\"second-row-table_address-balance\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{holderBalance && decimal ? format({})(holderBalance):0} {tn}</div>\r\n                        {/* ({ReactHtmlParser(convertCurrency)} {coinValue}) */}\r\n                      </TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        style={{\r\n                          width: \"0px\",\r\n                          paddingRight: \"1px\",\r\n                        }}\r\n                        id=\"td\"\r\n                      />\r\n                      <TableCell className=\"first-row-table_address-balance\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Transfers</div>\r\n                      </TableCell>\r\n                      <TableCell className=\"second-row-table_address-balance\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{holder[0]?.Total_transfes_transactions_Count ? holder[0]?.Total_transfes_transactions_Count : \"Not available\"}</div>\r\n                      </TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        style={{\r\n                          width: \"0px\",\r\n                          paddingRight: \"1px\",\r\n                          borderBottom: \"none\",\r\n                        }}\r\n                        id=\"td\"\r\n                      />\r\n                      <TableCell className=\"first-row-table_address\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Contract Address</div>\r\n                      </TableCell>\r\n                      <TableCell className=\"second-row-table_address\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{holder[0]?.Contract_address ? holder[0]?.Contract_address : \"Not available\"}</div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                </Table>\r\n              </TableContainer>\r\n            </Paper>\r\n            <br />\r\n            <br />\r\n            <TabComponent\r\n              toggleTab={toggleTab}\r\n              toggleState={toggleState}\r\n              transactions={transactions}\r\n              decimal={decimal}\r\n              contractAddress={contractAddress}\r\n              addr={addr}\r\n              theme={props.theme.currentTheme}\r\n            />\r\n          </Grid>\r\n          <FooterComponent />\r\n        </div>\r\n      </DeskTopView>\r\n      <MobileView>\r\n        <div style={props.theme.currentTheme === \"dark\" ?{ backgroundColor: \"#091b4e\" } : { backgroundColor: \"#fff\" }}>\r\n          <Tokensearchbar />\r\n          <Grid lg={8} className=\"table-grid-block\">\r\n            <div\r\n              className=\"holder-detail-table\"\r\n            >\r\n              <p className={props.theme.currentTheme === \"dark\" ?\"block_details_heading_left  fs-15 fc-white\":\"block_details_heading_left  fs-15\"}>\r\n              Holder Details\r\n              </p>\r\n            </div>\r\n            <Paper\r\n              className=\"holder-detail-table\"\r\n              elevation={0}\r\n              style={props.theme.currentTheme === \"dark\" ?{ backgroundColor: \"#091b4e\" }:{}}\r\n            >\r\n              <TableContainer\r\n                className={props.theme.currentTheme === \"dark\" ? classes.containerDark : classes.container}\r\n                id=\"container-table-holder-mob\"\r\n              >\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {/* <TableCell\r\n                    style={{\r\n                      width: \"0px\",\r\n                      paddingRight: \"1px\",\r\n\r\n                    }}\r\n                    id=\"td\"\r\n                  /> */}\r\n                      <TableCell className=\"first-row-table_address1\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Holder</div>\r\n                        <div className=\"sec-row-table\">\r\n                          <div className=\"word-break\">\r\n                            {\" \"}\r\n                            <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{addr}</div>\r\n                            <CopyToClipboard\r\n                              text={addr}\r\n                              onCopy={() => setCopiedText(addr)}\r\n                            >\r\n                              <Tooltip\r\n                                title={\r\n                                  copiedText === addr\r\n                                    ? \"Copied\"\r\n                                    : \"Copy To Clipboard\"\r\n                                }\r\n                                placement=\"top\"\r\n                                classes={{\r\n                                  tooltip: props.theme.currentTheme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  style={{\r\n                                    backgroundColor: \"transparent\",\r\n                                    fontSize: 14,\r\n                                    marginLeft: \"25px\",\r\n                                  }}\r\n                                >\r\n                                  <img alt=\"copy\" src={\"/images/copy-grey.svg\"} />\r\n                                </button>\r\n                              </Tooltip>\r\n                            </CopyToClipboard>\r\n                            <Popup\r\n                              trigger={<ImQrcode className=\"imQrcode\" />}\r\n                              lockScroll\r\n                              modal\r\n                            >\r\n                              {(close) => (\r\n                                <div className=\"popup_qr\">\r\n                                  <CloseIcon\r\n                                    isDesktop={false}\r\n                                    src=\"/images/XDC-Cross.svg\"\r\n                                    // className=\"qrClose\"\r\n                                    onClick={close}\r\n                                  />\r\n                                  <p>\r\n                                    <div>\r\n                                      <div className=\"header-popup\">\r\n                                        <Row alignItems=\"center\">{addr}</Row>\r\n                                        <CloseIcon\r\n                                          isDesktop={true}\r\n                                          src=\"/images/XDC-Cross.svg\"\r\n                                          // className=\"qrClose\"\r\n                                          onClick={close}\r\n                                        />\r\n                                        {/* &times; */}\r\n                                        {/* </img> */}\r\n                                      </div>\r\n                                      {window.innerWidth > 767 ? (\r\n                                        <QRCode\r\n                                          size={320}\r\n                                          style={{\r\n                                            height: 400,\r\n                                            width: 400,\r\n                                            marginTop: \"0.625rem\",\r\n                                          }}\r\n                                          value={addr}\r\n                                        />\r\n                                      ) : (\r\n                                        <QRCode\r\n                                          // style={{window.innerWidth > 768 ? '800px' : '400px'}}\r\n                                          size={320}\r\n                                          className=\"qrcode-label\"\r\n                                          //style={{ height: 400, width: 400, marginTop: '0.625rem' }}\r\n                                          value={addr}\r\n                                        />\r\n                                      )}\r\n                                    </div>\r\n                                  </p>\r\n                                </div>\r\n                              )}\r\n                            </Popup>\r\n                            {/* <Popup\r\n                              trigger={\r\n                                <ImQrcode\r\n                                  style={{\r\n                                    marginLeft: \"10px\",\r\n                                    marginBottom: \"2px\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              }\r\n                              modal\r\n                            >\r\n                              {(close) => (\r\n                                <div className=\"popup_qr\">\r\n                                  <p>\r\n                                    <div>\r\n                                      <button\r\n                                        style={{\r\n                                          outline: \"none\",\r\n                                          width: \"0px\",\r\n                                          height: \"0px\",\r\n                                          marginLeft: \"0px\",\r\n                                        }}\r\n                                        className=\"close\"\r\n                                        onClick={close}\r\n                                      >\r\n                                        &times;\r\n                                      </button>\r\n                                      <div\r\n                                        className=\"header\"\r\n                                        style={{\r\n                                          fontSize: \"11.5px\",\r\n                                          paddingTop: \"5px\",\r\n                                          paddingBottom: \"22px\",\r\n                                        }}\r\n                                      >\r\n                                        {\" \"}\r\n                                        {addr}{\" \"}\r\n                                      </div>\r\n                                      <QRCode\r\n                                        size={320}\r\n                                        style={{ height: 320, width: 320 }}\r\n                                        value={addr}\r\n                                      />\r\n                                    </div>\r\n                                  </p>\r\n                                </div>\r\n                              )}\r\n                            </Popup> */}\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                      <TableCell className=\"first-row-table_address-balance\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Balance</div>\r\n                        <div className=\"sec-row-table\">\r\n                          {\" \"}\r\n                          <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{holder[0]?.Holder_token_balance} XDC</div>\r\n                          {/* ({ReactHtmlParser(convertCurrency)} {coinValue}) */}\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                      <TableCell className=\"first-row-table_address-balance\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Transfers</div>\r\n                        <div className=\"sec-row-table\">\r\n                          {\" \"}\r\n                          <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{holder[0]?.Total_transfes_transactions_Count}</div>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell className=\"first-row-table_address\">\r\n                      <div style={props.theme.currentTheme === \"dark\" ? {color: \"#ffffff\"}: {}}>Contract Address</div>\r\n                        <div className=\"sec-row-table\">\r\n                        <div style={props.theme.currentTheme === \"dark\" ? {color: \"#b1c3e1\"}: {}}>{holder[0]?.Contract_address}</div>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                </Table>\r\n              </TableContainer>\r\n            </Paper>\r\n            <br />\r\n            <br />\r\n            <TabComponent\r\n              toggleTab={toggleTab}\r\n              toggleState={toggleState}\r\n              transactions={transactions}\r\n              decimal={decimal}\r\n              contractAddress={contractAddress}\r\n              addr={addr}\r\n              theme={props.theme.currentTheme}\r\n            />\r\n            {/* <div className=\"container_sec\">\r\n              <div className=\"block_sec\">\r\n                <div className=\"bloc-tabs_sec\">\r\n                  <button\r\n                    className={\r\n                      toggleState === 1\r\n                        ? \"tabs_sec active-tabs_sec\"\r\n                        : \"tabs_sec\"\r\n                    }\r\n                    onClick={() => toggleTab(1)}\r\n                  >\r\n                    Transfers\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"content-tabs_sec\">\r\n                <div\r\n                  className={\r\n                    toggleState === 1\r\n                      ? \"content_sec  active-content_sec\"\r\n                      : \"content_sec\"\r\n                  }\r\n                >\r\n                  <HolderTableComponent\r\n                    trans={transactions}\r\n                    decimal={decimal}\r\n                  />\r\n                </div> */}\r\n\r\n            {/* <div\r\n                  className={\r\n                    toggleState === 2\r\n                      ? \"content_sec  active-content_sec\"\r\n                      : \"content_sec\"\r\n                  }\r\n                >\r\n                  <HolderTableComponent  />\r\n                </div> */}\r\n            {/* </div>\r\n            </div> */}\r\n          </Grid>\r\n          <FooterComponent />\r\n        </div>\r\n      </MobileView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TabComponent = ({\r\n  toggleTab,\r\n  toggleState,\r\n  transactions,\r\n  decimal,\r\n  contractAddress,\r\n  addr,\r\n  theme,\r\n}) => {\r\n  return (\r\n    <div className=\"container_sec_holder\">\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          backgroundColor: \"transparent\",\r\n          height: \"25px\",\r\n          borderBottom: \"solid 1px #e3e7eb\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n        >\r\n          <button\r\n            className={\r\n              toggleState === 1 ? theme === \"dark\" ? \"tabs-data active-tabs-token bg-transparent-dark\" :\"tabs-data active-tabs-token\" \r\n              : theme=== \"dark\" ? \"tabs-data bg-transparent-dark\" : \"tabs-data\"\r\n            }\r\n            onClick={() => toggleTab(1)}\r\n          >\r\n            Transfers\r\n          </button>\r\n          <button\r\n            className={\r\n              toggleState === 2\r\n                ? theme === \"dark\" ? \"tabs-data active-tabs-token-holder bg-transparent-dark\" : \"tabs-data active-tabs-token-holder\"\r\n                : theme === \"dark\" ? \"tabs-data bg-transparent\" : \"tabs-data\"\r\n            }\r\n            onClick={() => toggleTab(2)}\r\n          >\r\n            Analytics\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          toggleState === 1 ? \"content_sec  active-content_sec\" : \"content_sec\"\r\n        }\r\n      >\r\n        <HolderTableComponent trans={transactions} decimal={decimal} theme={theme}/>\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          toggleState === 2 ? \"content_sec  active-content_sec\" : \"content_sec\"\r\n        }\r\n      >\r\n        <HolderAnalytics\r\n          walletAddress={addr}\r\n          contractAddress={contractAddress}\r\n          theme={theme}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { theme: state.theme };\r\n};\r\nexport default connect(mapStateToProps, { dispatchAction })(HoldersDetails);","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  getTotalAccount,\r\n  getSomeDaysAccount,\r\n  getLatestAccount,\r\n  getTokenBalance,\r\n  getTokenTransferCount,\r\n  getHistoryPrice,\r\n  getTokenOverview,\r\n  getTokenInfo,\r\n  getAccountList,\r\n  getAddressAnalytics,\r\n};\r\n\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\n\r\nasync function getTotalAccount() {\r\n  let url = process.env.REACT_APP_GET_TOTAL_ACCOUNTS;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenInfo(symbol) {\r\n  let url =\r\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\r\n    httpConstants.API_END_POINT.GET_TOKEN_INFO +\r\n    `/${symbol}`;\r\n  //   let url =\r\n  //     \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008\" +\r\n  //     httpConstants.API_END_POINT.GET_TOKEN_INFO +\r\n  //     `/${symbol}`;\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getAccountList(requestData) {\r\n  let url = process.env.REACT_APP_GET_ACCOUNT_LIST;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.POST,\r\n    getHeaders(),\r\n    requestData,\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getSomeDaysAccount() {\r\n  let url = process.env.REACT_APP_GET_SOME_DAYS_ACCOUNTS;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getLatestAccount(path, data) {\r\n  let url = process.env.REACT_APP_GET_LATEST_ACCOUNTS + path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenBalance(data) {\r\n  let url =\r\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\r\n    httpConstants.API_END_POINT.GET_TOKEN_BALANCE;\r\n  // let url =\r\n  //     \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008/get-token-balance\";\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getAddressAnalytics(data) {\r\n  let url =\r\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\r\n    httpConstants.API_END_POINT.GET_ADDRESS_ANALYTICS;\r\n  // let url =\r\n  //   \"http://localhost:3007\" + httpConstants.API_END_POINT.GET_ADDRESS_ANALYTICS;\r\n  // let url =\r\n  //     \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008/get-token-balance\";\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenTransferCount(data) {\r\n  // let url =\r\n  //   process.env.REACT_APP_GET_LATEST_ACCOUNTS +\r\n  //   httpConstants.API_END_POINT.GET_TOKEN_TRANSFER_COUNT;\r\n  let url =\r\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\r\n    httpConstants.API_END_POINT.GET_TOKEN_TRANSFER_COUNT;\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenOverview(data) {\r\n  let url =\r\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\r\n    httpConstants.API_END_POINT.GET_TOKEN_OVERVIEW;\r\n  // let url = \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008\" +\r\n  //     httpConstants.API_END_POINT.GET_TOKEN_OVERVIEW;\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getHistoryPrice(data) {\r\n  let url =\r\n    process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL +\r\n    httpConstants.API_END_POINT.GET_HISTORY_PRICE;\r\n  // let url = \"http://xdc-explorer-prod-srv-1145457985.us-east-2.elb.amazonaws.com:3008\" + httpConstants.API_END_POINT.GET_HISTORY_PRICE;\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nconst options = {\r\n  title: {\r\n    text: \"My stock chart\",\r\n  },\r\n  series: [\r\n    {\r\n      data: [1, 2, 1, 4, 3, 6, 7, 3, 8, 6, 9, 15],\r\n    },\r\n  ],\r\n};\r\n\r\nconst toolTipElement = (props) => {\r\n  return (\r\n    <div>\r\n      hiii\r\n    </div>\r\n  );\r\n};\r\nexport default function Chart(props) {\r\n  Highcharts.setOptions({\r\n    lang: {\r\n      rangeSelectorFrom: \"From\",\r\n      rangeSelectorTo: \"To\",\r\n      rangeSelectorZoom: \"Show\",\r\n    },\r\n  });\r\n  return (\r\n    <HighchartsReact\r\n      highcharts={Highcharts}\r\n      constructorType={\"stockChart\"}\r\n      options={props.options}\r\n    />\r\n  );\r\n}\r\n","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  getContractLists,\r\n  getTotalContractList,\r\n  getContractSearch,\r\n  getContractDetails,\r\n  getContractDetailsUsingAddress,\r\n};\r\n\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\n\r\nasync function getContractDetails(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_CONTRACT_DETAILS +\r\n    data.addr\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getContractLists(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_CONTRACT_LIST +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage;\r\n\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.POST,\r\n    getHeaders(),\r\n    data,\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTotalContractList() {\r\n  let url = process.env.REACT_APP_GET_TOTAL_CONTRACT_LIST;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getContractSearch(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_CONTRACT_SEARCH +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage +\r\n    \"&keywords=\" +\r\n    data.keywords;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getContractDetailsUsingAddress(path, data) {\r\n  let url = process.env.REACT_APP_GET_CONTRACT_DETAIL_USING_ADDRESS + path\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    data,\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  getAddressDetail,\r\n  getAddressDetailWithlimit,\r\n  getFilteredAddressDetailWithLimit,\r\n  getFiltersForAccountTransaction,\r\n  getTransactionSearch,\r\n  getTransactionsCountForAddress,\r\n  getAddressStats,\r\n};\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\nasync function getAddressDetail(address) {\r\n  let url = process.env.REACT_APP_GET_ADDRESS_DETAILS + address;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTransactionSearch(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSACTION_SEARCH +\r\n    data.addrr +\r\n    \"/\" +\r\n    data.keywords +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getAddressDetailWithlimit(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSACTIONS_FOR_ADDRESS +\r\n    data.addrr +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage + \"&sortKey=\" + data?.sortKey + \"&sortType=\" + data?.sortType;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getFilteredAddressDetailWithLimit(requestData) {\r\n    let url = process.env.REACT_APP_GET_FILTERED_TRANSACTIONS_FOR_ADDRESS + requestData.address\r\n    return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), requestData, url)\r\n        .then((response) => {\r\n            if (\r\n                !response.success ||\r\n                response.responseCode !== 200 ||\r\n                !response.responseData ||\r\n                response.responseData.length === 0\r\n            )\r\n                return Promise.reject();\r\n            return Promise.resolve(response.responseData);\r\n        })\r\n        .catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n}\r\nasync function getFiltersForAccountTransaction(requestData) {\r\n    let url = process.env.REACT_APP_GET_FILTERS_FOR_ADDRESS_TXN + requestData.address\r\n    return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n        .then((response) => {\r\n            if (\r\n                !response.success ||\r\n                response.responseCode !== 200 ||\r\n                !response.responseData ||\r\n                response.responseData.length === 0\r\n            )\r\n                return Promise.reject();\r\n            return Promise.resolve(response.responseData);\r\n        })\r\n        .catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n}\r\nasync function getTransactionsCountForAddress(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSACTIONS_COUNT_FOR_ADDRESS + data.address\r\n      + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\r\n      + (data.txnType ? (data.searchValue ? \"&txnType=\" : \"?txnType=\") + data.txnType : \"\")\r\n      + (data.status ? (data.searchValue || data.txnType ? \"&status=\" : \"?status=\") + data.status : \"\")\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getAddressStats(address) {\r\n  let url = process.env.REACT_APP_GET_ADDRESS_STATS + address;\r\n  return httpService(\r\n    httpConstants.METHOD_TYPE.GET,\r\n    getHeaders(),\r\n    {},\r\n    url\r\n  )\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}"],"sourceRoot":""}