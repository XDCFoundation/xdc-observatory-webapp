{"version":3,"sources":["modules/transaction/transactionComponent.js","modules/transaction/mainComponent.js","modules/transaction/index.js","assets/images/XDC-Alert.svg","modules/common/pageSelector.js","modules/common/configureColumnsPopOver.js","modules/common/configureColumnsModal.js","modules/common/transactionDetailTooltip.jsx","modules/common/index.js"],"names":["useStyles","makeStyles","container","borderRadius","boxShadow","borderBottom","background","containerDark","container1","containerDark1","height","styled","div","TransactionComponent","props","classes","React","useState","anchorEl","setAnchorEl","isColumnsModalOpen","setColumnsModal","isSettingColumnOpen","Boolean","toggleModal","shorten","b","amountL","stars","slice","repeat","length","state","NoDataFoundContainer","useParams","blockNumber","lastPage","transactionList","sort","a","Number","className","class","theme","tableName","onClick","event","currentTarget","src","isOpen","handleOnClose","tableColumns","toggleTableColumns","onModalClose","style","elevation","TableContainer","isData","id","Table","TableHead","TableRow","TableCell","align","Tooltip","placement","title","messages","HASH","alt","isActive","border","paddingLeft","AMOUNT","METHOD","AGE","DATE","BLOCK","FROM","TO","isLoading","TableBody","colspan","map","row","index","currentTime","Date","previousTime","timestamp","ti","utility","timeDiff","amt","decimalDivison","value","Hash","hash","animationClass","hashAnimation","key","name","width","margin","display","alignItems","transactionAddress","href","method","moment","format","from","paddingRight","to","require","Grid","marginTop","amount","handler","_handleChange","item","_FirstPage","_PrevPage","Math","round","totalTransaction","_NextPage","lastFrom","_LastPage","socket","socketClient","process","transports","LatestTransactionList","setState","target","getListOfTransactions","sortKey","columnName","columns","isLoader","pageParam","match","params","pageNo","Amount","toolTipText","toolTipMessages","Age","age","date","Block","blocknumber","this","off","getTotalTransaction","socketData","urlPath","Utils","parseResponse","TransactionService","getLatestTransaction","error","listOfTransactions","getMethodType","input","total","on","transactionData","transactions","findIndex","pop","unshift","hashAnimationClass","setTimeout","block","txnfee","type","create_data","create_url","BaseComponent","TransactionListMainComponent","currentTheme","connect","dispatchAction","module","exports","dropdownStyle","color","PageSelect","Select","PageSelectDark","PageSelector","onChange","displayEmpty","MenuProps","paper","disabled","paperWidthSm","maxWidth","ConfigureColumnsPopOver","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Object","keys","ConfigureColumnsModal","aria-labelledby","TransactionDetailTooltip","setOpen","transactionHash","setTransactionHash","setTransactionDetail","price","setPrice","timeStamp","setTimeStamp","setIsLoading","CurrencyValue","window","localStorage","getItem","menuRef","useRef","useEffect","document","addEventListener","current","contains","transactionDetail","getCoinMarketDetailForTransaction","getTransactionDetailsUsingHash","transactiondetailusinghash","currencySymbol","valueFetch","valueDiv","ValueMain","txfee","gasPrice","gasUsed","transactionFetch","fetchtxn","parseFloat","toFixed","gasP","trigger","interactive","innerWidth","offset","content","ref","status","replace","gasprovided","gas","gasprice","nounced","nonce","undefined","FooterComponent"],"mappings":"seAwBMA,EAAYC,YAAW,CAC3BC,UAAW,CACTC,aAAc,OACdC,UAAW,kCACXC,aAAc,OACdC,WAAY,QAEdC,cAAe,CACbJ,aAAc,OACdC,UAAW,OACXC,aAAc,OACdC,WAAY,WAEdE,WAAY,CACVL,aAAc,OACdC,UAAW,kCACXC,aAAc,OACdC,WAAY,QAEdG,eAAgB,CACdN,aAAc,OACdC,UAAW,kCACXC,aAAc,OACdC,WAAY,WAEd,iDAAkD,CAChDJ,UAAW,CACTQ,OAAQ,aAEVH,cAAe,CACbG,OAAQ,aAEVF,WAAY,CACVE,OAAQ,aAEVD,eAAgB,CACdC,OAAQ,gBAIKC,UAAOC,IAAV,2IAQD,SAASC,EAAqBC,GAC3C,IAAMC,EAAUf,IAEhB,EAA8BgB,IAAMC,WAApC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA4CH,IAAMC,UAAS,GAA3D,mBAAKG,EAAL,KAAyBC,EAAzB,KACIC,EAAsBC,QAAQL,GAMlC,SAASM,IACPH,GAAiBD,GAOnB,SAASK,EAAQC,GAA0C,IAAvCC,EAAsC,uDAA5B,GAAiBC,EAAW,uDAAH,EACrD,MAAM,GAAN,cAAUF,QAAV,IAAUA,OAAV,EAAUA,EAAGG,MAAM,EAAGF,IAAtB,OAAiC,IAAIG,OAAOF,IAA5C,cAAqDF,QAArD,IAAqDA,OAArD,EAAqDA,EAAGG,MACtDH,EAAEK,OAAS,EACXL,EAAEK,SAIN,IAAQC,EAAUlB,EAAVkB,MAEFC,EAAuBtB,UAAOC,IAAV,0QAcFsB,cAAhBC,YAOR,OAL6B,IAAzBrB,EAAMkB,MAAMI,UACdtB,EAAMkB,MAAMK,gBAAgBC,MAAK,SAAUC,EAAGb,GAC5C,OAAOc,OAAOd,EAAES,aAAeK,OAAOD,EAAEJ,gBAI1C,yBAAKM,UAAU,8DACb,yBAAKA,UAAU,sDACb,yBAAKC,MAAuB,SAAhB5B,EAAM6B,MAAmB,+BAAgC,4BAA6BX,EAAMY,WACxG,yBAAKF,MAAM,kFACT,yBACEG,QAhDV,SAA6BC,GAC3B3B,EAAY2B,EAAMC,gBAgDVN,UAAU,oCACVO,IAAI,yBAEN,kBAAC,IAAD,CACEC,OAAQ3B,EACRJ,SAAUA,EACVgC,cA/CV,WACE/B,EAAY,OA+CJgC,aAAcrC,EAAMkB,MAAMmB,aAC1BC,mBAAoBtC,EAAMsC,mBAC1BT,MAAO7B,EAAM6B,SAGjB,yBAAKF,UAAU,mGACb,yBACEI,QAASrB,EACTiB,UAAU,oCACVO,IAAI,yBAEN,kBAAC,IAAD,CACEC,OAAQ7B,EACRiC,aAAc7B,EACd2B,aAAcrC,EAAMkB,MAAMmB,aAC1BC,mBAAoBtC,EAAMsC,mBAC1BT,MAAO7B,EAAM6B,UAKnB,yBAAKW,MAAO,CAAEnD,aAAc,QAAUoD,UAAW,GAC/C,kBAACC,EAAA,EAAD,CAAgBf,UAAY3B,EAAMkB,MAAMyB,OAAgG,SAAhB3C,EAAM6B,MAAmB5B,EAAQR,cAAgBQ,EAAQb,UAAhH,SAAhBY,EAAM6B,MAAmB5B,EAAQN,eAAiBM,EAAQP,WAAiFkD,GAAG,oCAC7L,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErB,UAAU,4CACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,qDAA6E,gBAAvH,OAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASC,MACvC,yBACEC,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAKjB3B,EAAMkB,MAAMmB,aAAZ,OAAmCmB,UAClC,kBAACR,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,YACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,SAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASM,QACvC,yBACEJ,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAMnB3B,EAAMkB,MAAMmB,aAAZ,IAAgCmB,UAC/B,kBAACR,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,YACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,SAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASO,QACvC,yBACEL,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAMnB3B,EAAMkB,MAAMmB,aAAZ,IAAgCmB,UAC/B,kBAACR,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,QACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,MAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASQ,KACvC,yBACEN,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAMnB3B,EAAMkB,MAAMmB,aAAZ,KAAiCmB,UAChC,kBAACR,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,QACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,OAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASS,MACvC,yBACEP,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAMnB3B,EAAMkB,MAAMmB,aAAZ,MAAkCmB,UACjC,kBAACR,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,QACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,QAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASU,OACvC,yBACER,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAMpB,kBAACqB,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,QACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,OAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASW,MACvC,yBACET,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,uBAKlB,kBAACqB,EAAA,EAAD,CACER,MAAO,CAAEiB,OAAQ,OAAQC,YAAa,QACtC/B,UAAU,iBACVsB,MAAM,QAEN,0BAAMtB,UAA2B,SAAhB3B,EAAM6B,MAAmB,oDAAuE,oBAAjH,KAEE,kBAACqB,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOC,IAASY,IACvC,yBACEV,IAAI,gBACJrB,IAAI,mBACJtC,OAAQ,OACR+B,UAAU,yBAgBI,GAAzB3B,EAAMkB,MAAMgD,UACX,kBAACC,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,MAAO,CAAEiB,OAAQ,QAAUW,QAAQ,KAC5C,yBAAKzC,UAAU,qBACb,kBAAC,IAAD,UAMR,kBAACwC,EAAA,EAAD,KACGnE,EAAMkB,MAAMK,iBACXvB,EAAMkB,MAAMK,gBAAgBN,QAAU,GACtCjB,EAAMkB,MAAMK,gBAAgB8C,KAAI,SAACC,EAAKC,GAAW,IAAD,EACxCC,EAAc,IAAIC,KAClBC,EAAe,IAAID,KAAqB,IAAhBH,EAAIK,WAC5BC,EAAKC,IAAQC,SAASN,EAAaE,GAKrCK,EAAMF,IAAQG,eAAeV,EAAIW,MAAO,GACtCC,EAAOZ,EAAIa,KACbC,EAAc,UAAGpF,EAAMkB,MAAMmE,qBAAf,aAAG,EAA4BH,GAEjD,OACE,kBAACnC,EAAA,EAAD,CACEuC,IAAKhB,EAAIiB,KACT/C,MACE+B,EAAQ,IAAM,EACM,SAAhBvE,EAAM6B,MAAmB,CAAErC,WAAY,WAAc,CAAEA,WAAY,WACnD,SAAhBQ,EAAM6B,MAAmB,CAAErC,WAAY,WAAc,CAAEA,WAAY,UAGzE,kBAACwD,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACPC,OAAQ,EACRC,QAAS,OACTC,WAAY,WAGd,6BACE,kBAAC,IAAD,CACEC,mBAAoBtB,EAAIa,QAG5B,uBACExD,UAAU,YACVkE,KAAM,wBAA0BvB,EAAIa,MAEnC,IACD,0BACExD,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,gCAA2EA,EAC3D,SAAhBpF,EAAM6B,MAAmB,wCAA0C,aAGtE,IACAlB,EAAQ2D,EAAIa,OACP,MAGXnF,EAAMkB,MAAMmB,aAAZ,OAAmCmB,UAClC,kBAACR,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,YAEfT,MAAM,QAEN,0BACEtB,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,iCAA4EA,EAC5D,SAAhBpF,EAAM6B,MAAmB,+BAAiC,aAG7DkD,IAIP,kBAAC/B,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,YAEfT,MAAM,QAEN,0BACItB,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,iCAA4EA,EAC5D,SAAhBpF,EAAM6B,MAAmB,+BAAiC,aAG7DyC,EAAIwB,OAASxB,EAAIwB,OAAS,KAGhC9F,EAAMkB,MAAMmB,aAAZ,IAAgCmB,UAC/B,kBAACR,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,YAEfT,MAAM,QAEN,0BACEtB,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,iCAA4EA,EAC5D,SAAhBpF,EAAM6B,MAAmB,+BAAiC,aAG7D+C,IAIN5E,EAAMkB,MAAMmB,aAAZ,KAAiCmB,UAChC,kBAACR,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,YAEfT,MAAM,QAEN,0BACEtB,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,iCAA4EA,EAC5D,SAAhBpF,EAAM6B,MAAmB,+BAAiC,aAG7DkE,IAAuB,IAAhBzB,EAAIK,WAAkBqB,OAC5B,yBAKPhG,EAAMkB,MAAMmB,aAAZ,MAAkCmB,UACjC,kBAACR,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,YAEfT,MAAM,QAEL,IACD,uBACEtB,UAAU,YACVkE,KAAM,kBAAoBvB,EAAIjD,aAE7B,IACD,0BACCM,UACCyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,gCAA2EA,EAC3D,SAAhBpF,EAAM6B,MAAmB,wCAA0C,aAGpE,IACAyC,EAAIjD,aACC,MAId,kBAAC2B,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,YAEfT,MAAM,QAEL,IACD,uBACEtB,UAAU,YACVkE,KAAM,oBAAsBvB,EAAI2B,MAEhC,kBAAC/C,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOkB,EAAI2B,MAClC,0BACEtE,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,gCAA2EA,EAC3D,SAAhBpF,EAAM6B,MAAmB,wCAA0C,aAGtElB,EAAQ2D,EAAI2B,UAKrB,kBAACjD,EAAA,EAAD,CACER,MAAO,CACLiB,OAAQ,OACR+B,MAAO,QACP9B,YAAa,WACbwC,aAAc,QAEhBjD,MAAM,QAEL,IACD,uBACEtB,UAAU,YACVkE,KAAM,oBAAsBvB,EAAI6B,IAEhC,kBAACjD,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAOkB,EAAI6B,IAClC,0BACExE,UACEyD,EACkB,SAAhBpF,EAAM6B,MAAN,UAA4BuD,EAA5B,gCAA2EA,EAC3D,SAAhBpF,EAAM6B,MAAmB,wCAA0C,aAGrEyC,EAAI6B,GAEFxF,EAAQ2D,EAAI6B,IADZ,+BAwBxBnG,EAAMkB,MAAMyB,QAAW3C,EAAMkB,MAAMgD,UASnC,GARA,kBAAC/C,EAAD,KACE,yBACEe,IAAKkE,EAAQ,OAGf,yDAQR,kBAACC,EAAA,EAAD,CAAMjH,WAAS,EAACoD,MAAO,CAAE8D,UAAW,WAAa3E,UAAU,cAEzD,kBAAC0E,EAAA,EAAD,CAAM1E,UAAU,iBACZ3B,EAAMkB,MAAMgD,WAAalE,EAAMkB,MAAMyB,OACpC,oCAAE,0BAAMhB,UAA2B,SAAhB3B,EAAM6B,MAAmB,YAAc,QAAxD,QACD,kBAAC,IAAD,CAAcoD,MAAOjF,EAAMkB,MAAMqF,OAC/B3G,OAAQ,GACR4G,QAASxG,EAAMyG,cACf5E,MAAO7B,EAAM6B,QAEf,0BAAMF,UAA2B,SAAhB3B,EAAM6B,MAAmB,YAAc,QAAxD,YAAsF,IAG5F,kBAACwE,EAAA,EAAD,CAAMK,MAAI,EAAC/E,UAAU,gBACnB,4BACEI,QAAS,SAACC,GAAD,OAAWhC,EAAM2G,WAAW3E,IACrCL,UACuB,IAArB3B,EAAMkB,MAAM+E,KACQ,SAAhBjG,EAAM6B,MAAmB,gDAAkD,yBAC3D,SAAhB7B,EAAM6B,MAAmB,kCAAoC,iBALrE,SAUA,4BACEE,QAAS,SAACC,GAAD,OAAWhC,EAAM4G,UAAU5E,IACpCL,UACuB,IAArB3B,EAAMkB,MAAM+E,KACM,SAAhBjG,EAAM6B,MAAmB,+CAAiD,wBAC1D,SAAhB7B,EAAM6B,MAAmB,kCAAoC,gBAGjE,yBAAKF,UAAU,aAAa4B,IAAI,OAAOrB,IAAK,qBAAuB,KAErE,4BAAQP,UAA2B,SAAhB3B,EAAM6B,MAAmB,kCAAoC,gBAAhF,OACO,IACJgF,KAAKC,MAAM5F,EAAM6F,iBAAmB7F,EAAMqF,QACzC,EACAM,KAAKC,OACF5F,EAAM6F,iBAAmB7F,EAAM+E,MAAQ/E,EAAMqF,QAC7C,IANP,MAOMM,KAAKC,MAAM5F,EAAM6F,iBAAmB7F,EAAMqF,SAEhD,4BACExE,QAAS,SAACC,GAAD,OAAWhC,EAAMgH,UAAUhF,IACpCL,WAC2B,IAAzB3B,EAAMkB,MAAMI,SACRtB,EAAMkB,MAAM+E,KAAOjG,EAAMkB,MAAMqF,SAC/BvG,EAAMkB,MAAM6F,iBACM,SAAhB/G,EAAM6B,MAAmB,sCAAwC,eACnD,SAAhB7B,EAAM6B,MAAmB,kCAAoC,eAC7D7B,EAAMkB,MAAM+F,SAAWjH,EAAMkB,MAAMqF,OAAS,EAC5B,SAAhBvG,EAAM6B,MAAmB,sCAAwC,eACjD,SAAhB7B,EAAM6B,MAAmB,kCAAoC,gBAGnE,yBAAK0B,IAAI,OAAOrB,IAAK,sBAEvB,4BACEH,QAAS,SAACC,GAAD,OAAWhC,EAAMkH,UAAUlF,IACpCL,UACE3B,EAAMkB,MAAM+E,KAAOjG,EAAMkB,MAAMqF,SAC7BvG,EAAMkB,MAAM6F,iBACM,SAAhB/G,EAAM6B,MAAmB,sCAAwC,eACjD,SAAhB7B,EAAM6B,MAAmB,kCAAoC,gBANrE,W,+BClnBNsF,EAASC,YAAaC,iCAAuC,CAC/DC,WAAY,CAAC,eAGMC,E,kDACnB,WAAYvH,GAAQ,IAAD,oCACjB,cAAMA,IAmIRyG,cAAgB,SAACzE,GACf,EAAKwF,SAAS,CAAEjB,OAAQvE,EAAMyF,OAAOxC,SACT,IAAxB,EAAK/D,MAAMI,SACb,EAAKoG,sBAAsB,EAAKxG,MAAM+F,SAAUjF,EAAMyF,OAAOxC,MAAO,GAEpE,EAAKyC,sBAAsB,EAAKxG,MAAM+E,KAAMjE,EAAMyF,OAAOxC,OAAQ,IAzIlD,EAkJnB0B,WAAa,SAAC3E,GACZ,EAAKwF,SAAS,CAAEvB,KAAM,IACtB,EAAKuB,SAAS,CAAElG,UAAU,IAC1B,EAAKoG,sBAAsB,EAAG,EAAKxG,MAAMqF,QAAS,IArJjC,EAuJnBW,UAAY,SAAClF,GACX,IAAIiE,EAAO,EAAK/E,MAAM6F,iBAAmB,EAAK7F,MAAMqF,OACpD,EAAKiB,SAAS,CAAEvB,SAChB,EAAKuB,SAAS,CAAEG,QAAS,IACzB,EAAKH,SAAS,CAAEP,SAAU,IAE1B,EAAKS,sBADU,EACsB,EAAKxG,MAAMqF,OAAQ,GACxD,EAAKiB,SAAS,CAAElG,UAAU,KA9JT,EAgKnB0F,UAhKmB,uCAgKP,WAAOhF,GAAP,mBAAAP,EAAA,sDACNwE,GAAQ,EAAK/E,MAAMqF,SAAU,EAAKrF,MAAM+E,KAC5C,EAAKuB,SAAS,CAAEvB,UACY,IAAxB,EAAK/E,MAAMI,SACT,EAAKJ,MAAM+F,SAAW,EAAK/F,MAAMqF,QAAU,IACzCN,EAAO,EAAK/E,MAAM+F,SAAW,EAAK/F,MAAMqF,OAC5C,EAAKiB,SAAS,CAAEP,SAAUhB,IAC1B,EAAKyB,sBAAsBzB,EAAM,EAAK/E,MAAMqF,OAAQ,KAGjD,EAAKrF,MAAMqF,SAAU,EAAKrF,MAAM+E,KAAO,EAAK/E,MAAM6F,mBACjDd,GAAQ,EAAK/E,MAAMqF,SAAU,EAAKrF,MAAM+E,KAC5C,EAAKuB,SAAS,CAAEvB,SAChB,EAAKuB,SAAS,CAAEG,SAAU,IAC1B,EAAKD,sBAAsBzB,EAAM,EAAK/E,MAAMqF,QAAS,IAd/C,2CAhKO,wDAkLnBK,UAAY,SAAC5E,GACX,IAAIiE,EAAO,EAAK/E,MAAM+E,KAAO,EAAK/E,MAAMqF,OAExC,GADA,EAAKiB,SAAS,CAAEvB,UACY,IAAxB,EAAK/E,MAAMI,SAAmB,CAChC,IAAI2E,GAAQ,EAAK/E,MAAMqF,SAAU,EAAKrF,MAAM+F,SAC5C,EAAKO,SAAS,CAAEP,SAAUhB,IAC1B,EAAKyB,sBAAsBzB,EAAM,EAAK/E,MAAMqF,OAAQ,QAEpD,GAAI,EAAKrF,MAAM+E,KAAO,EAAK/E,MAAMqF,QAAU,EAAG,CAC5C,IAAIN,EAAO,EAAK/E,MAAM+E,KAAO,EAAK/E,MAAMqF,OACxC,EAAKiB,SAAS,CAAEvB,SAChB,EAAKyB,sBAAsBzB,EAAM,EAAK/E,MAAMqF,QAAS,KA7LxC,EAqNnBjE,mBAAqB,SAACsF,GACpB,IAAMC,EAAU,EAAK3G,MAAMmB,aAC3BwF,EAAQD,GAAYpE,UAAYqE,EAAQD,GAAYpE,SACpD,EAAKgE,SAAS,CAAEnF,aAAcwF,KAtN9B,EAAK3G,MAAQ,CACX+E,KAAM,EACNM,OAAQ,GACRoB,SAAU,EACVV,SAAU,EACVnF,UAAW,sBACXP,gBAAiB,GACjBwF,iBAAkB,EAClBe,UAAU,EACVzC,cAAe,GACfnB,WAAW,EACXvB,QAAQ,EACRrB,UAAU,EACVyG,UAAS,UAAE,EAAK/H,aAAP,iBAAE,EAAYgI,aAAd,iBAAE,EAAmBC,cAArB,aAAE,EAA2BC,OACtC7F,aAAc,CAEZ8F,OAAQ,CAAE3E,UAAU,EAAM4E,YAAaC,IAAgBpD,OACvDqD,IAAK,CAAE9E,UAAU,EAAM4E,YAAaC,IAAgBE,KACpD9D,KAAM,CAAEjB,UAAU,EAAM4E,YAAaC,IAAgBG,MAErDC,MAAO,CAAEjF,UAAU,EAAM4E,YAAaC,IAAgBK,eAtBzC,E,wDA6BnB,WACEC,KAAK3I,MAAMmH,OAAOyB,IAAI,kB,sEAGxB,sBAAAnH,EAAA,sEACQkH,KAAKjB,wBADb,uBAEQiB,KAAKE,sBAFb,uBAGQF,KAAKG,WAAW3B,GAHxB,gD,gIAeA,WAA4BlB,EAAMM,EAAQoB,GAA1C,uBAAAlG,EAAA,6DAEEwE,EAAOA,GAAiB,IAATA,EAAaA,EAAO0C,KAAKzH,MAAM+E,KAC9CM,EAASA,GAAkBoC,KAAKzH,MAAMqF,OACtCoB,EAAUA,GAAoBgB,KAAKzH,MAAMyG,QACrCoB,EALN,gBAKyB9C,EALzB,kBAKuCM,EALvC,oBAKyDoB,GALzD,SAM0CqB,IAAMC,cAC5CC,IAAmBC,qBAAqBJ,EAAS,KAPrD,sCAMOK,EANP,KAMcC,EANd,MASMD,GAAUC,EAThB,0CAUWV,KAAKnB,SAAS,CAAEM,UAAU,EAAOnF,QAAQ,KAVpD,QAWE0G,EAAqBA,EAAmBhF,KAAI,SAACqC,GAC3C,OAAO,2BACFA,GADL,IAEEZ,OAAQkD,IAAMM,cAAc5C,EAAK6C,YAGrCZ,KAAKnB,SAAS,CACZjG,gBAAiB8H,EACjBnF,WAAW,EACXvB,OAAQ0G,EAAmBpI,OAAS,IApBxC,iD,mIAwCA,kCAAAQ,EAAA,sEAC6BuH,IAAMC,cAC/BC,IAAmBL,uBAFvB,sCACOO,EADP,KACcI,EADd,MAKMJ,GAAUI,EALhB,iDAMEb,KAAKnB,SAAS,CAAET,iBAAkByC,IANpC,gD,8EASA,SAAWrC,GAAS,IAAD,OACjBA,EAAOsC,GAAG,sBAAsB,SAACC,EAAiBN,GAEhDM,EAAe,OAAaV,IAAMM,cAAcI,GAChD,IAAIC,EAAe,EAAKzI,MAAMK,gBAM9B,IAC4B,IALDoI,EAAaC,WAAU,SAAClD,GACjD,OAAOA,EAAKvB,OAASuE,EAAgBvE,SAKjB,IAApB,EAAKjE,MAAM+E,OACa,IAAxB,EAAK/E,MAAMI,SACX,CACIqI,EAAa1I,QAAU,IAAI0I,EAAaE,MAC5CF,EAAaG,QAAQJ,GACrB,IAAIK,EAAkB,eACnBL,EAAgBvE,KAAO,uBAE1B,EAAKqC,SAAS,CAAEnC,cAAe0E,IAC/BC,YAAW,WACT,EAAKxC,SAAS,CAAEnC,cAAe,OAC9B,KACH,EAAKmC,SAAS,CACZjG,gBAAiBoI,EACjBhH,OAAQgH,EAAa1I,OAAS,U,yBAuEtC,SAAYkE,EAAMoB,EAAQgC,EAAK0B,EAAOhE,EAAME,EAAI+D,GAC9C,MAAO,CAAE/E,OAAMoB,SAAQgC,MAAK0B,QAAOhE,OAAME,KAAI+D,Y,qBAG/C,SAAQtJ,GAA0C,IAAvCC,EAAsC,uDAA5B,GAAiBC,EAAW,uDAAH,EAC5C,MAAM,GAAN,cAAUF,QAAV,IAAUA,OAAV,EAAUA,EAAGG,MAAM,EAAGF,IAAtB,OAAiC,IAAIG,OAAOF,IAA5C,cAAqDF,QAArD,IAAqDA,OAArD,EAAqDA,EAAGG,OACrD,OAADH,QAAC,IAADA,OAAA,EAAAA,EAAGK,QAAS,EADuC,OAEnDL,QAFmD,IAEnDA,OAFmD,EAEnDA,EAAGK,W,wBAIP,SAAWyF,EAAMyD,GAEf,OAAKzD,GAASA,EAAKzF,OAGb,IAAN,OAAWyF,EAAX,YAFS,Q,oBAWX,WACE,OACE,yBAAK/E,UAAgC,SAArBgH,KAAK3I,MAAM6B,MAAmB,gBAAkB,IAC9D,kBAAC9B,EAAD,CACEqK,YAAazB,KAAKyB,YAClB9H,mBAAoBqG,KAAKrG,mBACzBpB,MAAOyH,KAAKzH,MACZP,QAASgI,KAAKhI,QACd0J,WAAY1B,KAAK0B,WACjBzD,UAAW+B,KAAK/B,UAChBI,UAAW2B,KAAK3B,UAChBE,UAAWyB,KAAKzB,UAChBP,WAAYgC,KAAKhC,WACjBF,cAAekC,KAAKlC,cACpB5E,MAAO8G,KAAK3I,MAAM6B,a,GA1OuByI,K,QCN7CC,E,4JACJ,WACE,OACE,oCACE,kBAAC,IAAD,CAAsB1I,MAAO8G,KAAK3I,MAAM6B,MAAM2I,eAC9C,kBAAC,EAAD,CAAsB3I,MAAO8G,KAAK3I,MAAM6B,MAAM2I,eAC9C,kBAAC,IAAD,W,GANmCF,KAe5BG,uBAHS,SAACvJ,GACvB,MAAO,CAAEW,MAAOX,EAAMW,SAEgB,CAAE6I,oBAA3BD,CAA6CF,I,oBCvB5DI,EAAOC,QAAU,IAA0B,uC,oGCMrC1L,EAAYC,YAAW,CAC3B0L,cAAe,CACbrL,WAAY,qBACZsL,MAAO,wBAILC,EAAalL,kBAAOmL,IAAPnL,CAAH,sHAEJ,qBAAGD,UAOTqL,EAAiBpL,kBAAOmL,IAAPnL,CAAH,gLAER,qBAAGD,UAiDAsL,IAzCM,SAAC,GAA4C,IAA1CjG,EAAyC,EAAzCA,MAAOuB,EAAkC,EAAlCA,QAAkC,IAAzB5G,cAAyB,MAAhB,GAAgB,EAAZiC,EAAY,EAAZA,MAC7C5B,EAAUf,IAChB,OACE,oCACa,SAAV2C,EACC,kBAACoJ,EAAD,CACEhG,MAAOA,EACPkG,SAAU,SAACnJ,GAAD,OAAWwE,EAAQxE,IAC7BoJ,cAAY,EACZxL,OAAQA,EACRyL,UAAW,CAAEpL,QAAS,CAAEqL,MAAOrL,EAAQ4K,iBAEvC,kBAAC,IAAD,CAAUU,UAAQ,EAACtG,MAAM,IACvB,uCAEF,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,KAAjB,QAGF,kBAAC8F,EAAD,CACE9F,MAAOA,EACPkG,SAAU,SAACnJ,GAAD,OAAWwE,EAAQxE,IAC7BoJ,cAAY,EACZxL,OAAQA,GAER,kBAAC,IAAD,CAAU2L,UAAQ,EAACtG,MAAM,IACvB,uCAEF,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,IAAjB,MACA,kBAAC,IAAD,CAAUA,MAAO,KAAjB,W,iCCnEV,+CAKM/F,EAAYC,aAAW,SAAC0C,GAAD,MAAY,CACrC2J,aAAc,CACVC,SAAU,QACVjG,MAAO,OACPnG,aAAc,WAgDPqM,IA7Cf,SAAiC1L,GAC7B,IAAMC,EAAUf,IAEhB,OAAQ,kBAAC,IAAD,CAASe,QAAS,CAACuL,aAAcvL,EAAQuL,cAC7CG,KAAM3L,EAAMmC,OACZ/B,SAAUJ,EAAMI,SAChBwL,QAAS5L,EAAMoC,cACfyJ,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,yBAAKpK,UAA2B,SAAhB3B,EAAM6B,MAAmB,0BAA0B,SAC/D,yBAAKF,UAA2B,SAAhB3B,EAAM6B,MAAmB,2EAA6E,mEAAtH,qBACA,yBAAKF,UAAU,0BACf,yBAAKA,UAAU,iBAEP3B,EAAMqC,cAAgB4J,OAAOC,KAAKlM,EAAMqC,cAAcgC,KAAI,SAAAiB,GACtD,GAAY,YAARA,EACA,OACI,yBAAK3D,UAAU,+CACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAASsB,MAAM,QAAQG,MAAOpD,EAAMqC,aAAaiD,GAAK8C,aAClD,yBAAKzG,UAAU,4BACVO,IAAI,sBAEb,yBAAKP,UAA2B,SAAhB3B,EAAM6B,MAAmB,iBAAiB,SAAUyD,IAExE,yBAAKvD,QAAS,kBAAM/B,EAAMsC,mBAAmBgD,KACxCtF,EAAMqC,aAAaiD,GAAK9B,SACrB,yBAAK7B,UAAU,GAAGO,IAAI,8BACtB,yBAAKP,UAAU,GAAGO,IAAI,0C,iCC9ClE,+CAKMhD,EAAYC,aAAW,SAAC0C,GAAD,MAAY,CACrC2J,aAAc,CACVC,SAAU,QACVjG,MAAO,OACPnG,aAAc,MACdoG,OAAQ,YA4CD0G,IAxCf,SAA+BnM,GAC3B,IAAMC,EAAUf,IAChB,OACI,kBAAC,IAAD,CACIyC,UAAU,GACV1B,QAAS,CAACuL,aAAcvL,EAAQuL,cAChCG,KAAM3L,EAAMmC,OACZyJ,QAAS5L,EAAMuC,aACf6J,kBAAgB,qBAEhB,yBAAKzK,UAA2B,SAAhB3B,EAAM6B,MAAmB,0BAA0B,SAC/D,yBAAKF,UAAW3B,EAAM6B,MAAQ,2EAA2E,mEAAzG,qBACA,yBAAKF,UAAU,0BACf,yBAAKA,UAAU,iBAEP3B,EAAMqC,cAAgB4J,OAAOC,KAAKlM,EAAMqC,cAAcgC,KAAI,SAAAiB,GACtD,GAAY,YAARA,EACA,OACI,yBAAK3D,UAAU,+CACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAASsB,MAAM,QAAQG,MAAOpD,EAAMqC,aAAaiD,GAAK8C,aAClD,yBAAKzG,UAAU,2BACXO,IAAI,sBAEZ,yBAAKP,UAAW3B,EAAM6B,MAAQ,kBAAkB,UAAWyD,IAE/D,yBAAKvD,QAAS,kBAAM/B,EAAMsC,mBAAmBgD,KACxCtF,EAAMqC,aAAaiD,GAAK9B,SACrB,yBAAK7B,UAAU,GAAGO,IAAI,8BACtB,yBAAKP,UAAU,GAAGO,IAAI,0C,mKC2LvDmK,IA5Nf,SAAkCrM,GAAQ,IAAD,MACvC,EAAwBG,oBAAS,GAAjC,mBAAOwL,EAAP,KAAaW,EAAb,KACA,EAA8CnM,mBAAS,GAAvD,mBAAOoM,EAAP,KAAwBC,EAAxB,KACA,EAA6CrM,mBAAS,GAAtD,mBAAOwJ,EAAP,KAAqB8C,EAArB,KACA,EAA0BtM,mBAAS,GAAnC,mBAAOuM,EAAP,KAAcC,EAAd,KACA,EAAkCxM,mBAAS,GAA3C,mBAAOyM,EAAP,KAAkBC,EAAlB,KACA,EAAkC1M,oBAAS,GAA3C,mBAAO+D,EAAP,KAAkB4I,EAAlB,KAEIC,EAAgBC,OAAOC,aAAaC,QAAQ,YAC5CC,EAAUC,mBASdC,qBAAU,WACRC,SAASC,iBAAiB,aAAa,SAACvL,GAAW,IAAD,GAC5C,OAACmL,QAAD,IAACA,GAAD,UAACA,EAASK,eAAV,aAAC,EAAkBC,SAASzL,EAAMyF,UACpC6E,GAAQ,MAGY,IAApBC,GACFmB,IAEgB,IAAdd,GACFe,MAED,CAACpB,EAAiBK,EAAWG,IAEhC,IAAMW,EAAiB,uCAAG,oCAAAjM,EAAA,6DACpBsH,EADoB,UACPwD,GADO,SAEwBvD,IAAMC,cACpDC,IAAmB0E,+BAA+B7E,EAAS,KAHrC,sCAEnBK,EAFmB,KAEZyE,EAFY,MAKpBzE,GAAUyE,EALU,iDAMxBpB,EAAqBoB,GACrBhB,EAAY,OAACgB,QAAD,IAACA,OAAD,EAACA,EAA4BlJ,WACzCmI,GAAa,GARW,4CAAH,qDAWjBa,EAAiC,uCAAG,sCAAAlM,EAAA,6DACpCsH,EACF,oBAAsB6D,EAAY,cAAgBG,EAFZ,SAGQ/D,IAAMC,cACpDC,IAAmByE,kCAAkC5E,EAAS,KAJxB,sCAGnCK,EAHmC,KAG5ByE,EAH4B,MAMpCzE,GAAUyE,EAN0B,iDAOxClB,EAAQ,UAACkB,EAA2B,UAA5B,aAAC,EAA+BnB,OAPA,4CAAH,qDAUjCoB,EACc,QAAlBf,EAA0B,SAAwB,QAAlBA,EAA0B,IAAM,SAC5DgB,EACsBrB,EACtBsB,EAAYD,EAEd/E,IAAMhE,eAAe+I,EAAapE,EAAa1E,MAAO,GADtD,EAEEgJ,GAAY,OAACtE,QAAD,IAACA,OAAD,EAACA,EAAc1E,OAE7B+D,IAAMhE,eAAN,OAAqB2E,QAArB,IAAqBA,OAArB,EAAqBA,EAAc1E,MAAO,GAD1C,EAEEiJ,EAASvE,EAEXX,IAAMhE,gBAA2B,OAAZ2E,QAAY,IAAZA,OAAA,EAAAA,EAAcwE,WAAd,OAAyBxE,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAcyE,SAAS,GADrE,EAGEC,EAEAH,EAAQxB,EAIR4B,EAAYD,EAAD,UAEbE,WAAWF,UAFE,aAEb,EAA8BG,QAAQ,GADtC,EAGEC,EAAQ9E,EAAawE,SAEvBnF,IAAMhE,eAAe2E,EAAawE,SAAU,IAD5C,EAGJ,OACE,6BACE,kBAAC,IAAD,CACEO,QAAQ,QACR7M,MAAO,QACP8M,aAAa,EACbxL,UAAW6J,OAAO4B,WAAa,IAAM,QAAU,SAC/CC,OAAQ,CAAC,EAAG,GACZC,QACE,yBAAKC,IAAK5B,EAASxL,UAAW,8BACd,GAAbuC,EACC,yBAAKvC,UAAU,sBACb,kBAAC,IAAD,OAGF,6BACE,uBAAGA,UAAU,4BAAb,sBACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAOsB,MAAM,QAAQ6L,QAAS,8BAC5B,yBACEnN,UAAU,sBACVO,IAAI,uCAGR,yBAAKP,UAAU,kBAAf,WAEDgI,GAAuC,GAAvBA,EAAaqF,OAC5B,yBAAKrN,UAAU,gBAAf,WAEA,yBAAKA,UAAU,eAAf,UAEF,wBAAIA,UAAU,wBACd,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAOsB,MAAM,OAAO6L,QAASzG,IAAgBpD,OAC3C,yBACEtD,UAAU,sBACVO,IAAI,uCAEC,IACT,yBAAKP,UAAU,kBAAf,UAEF,yBAAKA,UAAU,uBACZsM,EADH,aAC0BH,EACvBE,EAFH,KAIA,wBAAIrM,UAAU,wBACd,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAOsB,MAAM,OAAO6L,QAASzG,IAAgB6B,QAC3C,yBACEvI,UAAU,sBACVO,IAAI,uCAEC,IACT,yBAAKP,UAAU,kBAAf,aAEF,yBAAKA,UAAU,uBACH,GAATuM,EACG,EADH,UAEGK,WAAWL,UAFd,aAEG,EAAmBM,QAAQ,GAAGS,QAAQ,MAAO,IAAK,IAHxD,QAIQnB,EACLQ,EALH,KAOA,wBAAI3M,UAAU,wBACd,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAOsB,MAAM,OAAO6L,QAASzG,IAAgB6G,aAC3C,yBACEvN,UAAU,sBACVO,IAAI,uCAEC,IACT,yBAAKP,UAAU,kBAAf,iBAEF,yBAAKA,UAAU,uBACZqE,IAAO,GAAPA,CAAW2D,EAAawF,MAE3B,wBAAIxN,UAAU,wBACd,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAOsB,MAAM,OAAO6L,QAASzG,IAAgB+G,UAC3C,yBACEzN,UAAU,sBACVO,IAAI,uCAEC,IACT,yBAAKP,UAAU,kBAAf,wBAEF,yBAAKA,UAAU,uBACJ,GAAR8M,EACG,EADH,UAEGF,WAAWE,UAFd,aAEG,EAAkBD,QAAQ,IAAIS,QAAQ,MAAO,KAEnD,wBAAItN,UAAU,wBACd,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAOsB,MAAM,OAAO6L,QAASzG,IAAgBgH,SAC3C,yBACE1N,UAAU,sBACVO,IAAI,uCAEC,IACT,yBAAKP,UAAU,kBAAf,UAEF,yBAAKA,UAAU,uBAAf,OAAsCgI,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAc2F,OACpD,yBAAK3N,UAAU,oBACb,6BACE,uBACEkE,KAAM,wBAA0B0G,EAChC5K,UAAU,gBAFZ,wBAOF,6BACE,uBACEkE,KAAM,wBAA0B0G,EAChC5K,UAAU,gBAEV,yBAAKA,UAAW,aAAcO,IAAK,4BASjD,4BACEH,QAAS,kBAAMuK,GAAQ,IACvB3K,UAAWgK,EAAO,aAAe,uBAEjC,yBACEhK,UAAW,eACXO,IAAKyJ,EAAO,8BAAgC,wBAC5C5J,QAzMW,gBACcwN,IAA7BvP,EAAM4F,qBACR4G,EAAmB,GACnBA,EAAmBxM,EAAM4F,6B,uHCfzB4J,G,iKAEF,WACI,OACI,6BAEI,kBAAC,IAAD,CACI/I,cAAekC,KAAK3I,MAAMyG,cAC1B5E,MAAO8G,KAAK3I,MAAM6B,MAAM2I,oB,GARdF,MAqBfG,iBAJS,SAACvJ,GACrB,MAAO,CAAEW,MAAOX,EAAMW,SAGc,CAAE6I,oBAA3BD,CAA6C+E","file":"static/js/28.237efe0e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../../src/assets/styles/blocksAndTransactionList.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Grid, TableContainer } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport Loader from \"../../assets/loader\";\nimport ConfigureColumnPopOver from \"../common/configureColumnsPopOver\";\nimport ConfigureColumnsModal from \"../common/configureColumnsModal\";\nimport moment from \"moment\";\nimport { messages } from \"../../constants\";\nimport TransactionDetailTooltip from \"../common/transactionDetailTooltip\";\nimport format from \"format-number\";\nimport utility from \"../../utility\";\nimport PageSelector from \"../common/pageSelector\";\nimport { useParams } from \"react-router\";\n\nconst useStyles = makeStyles({\n  container: {\n    borderRadius: \"14px\",\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n    borderBottom: \"none\",\n    background: \"#fff\",\n  },\n  containerDark: {\n    borderRadius: \"14px\",\n    boxShadow: \"none\",\n    borderBottom: \"none\",\n    background: \"#192a59\",\n  },\n  container1: {\n    borderRadius: \"14px\",\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n    borderBottom: \"none\",\n    background: \"#fff\",\n  },\n  containerDark1: {\n    borderRadius: \"14px\",\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n    borderBottom: \"none\",\n    background: \"#192a59\",\n  },\n  \"@media (min-width:0px) and (max-width: 1240px)\": {\n    container: {\n      height: \"36.375rem\",\n    },\n    containerDark: {\n      height: \"36.375rem\",\n    },\n    container1: {\n      height: \"23.375rem\",\n    },\n    containerDark1: {\n      height: \"23.375rem\",\n    },\n  },\n});\nconst Pagination = styled.div`\n  @media (min-width: 640px) {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nexport default function TransactionComponent(props) {\n  const classes = useStyles();\n\n  let [anchorEl, setAnchorEl] = React.useState();\n  let [isColumnsModalOpen, setColumnsModal] = React.useState(false);\n  let isSettingColumnOpen = Boolean(anchorEl);\n\n  function handleSettingsClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function toggleModal() {\n    setColumnsModal(!isColumnsModalOpen);\n  }\n\n  function handleOnClose() {\n    setAnchorEl(null);\n  }\n\n  function shorten(b, amountL = 10, amountR = 3, stars = 3) {\n    return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\n      b.length - 3,\n      b.length\n    )}`;\n  }\n\n  const { state } = props;\n\n  const NoDataFoundContainer = styled.div`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 100px;\n    gap: 10px;\n    color: #c6cbcf;\n    @media (min-width: 767px) {\n      margin: 100px 0 !important;\n    }\n  `;\n\n  const tableColumns = { \"Transaction Hash\": { isActive: true } };\n  const { blockNumber } = useParams();\n\n  if (props.state.lastPage === true) {\n    props.state.transactionList.sort(function (a, b) {\n      return Number(b.blockNumber) - Number(a.blockNumber);\n    });\n  }\n  return (\n    <div className=\"responsive-table-width-transactions-list contact-list-tab \">\n      <div className=\"display-flex justify-content-between p-t-30 p-b-15\">\n        <div class={props.theme === \"dark\" ? \"latestTransactionHeadingDark\" :\"latestTransactionHeading\"}>{state.tableName}</div>\n        <div class=\" display-none-mobile display-flex flex-direction-column justify-content-center\">\n          <img\n            onClick={handleSettingsClick}\n            className=\"m-r-9 h-20 w-20-px cursor-pointer\"\n            src=\"/images/settings.svg\"\n          />\n          <ConfigureColumnPopOver\n            isOpen={isSettingColumnOpen}\n            anchorEl={anchorEl}\n            handleOnClose={handleOnClose}\n            tableColumns={props.state.tableColumns}\n            toggleTableColumns={props.toggleTableColumns}\n            theme={props.theme}\n          />\n        </div>\n        <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\n          <img\n            onClick={toggleModal}\n            className=\"p-r-5 h-20 w-20-px cursor-pointer\"\n            src=\"/images/settings.svg\"\n          />\n          <ConfigureColumnsModal\n            isOpen={isColumnsModalOpen}\n            onModalClose={toggleModal}\n            tableColumns={props.state.tableColumns}\n            toggleTableColumns={props.toggleTableColumns}\n            theme={props.theme}\n          />\n        </div>\n      </div>\n\n      <div style={{ borderRadius: \"14px\" }} elevation={0}>\n        <TableContainer className={!props.state.isData ? props.theme === \"dark\" ? classes.containerDark1 : classes.container1 : props.theme === \"dark\" ? classes.containerDark : classes.container} id=\"container-table-transaction-list\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell\n                  className=\"table-head-hash hash-transaction-list-all\"\n                  align=\"left\"\n                >\n                  <span className={props.theme === \"dark\" ? \"tableheaders-hash-dark TableHeadersTransactionDark\" : (\"tableheaders-hash\", \"tableheaders\")}>\n                    Hash\n                    <Tooltip placement=\"top\" title={messages.HASH}>\n                      <img\n                        alt=\"question-mark\"\n                        src=\"/images/info.svg\"\n                        height={\"14px\"}\n                        className=\"tooltipInfoIcon\"\n                      />\n                    </Tooltip>\n                  </span>\n                </TableCell>\n                {props.state.tableColumns[\"Amount\"].isActive && (\n                  <TableCell\n                    style={{ border: \"none\", paddingLeft: \"2.813rem\" }}\n                    className=\"table-head-all\"\n                    align=\"left\"\n                  >\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\n                      Amount\n                      <Tooltip placement=\"top\" title={messages.AMOUNT}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                )}\n                {props.state.tableColumns[\"Age\"].isActive && (\n                  <TableCell\n                    style={{ border: \"none\", paddingLeft: \"2.813rem\" }}\n                    className=\"table-head-all\"\n                    align=\"left\"\n                  >\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\n                      Method\n                      <Tooltip placement=\"top\" title={messages.METHOD}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                )}\n                {props.state.tableColumns[\"Age\"].isActive && (\n                  <TableCell\n                    style={{ border: \"none\", paddingLeft: \"3rem\" }}\n                    className=\"table-head-all\"\n                    align=\"left\"\n                  >\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-age-dark\" : (\"tableheaders\", \"tableheaders-age\")}>\n                      Age\n                      <Tooltip placement=\"top\" title={messages.AGE}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                )}\n                {props.state.tableColumns[\"Date\"].isActive && (\n                  <TableCell\n                    style={{ border: \"none\", paddingLeft: \"3rem\" }}\n                    className=\"table-head-all\"\n                    align=\"left\"\n                  >\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-age-dark\" : (\"tableheaders\", \"tableheaders-age\")}>\n                      Date\n                      <Tooltip placement=\"top\" title={messages.DATE}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                )}\n                {props.state.tableColumns[\"Block\"].isActive && (\n                  <TableCell\n                    style={{ border: \"none\", paddingLeft: \"3rem\" }}\n                    className=\"table-head-all\"\n                    align=\"left\"\n                  >\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\n                      Block\n                      <Tooltip placement=\"top\" title={messages.BLOCK}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                )}\n                <TableCell\n                  style={{ border: \"none\", paddingLeft: \"3rem\" }}\n                  className=\"table-head-all\"\n                  align=\"left\"\n                >\n                  <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\n                    From\n                    <Tooltip placement=\"top\" title={messages.FROM}>\n                      <img\n                        alt=\"question-mark\"\n                        src=\"/images/info.svg\"\n                        height={\"14px\"}\n                        className=\"tooltipInfoIcon\"\n                      />\n                    </Tooltip>\n                  </span>\n                </TableCell>\n                <TableCell\n                  style={{ border: \"none\", paddingLeft: \"3rem\" }}\n                  className=\"table-head-all\"\n                  align=\"left\"\n                >\n                  <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\n                    To\n                    <Tooltip placement=\"top\" title={messages.TO}>\n                      <img\n                        alt=\"question-mark\"\n                        src=\"/images/info.svg\"\n                        height={\"14px\"}\n                        className=\"tooltipInfoIcon\"\n                      />\n                    </Tooltip>\n                  </span>\n                </TableCell>\n                {/* <TableCell\n                  style={{ border: \"none\", paddingLeft: \"3rem\" }}\n                  className=\"table-head-all\"\n                  align=\"left\"\n                >\n                  <span className={(\"tableheaders\", \"tableheaders-txn-fee\")}>\n                    Txn Fee\n                  </span>\n                </TableCell> */}\n              </TableRow>\n            </TableHead>\n            {props.state.isLoading == true ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell style={{ border: \"none\" }} colspan=\"7\">\n                    <div className=\"loader-block-list\">\n                      <Loader />\n                    </div>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              <TableBody>\n                {props.state.transactionList &&\n                  props.state.transactionList.length >= 1 &&\n                  props.state.transactionList.map((row, index) => {\n                    const currentTime = new Date();\n                    const previousTime = new Date(row.timestamp * 1000);\n                    const ti = utility.timeDiff(currentTime, previousTime);\n                    // const txFee = (\n                    //   (row?.gasUsed * row?.gasPrice) /\n                    //   100000000000000000\n                    // ).toFixed(9);\n                    let amt = utility.decimalDivison(row.value, 8);\n                    const Hash = row.hash;\n                    let animationClass = props.state.hashAnimation?.[Hash];\n\n                    return (\n                      <TableRow\n                        key={row.name}\n                        style={\n                          index % 2 !== 1\n                            ? props.theme === \"dark\" ? { background: \"#192a59\" } : { background: \"#f9f9f9\" }\n                            : props.theme === \"dark\" ? { background: \"#192a59\" } : { background: \"white\" }\n                        }\n                      >\n                        <TableCell\n                          style={{\n                            border: \"none\",\n                            width: \"190px\",\n                            margin: 0,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <div>\n                            <TransactionDetailTooltip\n                              transactionAddress={row.hash}\n                            />\n                          </div>\n                          <a\n                            className=\"linkTable\"\n                            href={\"/transaction-details/\" + row.hash}\n                          >\n                            {\" \"}\n                            <span\n                              className={\n                                animationClass \n                                ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \n                                : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\n                              }\n                            >\n                              {\" \"}\n                              {shorten(row.hash)}\n                            </span>{\" \"}\n                          </a>\n                        </TableCell>\n                        {props.state.tableColumns[\"Amount\"].isActive && (\n                          <TableCell\n                            style={{\n                              border: \"none\",\n                              width: \"100px\",\n                              paddingLeft: \"2.813rem\",\n                            }}\n                            align=\"left\"\n                          >\n                            <span\n                              className={\n                                animationClass \n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\n                              }\n                            >\n                              {amt}\n                            </span>\n                          </TableCell>\n                        )}\n                        <TableCell\n                          style={{\n                            border: \"none\",\n                            width: \"120px\",\n                            paddingLeft: \"2.813rem\",\n                          }}\n                          align=\"left\"\n                        >\n                          <span\n                              className={\n                                animationClass \n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\n                              }\n                            >\n                              {row.method ? row.method : \"\"}\n                            </span>\n                        </TableCell>\n                        {props.state.tableColumns[\"Age\"].isActive && (\n                          <TableCell\n                            style={{\n                              border: \"none\",\n                              width: \"120px\",\n                              paddingLeft: \"2.813rem\",\n                            }}\n                            align=\"left\"\n                          >\n                            <span\n                              className={\n                                animationClass \n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\n                              }\n                            >\n                              {ti}\n                            </span>\n                          </TableCell>\n                        )}\n                        {props.state.tableColumns[\"Date\"].isActive && (\n                          <TableCell\n                            style={{\n                              border: \"none\",\n                              width: \"120px\",\n                              paddingLeft: \"2.813rem\",\n                            }}\n                            align=\"left\"\n                          >\n                            <span\n                              className={\n                                animationClass \n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\n                              }\n                            >\n                              {moment(row.timestamp * 1000).format(\n                                \"MMM DD, YYYY h:mm A\"\n                              )}\n                            </span>\n                          </TableCell>\n                        )}\n                        {props.state.tableColumns[\"Block\"].isActive && (\n                          <TableCell\n                            style={{\n                              border: \"none\",\n                              width: \"120px\",\n                              paddingLeft: \"2.813rem\",\n                            }}\n                            align=\"left\"\n                          >\n                            {\" \"}\n                            <a\n                              className=\"linkTable\"\n                              href={\"/block-details/\" + row.blockNumber}\n                            >\n                              {\" \"}\n                              <span\n                               className={\n                                animationClass \n                                ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \n                                : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\n                              }\n                              >\n                                {\" \"}\n                                {row.blockNumber}\n                              </span>{\" \"}\n                            </a>\n                          </TableCell>\n                        )}\n                        <TableCell\n                          style={{\n                            border: \"none\",\n                            width: \"160px\",\n                            paddingLeft: \"2.813rem\",\n                          }}\n                          align=\"left\"\n                        >\n                          {\" \"}\n                          <a\n                            className=\"linkTable\"\n                            href={\"/address-details/\" + row.from}\n                          >\n                            <Tooltip placement=\"top\" title={row.from}>\n                              <span\n                                className={\n                                  animationClass \n                                  ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \n                                  : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\n                                }\n                              >\n                                {shorten(row.from)}\n                              </span>\n                            </Tooltip>\n                          </a>\n                        </TableCell>\n                        <TableCell\n                          style={{\n                            border: \"none\",\n                            width: \"155px\",\n                            paddingLeft: \"2.813rem\",\n                            paddingRight: \"15px\",\n                          }}\n                          align=\"left\"\n                        >\n                          {\" \"}\n                          <a\n                            className=\"linkTable\"\n                            href={\"/address-details/\" + row.to}\n                          >\n                            <Tooltip placement=\"top\" title={row.to}>\n                              <span\n                                className={\n                                  animationClass \n                                  ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \n                                  : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\n                                }\n                              >\n                                {!row.to\n                                  ? \"------------------\"\n                                  : shorten(row.to)}\n                              </span>\n                            </Tooltip>\n                          </a>\n                        </TableCell>\n                        {/* <TableCell\n                          style={{ border: \"none\", paddingLeft: \"2.813rem\" }}\n                          align=\"left\"\n                        >\n                          <span\n                            className={\n                              animationClass ? animationClass : \"tabledata\"\n                            }\n                          >\n                            {txFee == 0 ? 0 : txFee} XDC\n                          </span>\n                        </TableCell> */}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            )}\n          </Table>\n          {!props.state.isData && !props.state.isLoading ? (\n            <NoDataFoundContainer>\n              <img\n                src={require(\"../../../src/assets/images/XDC-Alert.svg\")}\n              ></img>\n\n              <div>No transactions found</div>\n            </NoDataFoundContainer>\n          ) : (\n            \"\"\n          )}\n        </TableContainer>\n      </div>\n\n      <Grid container style={{ marginTop: \"1.75rem\" }} className=\"Pagination\">\n        {/* <Pagination> */}\n        <Grid className=\"Pagination_1\">\n          {!props.state.isLoading && props.state.isData ?\n            (<><span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>Show</span>\n              <PageSelector value={props.state.amount}\n                height={35}\n                handler={props._handleChange} \n                theme={props.theme}\n                />\n              <span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>Records</span></>) : (\"\")}\n        </Grid>\n\n        <Grid item className=\"Pagination_2\">\n          <button\n            onClick={(event) => props._FirstPage(event)}\n            className={\n              props.state.from === 0\n                ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark btn-first\" : \"btn disabled btn-first\"\n                : props.theme === \"dark\" ? \"btn-latest-block-dark btn-first\" : \"btn btn-first\"\n            }\n          >\n            First\n          </button>\n          <button\n            onClick={(event) => props._PrevPage(event)}\n            className={\n              props.state.from === 0 \n              ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark btn-back\" : \"btn disabled btn-back\" \n              : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-back\" : \"btn btn-back\"\n            }\n          >\n            <img className=\"rotate-180\" alt=\"back\" src={\"/images/next.svg\"} />{\" \"}\n          </button>\n          <button className={props.theme === \"dark\" ? \"btn-latest-block-dark  btn-page\" : \"btn btn-page\"}>\n            Page{\" \"}\n            {Math.round(state.totalTransaction / state.amount) +\n              1 -\n              Math.round(\n                (state.totalTransaction - state.from) / state.amount\n              )}{\" \"}\n            of {Math.round(state.totalTransaction / state.amount)}\n          </button>\n          <button\n            onClick={(event) => props._NextPage(event)}\n            className={\n              props.state.lastPage === false\n                ? props.state.from + props.state.amount ===\n                  props.state.totalTransaction\n                  ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark\" : \"btn disabled\"\n                : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-next\" : \"btn btn-next\"\n                : props.state.lastFrom - props.state.amount < 0\n                ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark\" : \"btn disabled\"\n                : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-next\" : \"btn btn-next\"\n            }\n          >\n            <img alt=\"next\" src={\"/images/next.svg\"} />\n          </button>\n          <button\n            onClick={(event) => props._LastPage(event)}\n            className={\n              props.state.from + props.state.amount ===\n                props.state.totalTransaction\n                ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark\" : \"btn disabled\"\n                : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-last\" : \"btn btn-last\"\n            }\n          >\n            Last\n          </button>\n        </Grid>\n        {/* </Pagination> */}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport BaseComponent from \"../baseComponent\";\nimport TransactionComponent from \"./transactionComponent\";\nimport Utils from \"../../utility\";\nimport { TransactionService } from \"../../services\";\nimport TokenSearchComponent from \"../explorer/tokensearchBar\";\nimport FooterComponent from \"../common/footerComponent\";\nimport { MethodFromByte, toolTipMessages } from \"../../constants\";\nimport socketClient from \"socket.io-client\";\nimport { withRouter } from \"react-router\";\nlet socket = socketClient(process.env.REACT_APP_WEB_SOCKECT_URL, {\n  transports: [\"websocket\"],\n});\n\nexport default class LatestTransactionList extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      from: 0,\n      amount: 10,\n      sortKey: -1,\n      lastFrom: 0,\n      tableName: \"Latest Transactions\",\n      transactionList: [],\n      totalTransaction: 0,\n      isLoader: false,\n      hashAnimation: {},\n      isLoading: true,\n      isData: false,\n      lastPage: false,\n      pageParam: this.props?.match?.params?.pageNo,\n      tableColumns: {\n        // \"Transaction Hash\": {isActive: true, toolTipText: toolTipMessages.hashid},\n        Amount: { isActive: true, toolTipText: toolTipMessages.value },\n        Age: { isActive: true, toolTipText: toolTipMessages.age },\n        Date: { isActive: true, toolTipText: toolTipMessages.date },\n        // \"Date and Time\": {isActive: true},\n        Block: { isActive: true, toolTipText: toolTipMessages.blocknumber },\n        // \"From Address\": {isActive: true, toolTipText: toolTipMessages.from},\n        // \"To Address\": {isActive: true, toolTipText: toolTipMessages.to},\n      },\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.socket.off(\"block-socket\");\n  }\n\n  async componentDidMount() {\n    await this.getListOfTransactions();\n    await this.getTotalTransaction();\n    await this.socketData(socket);\n    // if(this.state.lastPage === false){\n    //   await this.setGetListOfTransactionsInterval();\n    // }\n  }\n\n  // async setGetListOfTransactionsInterval() {\n  //   setInterval(() => {\n  //     this.getListOfTransactions();\n  //   }, 90000);\n  // }\n\n  async getListOfTransactions(from, amount, sortKey) {\n    // debugger;\n    from = from || from === 0 ? from : this.state.from;\n    amount = amount ? amount : this.state.amount;\n    sortKey = sortKey ? sortKey : this.state.sortKey;\n    let urlPath = `?skip=${from}&limit=${amount}&sortKey=${sortKey}`;\n    let [error, listOfTransactions] = await Utils.parseResponse(\n      TransactionService.getLatestTransaction(urlPath, {})\n    );\n    if (error || !listOfTransactions)\n      return this.setState({ isLoader: false, isData: false });\n    listOfTransactions = listOfTransactions.map((item) => {\n      return {\n        ...item,\n        method: Utils.getMethodType(item.input),\n      };\n    });\n    this.setState({\n      transactionList: listOfTransactions,\n      isLoading: false,\n      isData: listOfTransactions.length > 0,\n    });\n  }\n\n  // async increment() {\n  //   setLoading(true);\n  //   let updatedCount = Number(count) + 1;\n  //   setcount(updatedCount);\n  //   window.history.pushState(\"\", \"\", `//${updatedCount}`);\n  //   getLatestaccount(updatedCount);\n  // }\n\n  // async decrement() {\n  //   setLoading(true);\n  //   let updatedCount = Number(count) - 1;\n  //   setcount(updatedCount);\n  //   window.history.pushState(\"\", \"\", `/block-details/${updatedCount}`);\n  //   getLatestaccount(updatedCount);\n  // }\n\n  async getTotalTransaction() {\n    let [error, total] = await Utils.parseResponse(\n      TransactionService.getTotalTransaction()\n    );\n\n    if (error || !total) return;\n    this.setState({ totalTransaction: total });\n  }\n\n  socketData(socket) {\n    socket.on(\"transaction-socket\", (transactionData, error) => {\n      // this.setState({ transactionSocketConnected: true })\n      transactionData[\"method\"] = Utils.getMethodType(transactionData);\n      let transactions = this.state.transactionList;\n\n      let transactionDataExist = transactions.findIndex((item) => {\n        return item.hash === transactionData.hash;\n      });\n\n      if (\n        transactionDataExist === -1 &&\n        this.state.from === 0 &&\n        this.state.lastPage === false\n      ) {\n        if (transactions.length >= 10) transactions.pop();\n        transactions.unshift(transactionData);\n        let hashAnimationClass = {\n          [transactionData.hash]: \"first-block-details\",\n        };\n        this.setState({ hashAnimation: hashAnimationClass });\n        setTimeout(() => {\n          this.setState({ hashAnimation: {} });\n        }, 800);\n        this.setState({\n          transactionList: transactions,\n          isData: transactions.length > 0,\n        });\n\n        if (error) {\n        }\n      }\n    });\n  }\n\n  _handleChange = (event) => {\n    this.setState({ amount: event.target.value });\n    if (this.state.lastPage === true) {\n      this.getListOfTransactions(this.state.lastFrom, event.target.value, 1);\n    } else {\n      this.getListOfTransactions(this.state.from, event.target.value, -1);\n    }\n  };\n\n  // _handleChange = (value, name) => {\n  //     this.setState({ [name]: value })\n\n  // }\n\n  _FirstPage = (event) => {\n    this.setState({ from: 0 });\n    this.setState({ lastPage: false });\n    this.getListOfTransactions(0, this.state.amount, -1);\n  };\n  _LastPage = (event) => {\n    let from = this.state.totalTransaction - this.state.amount;\n    this.setState({ from });\n    this.setState({ sortKey: 1 });\n    this.setState({ lastFrom: 0 });\n    let lastFrom = 0;\n    this.getListOfTransactions(lastFrom, this.state.amount, 1);\n    this.setState({ lastPage: true });\n  };\n  _NextPage = async (event) => {\n    let from = +this.state.amount + +this.state.from;\n    this.setState({ from });\n    if (this.state.lastPage === true) {\n      if (this.state.lastFrom - this.state.amount >= 0) {\n        let from = this.state.lastFrom - this.state.amount;\n        this.setState({ lastFrom: from });\n        this.getListOfTransactions(from, this.state.amount, 1);\n      }\n    } else {\n      if (+this.state.amount + +this.state.from < this.state.totalTransaction) {\n        let from = +this.state.amount + +this.state.from;\n        this.setState({ from });\n        this.setState({ sortKey: -1 });\n        this.getListOfTransactions(from, this.state.amount, -1);\n      }\n    }\n  };\n  _PrevPage = (event) => {\n    let from = this.state.from - this.state.amount;\n    this.setState({ from });\n    if (this.state.lastPage === true) {\n      let from = +this.state.amount + +this.state.lastFrom;\n      this.setState({ lastFrom: from });\n      this.getListOfTransactions(from, this.state.amount, 1);\n    } else {\n      if (this.state.from - this.state.amount >= 0) {\n        let from = this.state.from - this.state.amount;\n        this.setState({ from });\n        this.getListOfTransactions(from, this.state.amount, -1);\n      }\n    }\n  };\n\n  create_data(hash, amount, age, block, from, to, txnfee) {\n    return { hash, amount, age, block, from, to, txnfee };\n  }\n\n  shorten(b, amountL = 10, amountR = 3, stars = 3) {\n    return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\n      b?.length - 3,\n      b?.length\n    )}`;\n  }\n\n  create_url(item, type) {\n    // Thisn is to create URL for table items. changing it can affect whole table.\n    if (!item || !item.length) {\n      return \"...\";\n    }\n    return `#${item}-#{type}`;\n  }\n\n  toggleTableColumns = (columnName) => {\n    const columns = this.state.tableColumns;\n    columns[columnName].isActive = !columns[columnName].isActive;\n    this.setState({ tableColumns: columns });\n  };\n\n  render() {\n    return (\n      <div className={this.props.theme === \"dark\" ? \"dark-theme-bg\" : \"\"}>\n        <TransactionComponent\n          create_data={this.create_data}\n          toggleTableColumns={this.toggleTableColumns}\n          state={this.state}\n          shorten={this.shorten}\n          create_url={this.create_url}\n          _PrevPage={this._PrevPage}\n          _NextPage={this._NextPage}\n          _LastPage={this._LastPage}\n          _FirstPage={this._FirstPage}\n          _handleChange={this._handleChange}\n          theme={this.props.theme}\n        />\n      </div>\n    );\n  }\n}\n","import BaseComponent from \"../baseComponent\";\nimport React from \"react\";\nimport FooterComponent from \"../common/index\";\nimport TokenSearchComponent from \"../explorer/tokensearchBar\";\nimport TransactionComponent from \"./mainComponent\";\nimport { connect } from \"react-redux\";\nimport { dispatchAction } from \"../../utility\"\n\nclass TransactionListMainComponent extends BaseComponent {\n  render() {\n    return (\n      <>\n        <TokenSearchComponent theme={this.props.theme.currentTheme}/>\n        <TransactionComponent theme={this.props.theme.currentTheme}/>\n        <FooterComponent />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { theme: state.theme };\n};\nexport default connect(mapStateToProps, { dispatchAction })(TransactionListMainComponent);","module.exports = __webpack_public_path__ + \"static/media/XDC-Alert.2cb87ec5.svg\";","import Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  dropdownStyle: {\n    background: '#283966 !important',\n    color: \"#ffffff !important\",\n  }\n});\n\nconst PageSelect = styled(Select)`\n  width: 100%;\n  height: ${({ height }) => height}px;\n  margin: 0 10px;\n\n  legend {\n    float: left;\n  }\n`;\nconst PageSelectDark = styled(Select)`\n  width: 100%;\n  height: ${({ height }) => height}px;\n  margin: 0 10px;\n  background-color: #283966;\n  border: solid 1px #3552a5;\n  legend {\n    float: left;\n  }\n`;\nconst PageSelector = ({ value, handler, height = 35, theme }) => {\n  const classes = useStyles();\n  return (\n    <>\n      {theme === \"dark\" ? (\n        <PageSelectDark\n          value={value}\n          onChange={(event) => handler(event)}\n          displayEmpty\n          height={height}\n          MenuProps={{ classes: { paper: classes.dropdownStyle } }}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Select</em>\n          </MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={25}>25</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={75}>75</MenuItem>\n          <MenuItem value={100}>100</MenuItem>\n        </PageSelectDark>\n      ) : (\n        <PageSelect\n          value={value}\n          onChange={(event) => handler(event)}\n          displayEmpty\n          height={height}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Select</em>\n          </MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={25}>25</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n          <MenuItem value={75}>75</MenuItem>\n          <MenuItem value={100}>100</MenuItem>\n        </PageSelect>\n      )}\n    </>\n  );\n};\nexport default PageSelector;\n","import React from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paperWidthSm: {\n        maxWidth: \"320px\",\n        width: \"100%\",\n        borderRadius: \"8px\",\n    }\n}));\nfunction ConfigureColumnsPopOver(props) {\n    const classes = useStyles();\n\n    return (<Popover classes={{paperWidthSm: classes.paperWidthSm}}\n        open={props.isOpen}\n        anchorEl={props.anchorEl}\n        onClose={props.handleOnClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}>\n        <div className={props.theme === \"dark\" ? \"w-320 table-btn-bg-dark\":\"w-320\"}>\n            <div className={props.theme === \"dark\" ? \"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center fc-white\" : \"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center\"}>Configure Columns</div>\n            <div className=\"margin-0 m-b-15 b-t-1\"/>\n            <div className=\"p-l-15 p-r-15\">\n                {\n                    props.tableColumns && Object.keys(props.tableColumns).map(key => {\n                        if (key !== 'Balance')\n                            return (\n                                <div className=\"display-flex justify-content-between p-b-25\">\n                                    <div className=\"display-flex\">\n                                        <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\n                                            <img className=\"tooltipInfoIconConfigDesk\"\n                                                 src=\"/images/info.svg\"></img>\n                                        </Tooltip>\n                                        <div className={props.theme === \"dark\" ? \"p-l-5 fc-white\":\"p-l-5\"}>{key}</div>\n                                    </div>\n                                    <div onClick={() => props.toggleTableColumns(key)}>\n                                        {props.tableColumns[key].isActive ?\n                                            <img className=\"\" src=\"/images/active-switch.svg\"/> :\n                                            <img className=\"\" src=\"/images/inactive-switch.svg\"/>}\n                                    </div>\n                                </div>\n                            )\n                    })\n                }\n            </div>\n        </div>\n    </Popover>)\n}\n\nexport default ConfigureColumnsPopOver;","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paperWidthSm: {\n        maxWidth: \"320px\",\n        width: \"100%\",\n        borderRadius: \"8px\",\n        margin: \"20px\",\n    }\n}));\n\nfunction ConfigureColumnsModal(props) {\n    const classes = useStyles();\n    return (\n        <Dialog\n            className=\"\"\n            classes={{paperWidthSm: classes.paperWidthSm}}\n            open={props.isOpen}\n            onClose={props.onModalClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <div className={props.theme === \"dark\" ? \"w-320 table-btn-bg-dark\":\"w-320\"}>\n                <div className={props.theme ? \"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center fc-white\":\"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center\"}>Configure Columns</div>\n                <div className=\"margin-0 m-b-15 b-t-1\"/>\n                <div className=\"p-l-15 p-r-15\">\n                    {\n                        props.tableColumns && Object.keys(props.tableColumns).map(key => {\n                            if (key !== 'Balance')\n                                return (\n                                    <div className=\"display-flex justify-content-between p-b-25\">\n                                        <div className=\"display-flex\">\n                                            <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\n                                                <img className=\"tooltipInfoIconConfigMob\"\n                                                    src=\"/images/info.svg\"></img>\n                                            </Tooltip>\n                                            <div className={props.theme ? \"p-l-12 fc-white\":\"p-l-12\"}>{key}</div>\n                                        </div>\n                                        <div onClick={() => props.toggleTableColumns(key)}>\n                                            {props.tableColumns[key].isActive ?\n                                                <img className=\"\" src=\"/images/active-switch.svg\" /> :\n                                                <img className=\"\" src=\"/images/inactive-switch.svg\" />}\n                                        </div>\n                                    </div>\n                                )\n                        })\n                    }\n                </div>\n            </div>\n        </Dialog>)\n}\n\nexport default ConfigureColumnsModal;","import React, { useState, useEffect, useRef } from \"react\";\nimport Tippy from \"@tippyjs/react\";\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/themes/light.css\";\nimport { TransactionService } from \"../../services\";\nimport Utils from \"../../utility\";\nimport format from \"format-number\";\nimport { toolTipMessages } from \"../../constants\";\nimport Loader from \"../../assets/loader\";\n\nfunction TransactionDetailTooltip(props) {\n  const [open, setOpen] = useState(false);\n  const [transactionHash, setTransactionHash] = useState(0);\n  const [transactions, setTransactionDetail] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [timeStamp, setTimeStamp] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  let CurrencyValue = window.localStorage.getItem(\"currency\");\n  let menuRef = useRef();\n\n  const openTootltip = () => {\n    if (props.transactionAddress !== undefined) {\n      setTransactionHash(0);\n      setTransactionHash(props.transactionAddress);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", (event) => {\n      if (!menuRef?.current?.contains(event.target)) {\n        setOpen(false);\n      }\n    });\n    if (transactionHash !== 0) {\n      transactionDetail();\n    }\n    if (timeStamp !== 0) {\n      getCoinMarketDetailForTransaction();\n    }\n  }, [transactionHash, timeStamp, CurrencyValue]);\n\n  const transactionDetail = async () => {\n    let urlPath = `${transactionHash}`;\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\n      TransactionService.getTransactionDetailsUsingHash(urlPath, {})\n    );\n    if (error || !transactiondetailusinghash) return;\n    setTransactionDetail(transactiondetailusinghash);\n    setTimeStamp(transactiondetailusinghash?.timestamp);\n    setIsLoading(false);\n  };\n\n  const getCoinMarketDetailForTransaction = async () => {\n    let urlPath =\n      \"?transactionTime=\" + timeStamp + \"&fiatValue=\" + CurrencyValue;\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\n      TransactionService.getCoinMarketDetailForTransaction(urlPath, {})\n    );\n    if (error || !transactiondetailusinghash) return;\n    setPrice(transactiondetailusinghash[0]?.price);\n  };\n\n  const currencySymbol =\n    CurrencyValue === \"INR\" ? \"₹\" : CurrencyValue === \"USD\" ? \"$\" : \"€\";\n  const valueFetch =\n    CurrencyValue === \"INR\" ? price : CurrencyValue === \"USD\" ? price : price;\n  const valueDiv = !valueFetch\n    ? 0\n    : Utils.decimalDivison(valueFetch * transactions.value, 8);\n  const ValueMain = !transactions?.value\n    ? 0\n    : Utils.decimalDivison(transactions?.value, 8);\n  const txfee = !transactions\n    ? 0\n    : Utils.decimalDivison(transactions?.gasPrice * transactions?.gasUsed, 8);\n\n  const transactionFetch =\n    CurrencyValue === \"INR\"\n      ? txfee * price\n      : CurrencyValue === \"USD\"\n      ? txfee * price\n      : txfee * price;\n  const fetchtxn = !transactionFetch\n    ? 0\n    : parseFloat(transactionFetch)?.toFixed(8);\n\n  const gasP = !transactions.gasPrice\n    ? 0\n    : Utils.decimalDivison(transactions.gasPrice, 12);\n\n  return (\n    <div>\n      <Tippy\n        trigger=\"click\"\n        theme={\"light\"}\n        interactive={true}\n        placement={window.innerWidth > 768 ? \"right\" : \"bottom\"}\n        offset={[0, 0]}\n        content={\n          <div ref={menuRef} className={\"transaction-detail-tooltip\"}>\n            {isLoading == true ? (\n              <div className=\"tooltip-loader-div\">\n                <Loader />\n              </div>\n            ) : (\n              <div>\n                <p className=\"fs-14 additional-details\">Additional Details</p>\n                <div className=\"display-flex\">\n                  <Tippy align=\"right\" content={\"Status of the transaction.\"}>\n                    <img\n                      className=\"w-14-px h-14 m-r-10\"\n                      src=\"/images/question_mark_tooltip.svg\"\n                    ></img>\n                  </Tippy>\n                  <div className=\"detail-heading\">Status</div>\n                </div>\n                {transactions && transactions.status == true ? (\n                  <div className=\"success-text\">Success</div>\n                ) : (\n                  <div className=\"failed-text\">Failed</div>\n                )}\n                <hr className=\"line-detail-tooltip\"></hr>\n                <div className=\"display-flex\">\n                  <Tippy align=\"left\" content={toolTipMessages.value}>\n                    <img\n                      className=\"w-14-px h-14 m-r-10\"\n                      src=\"/images/question_mark_tooltip.svg\"\n                    ></img>\n                  </Tippy>{\" \"}\n                  <div className=\"detail-heading\">Value</div>\n                </div>\n                <div className=\"detail-heading-text\">\n                  {ValueMain}&nbsp; XDC ({currencySymbol}\n                  {valueDiv})\n                </div>\n                <hr className=\"line-detail-tooltip\"></hr>\n                <div className=\"display-flex\">\n                  <Tippy align=\"left\" content={toolTipMessages.txnfee}>\n                    <img\n                      className=\"w-14-px h-14 m-r-10\"\n                      src=\"/images/question_mark_tooltip.svg\"\n                    ></img>\n                  </Tippy>{\" \"}\n                  <div className=\"detail-heading\">Txn Free</div>\n                </div>\n                <div className=\"detail-heading-text\">\n                  {txfee == 0\n                    ? 0\n                    : parseFloat(txfee)?.toFixed(8).replace(/0+$/, \"\")}{\" \"}\n                  XDC ({currencySymbol}\n                  {fetchtxn})\n                </div>\n                <hr className=\"line-detail-tooltip\"></hr>\n                <div className=\"display-flex\">\n                  <Tippy align=\"left\" content={toolTipMessages.gasprovided}>\n                    <img\n                      className=\"w-14-px h-14 m-r-10\"\n                      src=\"/images/question_mark_tooltip.svg\"\n                    ></img>\n                  </Tippy>{\" \"}\n                  <div className=\"detail-heading\">Gas Provided</div>\n                </div>\n                <div className=\"detail-heading-text\">\n                  {format({})(transactions.gas)}\n                </div>\n                <hr className=\"line-detail-tooltip\"></hr>\n                <div className=\"display-flex\">\n                  <Tippy align=\"left\" content={toolTipMessages.gasprice}>\n                    <img\n                      className=\"w-14-px h-14 m-r-10\"\n                      src=\"/images/question_mark_tooltip.svg\"\n                    ></img>\n                  </Tippy>{\" \"}\n                  <div className=\"detail-heading\">Avg Transaction Fee</div>\n                </div>\n                <div className=\"detail-heading-text\">\n                  {gasP == 0\n                    ? 0\n                    : parseFloat(gasP)?.toFixed(12).replace(/0+$/, \"\")}\n                </div>\n                <hr className=\"line-detail-tooltip\"></hr>\n                <div className=\"display-flex\">\n                  <Tippy align=\"left\" content={toolTipMessages.nounced}>\n                    <img\n                      className=\"w-14-px h-14 m-r-10\"\n                      src=\"/images/question_mark_tooltip.svg\"\n                    ></img>\n                  </Tippy>{\" \"}\n                  <div className=\"detail-heading\">Nonce</div>\n                </div>\n                <div className=\"detail-heading-text\">{transactions?.nonce}</div>\n                <div className=\"tooltip-link-div\">\n                  <div>\n                    <a\n                      href={\"/transaction-details/\" + transactionHash}\n                      className=\"tooltip-link\"\n                    >\n                      Transaction Details\n                    </a>\n                  </div>\n                  <div>\n                    <a\n                      href={\"/transaction-details/\" + transactionHash}\n                      className=\"tooltip-link\"\n                    >\n                      <img className={\"show-arrow\"} src={\"/images/arrow.svg\"} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        }\n      >\n        <button\n          onClick={() => setOpen(true)}\n          className={open ? \"eye-button\" : \"eye-button-inactive\"}\n        >\n          <img\n            className={\"show-tooltip\"}\n            src={open ? \"/images/show-icon-white.svg\" : \"/images/show-icon.svg\"}\n            onClick={openTootltip}\n          />\n        </button>\n      </Tippy>\n    </div>\n  );\n}\n\nexport default TransactionDetailTooltip;\n","import React from \"react\";\nimport BaseComponent from \"../baseComponent\";\nimport Footer from \"./footerComponent\"\nimport { connect } from \"react-redux\";\nimport { dispatchAction } from \"../../utility\";\nimport { eventConstants } from \"../../constants\"\n\n\n\nclass FooterComponent extends BaseComponent {\n\n    render() {\n        return (\n            <div>\n\n                <Footer\n                    _handleChange={this.props._handleChange}\n                    theme={this.props.theme.currentTheme}\n                />\n\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { theme: state.theme };\n};\n\nexport default connect(mapStateToProps, { dispatchAction })(FooterComponent);"],"sourceRoot":""}