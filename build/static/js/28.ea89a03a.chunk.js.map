{"version":3,"sources":["modules/transaction/transactionComponent.js","modules/transaction/mainComponent.js","modules/transaction/index.js","assets/images/XDC-Alert.svg","modules/common/pageSelector.js","modules/common/configureColumnsPopOver.js","modules/common/configureColumnsModal.js","modules/common/transactionDetailTooltip.jsx","modules/common/index.js"],"names":["useStyles","makeStyles","container","borderRadius","boxShadow","borderBottom","background","containerDark","container1","containerDark1","height","styled","div","TransactionComponent","props","classes","React","useState","anchorEl","setAnchorEl","isColumnsModalOpen","setColumnsModal","isSettingColumnOpen","Boolean","toggleModal","shorten","b","amountL","stars","slice","repeat","length","state","NoDataFoundContainer","useParams","blockNumber","lastPage","transactionList","sort","a","Number","className","class","theme","tableName","onClick","event","currentTarget","src","isOpen","handleOnClose","tableColumns","toggleTableColumns","onModalClose","style","elevation","TableContainer","isData","id","Table","TableHead","TableRow","TableCell","align","Tooltip","placement","title","messages","HASH","alt","isActive","border","paddingLeft","AMOUNT","METHOD","AGE","DATE","BLOCK","FROM","TO","isLoading","TableBody","colspan","map","row","index","currentTime","Date","previousTime","timestamp","ti","utility","timeDiff","amt","decimalDivison","value","Hash","hash","animationClass","hashAnimation","key","name","width","margin","display","alignItems","transactionAddress","href","method","moment","format","from","paddingRight","to","require","Grid","marginTop","amount","handler","_handleChange","item","_FirstPage","_PrevPage","Math","round","totalTransaction","_NextPage","lastFrom","_LastPage","socket","socketClient","process","transports","LatestTransactionList","setState","target","getListOfTransactions","sortKey","columnName","columns","isLoader","pageParam","match","params","pageNo","Amount","toolTipText","toolTipMessages","Age","age","date","Block","blocknumber","this","off","getTotalTransaction","socketData","urlPath","Utils","parseResponse","TransactionService","getLatestTransaction","error","listOfTransactions","getMethodType","input","total","on","transactionData","transactions","findIndex","pop","unshift","hashAnimationClass","setTimeout","block","txnfee","type","create_data","create_url","BaseComponent","TransactionListMainComponent","currentTheme","connect","dispatchAction","module","exports","dropdownStyle","color","PageSelect","Select","PageSelectDark","PageSelector","onChange","displayEmpty","MenuProps","paper","disabled","paperWidthSm","maxWidth","ConfigureColumnsPopOver","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Object","keys","ConfigureColumnsModal","aria-labelledby","TransactionDetailTooltip","setOpen","transactionHash","setTransactionHash","setTransactionDetail","price","setPrice","timeStamp","setTimeStamp","setIsLoading","CurrencyValue","window","localStorage","getItem","menuRef","useRef","useEffect","document","addEventListener","current","contains","transactionDetail","getCoinMarketDetailForTransaction","getTransactionDetailsUsingHash","transactiondetailusinghash","currencySymbol","valueFetch","valueDiv","ValueMain","txfee","gasPrice","gasUsed","transactionFetch","fetchtxn","parseFloat","toFixed","gasP","trigger","interactive","innerWidth","offset","content","ref","status","replace","gasprovided","gas","gasprice","nounced","nonce","undefined","FooterComponent"],"mappings":"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","file":"static/js/28.ea89a03a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../../src/assets/styles/blocksAndTransactionList.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Grid, TableContainer } from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../assets/loader\";\r\nimport ConfigureColumnPopOver from \"../common/configureColumnsPopOver\";\r\nimport ConfigureColumnsModal from \"../common/configureColumnsModal\";\r\nimport moment from \"moment\";\r\nimport { messages } from \"../../constants\";\r\nimport TransactionDetailTooltip from \"../common/transactionDetailTooltip\";\r\nimport format from \"format-number\";\r\nimport utility from \"../../utility\";\r\nimport PageSelector from \"../common/pageSelector\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#fff\",\r\n  },\r\n  containerDark: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"none\",\r\n    background: \"#192a59\",\r\n  },\r\n  container1: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#fff\",\r\n  },\r\n  containerDark1: {\r\n    borderRadius: \"14px\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#192a59\",\r\n  },\r\n  \"@media (min-width:0px) and (max-width: 1240px)\": {\r\n    container: {\r\n      height: \"36.375rem\",\r\n    },\r\n    containerDark: {\r\n      height: \"36.375rem\",\r\n    },\r\n    container1: {\r\n      height: \"23.375rem\",\r\n    },\r\n    containerDark1: {\r\n      height: \"23.375rem\",\r\n    },\r\n  },\r\n});\r\nconst Pagination = styled.div`\r\n  @media (min-width: 640px) {\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport default function TransactionComponent(props) {\r\n  const classes = useStyles();\r\n\r\n  let [anchorEl, setAnchorEl] = React.useState();\r\n  let [isColumnsModalOpen, setColumnsModal] = React.useState(false);\r\n  let isSettingColumnOpen = Boolean(anchorEl);\r\n\r\n  function handleSettingsClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function toggleModal() {\r\n    setColumnsModal(!isColumnsModalOpen);\r\n  }\r\n\r\n  function handleOnClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function shorten(b, amountL = 10, amountR = 3, stars = 3) {\r\n    return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\r\n      b.length - 3,\r\n      b.length\r\n    )}`;\r\n  }\r\n\r\n  const { state } = props;\r\n\r\n  const NoDataFoundContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 100px;\r\n    gap: 10px;\r\n    color: #c6cbcf;\r\n    @media (min-width: 767px) {\r\n      margin: 100px 0 !important;\r\n    }\r\n  `;\r\n\r\n  const tableColumns = { \"Transaction Hash\": { isActive: true } };\r\n  const { blockNumber } = useParams();\r\n\r\n  if (props.state.lastPage === true) {\r\n    props.state.transactionList.sort(function (a, b) {\r\n      return Number(b.blockNumber) - Number(a.blockNumber);\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"responsive-table-width-transactions-list contact-list-tab \">\r\n      <div className=\"display-flex justify-content-between p-t-30 p-b-15\">\r\n        <div class={props.theme === \"dark\" ? \"latestTransactionHeadingDark\" :\"latestTransactionHeading\"}>{state.tableName}</div>\r\n        <div class=\" display-none-mobile display-flex flex-direction-column justify-content-center\">\r\n          <img\r\n            onClick={handleSettingsClick}\r\n            className=\"m-r-9 h-20 w-20-px cursor-pointer\"\r\n            src=\"/images/settings.svg\"\r\n          />\r\n          <ConfigureColumnPopOver\r\n            isOpen={isSettingColumnOpen}\r\n            anchorEl={anchorEl}\r\n            handleOnClose={handleOnClose}\r\n            tableColumns={props.state.tableColumns}\r\n            toggleTableColumns={props.toggleTableColumns}\r\n            theme={props.theme}\r\n          />\r\n        </div>\r\n        <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\r\n          <img\r\n            onClick={toggleModal}\r\n            className=\"p-r-5 h-20 w-20-px cursor-pointer\"\r\n            src=\"/images/settings.svg\"\r\n          />\r\n          <ConfigureColumnsModal\r\n            isOpen={isColumnsModalOpen}\r\n            onModalClose={toggleModal}\r\n            tableColumns={props.state.tableColumns}\r\n            toggleTableColumns={props.toggleTableColumns}\r\n            theme={props.theme}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ borderRadius: \"14px\" }} elevation={0}>\r\n        <TableContainer className={!props.state.isData ? props.theme === \"dark\" ? classes.containerDark1 : classes.container1 : props.theme === \"dark\" ? classes.containerDark : classes.container} id=\"container-table-transaction-list\">\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  className=\"table-head-hash hash-transaction-list-all\"\r\n                  align=\"left\"\r\n                >\r\n                  <span className={props.theme === \"dark\" ? \"tableheaders-hash-dark TableHeadersTransactionDark\" : (\"tableheaders-hash\", \"tableheaders\")}>\r\n                    Hash\r\n                    <Tooltip placement=\"top\" title={messages.HASH}>\r\n                      <img\r\n                        alt=\"question-mark\"\r\n                        src=\"/images/info.svg\"\r\n                        height={\"14px\"}\r\n                        className=\"tooltipInfoIcon\"\r\n                      />\r\n                    </Tooltip>\r\n                  </span>\r\n                </TableCell>\r\n                {props.state.tableColumns[\"Amount\"].isActive && (\r\n                  <TableCell\r\n                    style={{ border: \"none\", paddingLeft: \"2rem\" }}\r\n                    className=\"table-head-all\"\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\r\n                      Amount\r\n                      <Tooltip placement=\"top\" title={messages.AMOUNT}>\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                )}\r\n                {/* {props.state.tableColumns[\"Age\"].isActive && ( */}\r\n                  <TableCell\r\n                    style={{ border: \"none\", paddingLeft: \"2rem\" }}\r\n                    className=\"table-head-all\"\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\r\n                      Method\r\n                      <Tooltip placement=\"top\" title={messages.METHOD}>\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                {/* )} */}\r\n                {props.state.tableColumns[\"Age\"].isActive && (\r\n                  <TableCell\r\n                    style={{ border: \"none\", paddingLeft: \"2rem\" }}\r\n                    className=\"table-head-all\"\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-age-dark\" : (\"tableheaders\", \"tableheaders-age\")}>\r\n                      Age\r\n                      <Tooltip placement=\"top\" title={messages.AGE}>\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                )}\r\n                {props.state.tableColumns[\"Date\"].isActive && (\r\n                  <TableCell\r\n                    style={{ border: \"none\", paddingLeft: \"2rem\" }}\r\n                    className=\"table-head-all\"\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-age-dark\" : (\"tableheaders\", \"tableheaders-age\")}>\r\n                      Date\r\n                      <Tooltip placement=\"top\" title={messages.DATE}>\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                )}\r\n                {props.state.tableColumns[\"Block\"].isActive && (\r\n                  <TableCell\r\n                    style={{ border: \"none\", paddingLeft: \"3rem\" }}\r\n                    className=\"table-head-all\"\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\r\n                      Block\r\n                      <Tooltip placement=\"top\" title={messages.BLOCK}>\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                  </TableCell>\r\n                )}\r\n                <TableCell\r\n                  style={{ border: \"none\", paddingLeft: \"1.25rem\" }}\r\n                  className=\"table-head-all\"\r\n                  align=\"left\"\r\n                >\r\n                  <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\r\n                    From\r\n                    <Tooltip placement=\"top\" title={messages.FROM}>\r\n                      <img\r\n                        alt=\"question-mark\"\r\n                        src=\"/images/info.svg\"\r\n                        height={\"14px\"}\r\n                        className=\"tooltipInfoIcon\"\r\n                      />\r\n                    </Tooltip>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ border: \"none\", paddingLeft: \"1.813rem\" }}\r\n                  className=\"table-head-all\"\r\n                  align=\"left\"\r\n                >\r\n                  <span className={props.theme === \"dark\" ? \"TableHeadersTransactionDark tableheaders-all-dark\" : (\"tableheaders\", \"tableheaders-all\")}>\r\n                    To\r\n                    <Tooltip placement=\"top\" title={messages.TO}>\r\n                      <img\r\n                        alt=\"question-mark\"\r\n                        src=\"/images/info.svg\"\r\n                        height={\"14px\"}\r\n                        className=\"tooltipInfoIcon\"\r\n                      />\r\n                    </Tooltip>\r\n                  </span>\r\n                </TableCell>\r\n                {/* <TableCell\r\n                  style={{ border: \"none\", paddingLeft: \"3rem\" }}\r\n                  className=\"table-head-all\"\r\n                  align=\"left\"\r\n                >\r\n                  <span className={(\"tableheaders\", \"tableheaders-txn-fee\")}>\r\n                    Txn Fee\r\n                  </span>\r\n                </TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            {props.state.isLoading == true ? (\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell style={{ border: \"none\" }} colspan=\"7\">\r\n                    <div className=\"loader-block-list\">\r\n                      <Loader />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            ) : (\r\n              <TableBody>\r\n                {props.state.transactionList &&\r\n                  props.state.transactionList.length >= 1 &&\r\n                  props.state.transactionList.map((row, index) => {\r\n                    const currentTime = new Date();\r\n                    const previousTime = new Date(row.timestamp * 1000);\r\n                    const ti = utility.timeDiff(currentTime, previousTime);\r\n                    // const txFee = (\r\n                    //   (row?.gasUsed * row?.gasPrice) /\r\n                    //   100000000000000000\r\n                    // ).toFixed(9);\r\n                    let amt = utility.decimalDivison(row.value, 8);\r\n                    const Hash = row.hash;\r\n                    let animationClass = props.state.hashAnimation?.[Hash];\r\n\r\n                    return (\r\n                      <TableRow\r\n                        key={row.name}\r\n                        style={\r\n                          index % 2 !== 1\r\n                            ? props.theme === \"dark\" ? { background: \"#192a59\" } : { background: \"#f9f9f9\" }\r\n                            : props.theme === \"dark\" ? { background: \"#192a59\" } : { background: \"white\" }\r\n                        }\r\n                      >\r\n                        <TableCell\r\n                          style={{\r\n                            border: \"none\",\r\n                            width: \"190px\",\r\n                            margin: 0,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <div>\r\n                            <TransactionDetailTooltip\r\n                              transactionAddress={row.hash}\r\n                            />\r\n                          </div>\r\n                          <a\r\n                            className=\"linkTable\"\r\n                            href={\"/transaction-details/\" + row.hash}\r\n                          >\r\n                            {\" \"}\r\n                            <span\r\n                              className={\r\n                                animationClass \r\n                                ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \r\n                                : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {\" \"}\r\n                              {shorten(row.hash)}\r\n                            </span>{\" \"}\r\n                          </a>\r\n                        </TableCell>\r\n                        {props.state.tableColumns[\"Amount\"].isActive && (\r\n                          <TableCell\r\n                            style={{\r\n                              border: \"none\",\r\n                              width: \"100px\",\r\n                              paddingLeft: \"1.813rem\",\r\n                            }}\r\n                            align=\"left\"\r\n                          >\r\n                            <span\r\n                              className={\r\n                                animationClass \r\n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \r\n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {amt}\r\n                            </span>\r\n                          </TableCell>\r\n                        )}\r\n                        <TableCell\r\n                          style={{\r\n                            border: \"none\",\r\n                            width: \"120px\",\r\n                            paddingLeft: \"2.813rem\",\r\n                          }}\r\n                          align=\"left\"\r\n                        >\r\n                          <span\r\n                              className={\r\n                                animationClass \r\n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \r\n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {row.method ? row.method : \"\"}\r\n                            </span>\r\n                        </TableCell>\r\n                        {props.state.tableColumns[\"Age\"].isActive && (\r\n                          <TableCell\r\n                            style={{\r\n                              border: \"none\",\r\n                              width: \"120px\",\r\n                              paddingLeft: \"1.813rem\",\r\n                            }}\r\n                            align=\"left\"\r\n                          >\r\n                            <span\r\n                              className={\r\n                                animationClass \r\n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \r\n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {ti}\r\n                            </span>\r\n                          </TableCell>\r\n                        )}\r\n                        {props.state.tableColumns[\"Date\"].isActive && (\r\n                          <TableCell\r\n                            style={{\r\n                              border: \"none\",\r\n                              width: \"120px\",\r\n                              paddingLeft: \"1.813rem\",\r\n                            }}\r\n                            align=\"left\"\r\n                          >\r\n                            <span\r\n                              className={\r\n                                animationClass \r\n                                ? props.theme === \"dark\" ? `${animationClass} latest-blocks-tabledata-dark` : animationClass \r\n                                : props.theme === \"dark\" ? \"latest-blocks-tabledata-dark\" : \"tabledata\"\r\n                              }\r\n                            >\r\n                              {moment(row.timestamp * 1000).format(\r\n                                \"MMM DD, YYYY h:mm A\"\r\n                              )}\r\n                            </span>\r\n                          </TableCell>\r\n                        )}\r\n                        {props.state.tableColumns[\"Block\"].isActive && (\r\n                          <TableCell\r\n                            style={{\r\n                              border: \"none\",\r\n                              width: \"120px\",\r\n                              paddingLeft: \"2.813rem\",\r\n                            }}\r\n                            align=\"left\"\r\n                          >\r\n                            {\" \"}\r\n                            <a\r\n                              className=\"linkTable\"\r\n                              href={\"/block-details/\" + row.blockNumber}\r\n                            >\r\n                              {\" \"}\r\n                              <span\r\n                               className={\r\n                                animationClass \r\n                                ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \r\n                                : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\r\n                              }\r\n                              >\r\n                                {\" \"}\r\n                                {row.blockNumber}\r\n                              </span>{\" \"}\r\n                            </a>\r\n                          </TableCell>\r\n                        )}\r\n                        <TableCell\r\n                          style={{\r\n                            border: \"none\",\r\n                            width: \"160px\",\r\n                            paddingLeft: \"1rem\",\r\n                          }}\r\n                          align=\"left\"\r\n                        >\r\n                          {\" \"}\r\n                          <a\r\n                            className=\"linkTable\"\r\n                            href={\"/address-details/\" + row.from}\r\n                          >\r\n                            <Tooltip placement=\"top\" title={row.from}>\r\n                              <span\r\n                                className={\r\n                                  animationClass \r\n                                  ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \r\n                                  : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\r\n                                }\r\n                              >\r\n                                {shorten(row.from)}\r\n                              </span>\r\n                            </Tooltip>\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            border: \"none\",\r\n                            width: \"155px\",\r\n                            paddingLeft: \"1.813rem\",\r\n                            paddingRight: \"15px\",\r\n                          }}\r\n                          align=\"left\"\r\n                        >\r\n                          {\" \"}\r\n                          <a\r\n                            className=\"linkTable\"\r\n                            href={\"/address-details/\" + row.to}\r\n                          >\r\n                            <Tooltip placement=\"top\" title={row.to}>\r\n                              <span\r\n                                className={\r\n                                  animationClass \r\n                                  ? props.theme === \"dark\" ? `${animationClass} connect-wallet-dark-xdc-url` : animationClass \r\n                                  : props.theme === \"dark\" ? \"connect-wallet-dark-xdc-url tabledata\" : \"tabledata\"\r\n                                }\r\n                              >\r\n                                {!row.to\r\n                                  ? \"------------------\"\r\n                                  : shorten(row.to)}\r\n                              </span>\r\n                            </Tooltip>\r\n                          </a>\r\n                        </TableCell>\r\n                        {/* <TableCell\r\n                          style={{ border: \"none\", paddingLeft: \"2.813rem\" }}\r\n                          align=\"left\"\r\n                        >\r\n                          <span\r\n                            className={\r\n                              animationClass ? animationClass : \"tabledata\"\r\n                            }\r\n                          >\r\n                            {txFee == 0 ? 0 : txFee} XDC\r\n                          </span>\r\n                        </TableCell> */}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n          {!props.state.isData && !props.state.isLoading ? (\r\n            <NoDataFoundContainer>\r\n              <img\r\n                src={require(\"../../../src/assets/images/XDC-Alert.svg\")}\r\n              ></img>\r\n\r\n              <div>No transactions found</div>\r\n            </NoDataFoundContainer>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </TableContainer>\r\n      </div>\r\n\r\n      <Grid container style={{ marginTop: \"1.75rem\" }} className=\"Pagination\">\r\n        {/* <Pagination> */}\r\n        <Grid className=\"Pagination_1\">\r\n          {!props.state.isLoading && props.state.isData ?\r\n            (<><span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>Show</span>\r\n              <PageSelector value={props.state.amount}\r\n                height={35}\r\n                handler={props._handleChange} \r\n                theme={props.theme}\r\n                />\r\n              <span className={props.theme === \"dark\" ? \"text-dark\" : \"text\"}>Records</span></>) : (\"\")}\r\n        </Grid>\r\n\r\n        <Grid item className=\"Pagination_2\">\r\n          <button\r\n            onClick={(event) => props._FirstPage(event)}\r\n            className={\r\n              props.state.from === 0\r\n                ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark btn-first\" : \"btn disabled btn-first\"\r\n                : props.theme === \"dark\" ? \"btn-latest-block-dark btn-first\" : \"btn btn-first\"\r\n            }\r\n          >\r\n            First\r\n          </button>\r\n          <button\r\n            onClick={(event) => props._PrevPage(event)}\r\n            className={\r\n              props.state.from === 0 \r\n              ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark btn-back\" : \"btn disabled btn-back\" \r\n              : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-back\" : \"btn btn-back\"\r\n            }\r\n          >\r\n            <img className=\"rotate-180\" alt=\"back\" src={\"/images/next.svg\"} />{\" \"}\r\n          </button>\r\n          <button className={props.theme === \"dark\" ? \"btn-latest-block-dark  btn-page\" : \"btn btn-page\"}>\r\n            Page{\" \"}\r\n            {Math.round(state.totalTransaction / state.amount) +\r\n              1 -\r\n              Math.round(\r\n                (state.totalTransaction - state.from) / state.amount\r\n              )}{\" \"}\r\n            of {Math.round(state.totalTransaction / state.amount)}\r\n          </button>\r\n          <button\r\n            onClick={(event) => props._NextPage(event)}\r\n            className={\r\n              props.state.lastPage === false\r\n                ? props.state.from + props.state.amount ===\r\n                  props.state.totalTransaction\r\n                  ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark\" : \"btn disabled\"\r\n                : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-next\" : \"btn btn-next\"\r\n                : props.state.lastFrom - props.state.amount < 0\r\n                ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark\" : \"btn disabled\"\r\n                : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-next\" : \"btn btn-next\"\r\n            }\r\n          >\r\n            <img alt=\"next\" src={\"/images/next.svg\"} />\r\n          </button>\r\n          <button\r\n            onClick={(event) => props._LastPage(event)}\r\n            className={\r\n              props.state.from + props.state.amount ===\r\n                props.state.totalTransaction\r\n                ? props.theme === \"dark\" ? \"btn-latest-block-dark disabled-dark\" : \"btn disabled\"\r\n                : props.theme === \"dark\" ? \"btn-latest-block-dark  btn-last\" : \"btn btn-last\"\r\n            }\r\n          >\r\n            Last\r\n          </button>\r\n        </Grid>\r\n        {/* </Pagination> */}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BaseComponent from \"../baseComponent\";\r\nimport TransactionComponent from \"./transactionComponent\";\r\nimport Utils from \"../../utility\";\r\nimport { TransactionService } from \"../../services\";\r\nimport TokenSearchComponent from \"../explorer/tokensearchBar\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport { MethodFromByte, toolTipMessages } from \"../../constants\";\r\nimport socketClient from \"socket.io-client\";\r\nimport { withRouter } from \"react-router\";\r\nlet socket = socketClient(process.env.REACT_APP_WEB_SOCKECT_URL, {\r\n  transports: [\"websocket\"],\r\n});\r\n\r\nexport default class LatestTransactionList extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      from: 0,\r\n      amount: 10,\r\n      sortKey: -1,\r\n      lastFrom: 0,\r\n      tableName: \"Latest Transactions\",\r\n      transactionList: [],\r\n      totalTransaction: 0,\r\n      isLoader: false,\r\n      hashAnimation: {},\r\n      isLoading: true,\r\n      isData: false,\r\n      lastPage: false,\r\n      pageParam: this.props?.match?.params?.pageNo,\r\n      tableColumns: {\r\n        // \"Transaction Hash\": {isActive: true, toolTipText: toolTipMessages.hashid},\r\n        Amount: { isActive: true, toolTipText: toolTipMessages.value },\r\n        Age: { isActive: true, toolTipText: toolTipMessages.age },\r\n        Date: { isActive: true, toolTipText: toolTipMessages.date },\r\n        // \"Date and Time\": {isActive: true},\r\n        Block: { isActive: true, toolTipText: toolTipMessages.blocknumber },\r\n        // \"From Address\": {isActive: true, toolTipText: toolTipMessages.from},\r\n        // \"To Address\": {isActive: true, toolTipText: toolTipMessages.to},\r\n      },\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.socket.off(\"block-socket\");\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getListOfTransactions();\r\n    await this.getTotalTransaction();\r\n    await this.socketData(socket);\r\n    // if(this.state.lastPage === false){\r\n    //   await this.setGetListOfTransactionsInterval();\r\n    // }\r\n  }\r\n\r\n  // async setGetListOfTransactionsInterval() {\r\n  //   setInterval(() => {\r\n  //     this.getListOfTransactions();\r\n  //   }, 90000);\r\n  // }\r\n\r\n  async getListOfTransactions(from, amount, sortKey) {\r\n    // debugger;\r\n    from = from || from === 0 ? from : this.state.from;\r\n    amount = amount ? amount : this.state.amount;\r\n    sortKey = sortKey ? sortKey : this.state.sortKey;\r\n    let urlPath = `?skip=${from}&limit=${amount}&sortKey=${sortKey}`;\r\n    let [error, listOfTransactions] = await Utils.parseResponse(\r\n      TransactionService.getLatestTransaction(urlPath, {})\r\n    );\r\n    if (error || !listOfTransactions)\r\n      return this.setState({ isLoader: false, isData: false });\r\n    listOfTransactions = listOfTransactions.map((item) => {\r\n      return {\r\n        ...item,\r\n        method: Utils.getMethodType(item.input),\r\n      };\r\n    });\r\n    this.setState({\r\n      transactionList: listOfTransactions,\r\n      isLoading: false,\r\n      isData: listOfTransactions.length > 0,\r\n    });\r\n  }\r\n\r\n  // async increment() {\r\n  //   setLoading(true);\r\n  //   let updatedCount = Number(count) + 1;\r\n  //   setcount(updatedCount);\r\n  //   window.history.pushState(\"\", \"\", `//${updatedCount}`);\r\n  //   getLatestaccount(updatedCount);\r\n  // }\r\n\r\n  // async decrement() {\r\n  //   setLoading(true);\r\n  //   let updatedCount = Number(count) - 1;\r\n  //   setcount(updatedCount);\r\n  //   window.history.pushState(\"\", \"\", `/block-details/${updatedCount}`);\r\n  //   getLatestaccount(updatedCount);\r\n  // }\r\n\r\n  async getTotalTransaction() {\r\n    let [error, total] = await Utils.parseResponse(\r\n      TransactionService.getTotalTransaction()\r\n    );\r\n\r\n    if (error || !total) return;\r\n    this.setState({ totalTransaction: total });\r\n  }\r\n\r\n  socketData(socket) {\r\n    socket.on(\"transaction-socket\", (transactionData, error) => {\r\n      // this.setState({ transactionSocketConnected: true })\r\n      transactionData[\"method\"] = Utils.getMethodType(transactionData);\r\n      let transactions = this.state.transactionList;\r\n\r\n      let transactionDataExist = transactions.findIndex((item) => {\r\n        return item.hash === transactionData.hash;\r\n      });\r\n\r\n      if (\r\n        transactionDataExist === -1 &&\r\n        this.state.from === 0 &&\r\n        this.state.lastPage === false\r\n      ) {\r\n        if (transactions.length >= 10) transactions.pop();\r\n        transactions.unshift(transactionData);\r\n        let hashAnimationClass = {\r\n          [transactionData.hash]: \"first-block-details\",\r\n        };\r\n        this.setState({ hashAnimation: hashAnimationClass });\r\n        setTimeout(() => {\r\n          this.setState({ hashAnimation: {} });\r\n        }, 800);\r\n        this.setState({\r\n          transactionList: transactions,\r\n          isData: transactions.length > 0,\r\n        });\r\n\r\n        if (error) {\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _handleChange = (event) => {\r\n    this.setState({ amount: event.target.value });\r\n    if (this.state.lastPage === true) {\r\n      this.getListOfTransactions(this.state.lastFrom, event.target.value, 1);\r\n    } else {\r\n      this.getListOfTransactions(this.state.from, event.target.value, -1);\r\n    }\r\n  };\r\n\r\n  // _handleChange = (value, name) => {\r\n  //     this.setState({ [name]: value })\r\n\r\n  // }\r\n\r\n  _FirstPage = (event) => {\r\n    this.setState({ from: 0 });\r\n    this.setState({ lastPage: false });\r\n    this.getListOfTransactions(0, this.state.amount, -1);\r\n  };\r\n  _LastPage = (event) => {\r\n    let from = this.state.totalTransaction - this.state.amount;\r\n    this.setState({ from });\r\n    this.setState({ sortKey: 1 });\r\n    this.setState({ lastFrom: 0 });\r\n    let lastFrom = 0;\r\n    this.getListOfTransactions(lastFrom, this.state.amount, 1);\r\n    this.setState({ lastPage: true });\r\n  };\r\n  _NextPage = async (event) => {\r\n    let from = +this.state.amount + +this.state.from;\r\n    this.setState({ from });\r\n    if (this.state.lastPage === true) {\r\n      if (this.state.lastFrom - this.state.amount >= 0) {\r\n        let from = this.state.lastFrom - this.state.amount;\r\n        this.setState({ lastFrom: from });\r\n        this.getListOfTransactions(from, this.state.amount, 1);\r\n      }\r\n    } else {\r\n      if (+this.state.amount + +this.state.from < this.state.totalTransaction) {\r\n        let from = +this.state.amount + +this.state.from;\r\n        this.setState({ from });\r\n        this.setState({ sortKey: -1 });\r\n        this.getListOfTransactions(from, this.state.amount, -1);\r\n      }\r\n    }\r\n  };\r\n  _PrevPage = (event) => {\r\n    let from = this.state.from - this.state.amount;\r\n    this.setState({ from });\r\n    if (this.state.lastPage === true) {\r\n      let from = +this.state.amount + +this.state.lastFrom;\r\n      this.setState({ lastFrom: from });\r\n      this.getListOfTransactions(from, this.state.amount, 1);\r\n    } else {\r\n      if (this.state.from - this.state.amount >= 0) {\r\n        let from = this.state.from - this.state.amount;\r\n        this.setState({ from });\r\n        this.getListOfTransactions(from, this.state.amount, -1);\r\n      }\r\n    }\r\n  };\r\n\r\n  create_data(hash, amount, age, block, from, to, txnfee) {\r\n    return { hash, amount, age, block, from, to, txnfee };\r\n  }\r\n\r\n  shorten(b, amountL = 10, amountR = 3, stars = 3) {\r\n    return `${b?.slice(0, amountL)}${\".\".repeat(stars)}${b?.slice(\r\n      b?.length - 3,\r\n      b?.length\r\n    )}`;\r\n  }\r\n\r\n  create_url(item, type) {\r\n    // Thisn is to create URL for table items. changing it can affect whole table.\r\n    if (!item || !item.length) {\r\n      return \"...\";\r\n    }\r\n    return `#${item}-#{type}`;\r\n  }\r\n\r\n  toggleTableColumns = (columnName) => {\r\n    const columns = this.state.tableColumns;\r\n    columns[columnName].isActive = !columns[columnName].isActive;\r\n    this.setState({ tableColumns: columns });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.theme === \"dark\" ? \"dark-theme-bg\" : \"\"}>\r\n        <TransactionComponent\r\n          create_data={this.create_data}\r\n          toggleTableColumns={this.toggleTableColumns}\r\n          state={this.state}\r\n          shorten={this.shorten}\r\n          create_url={this.create_url}\r\n          _PrevPage={this._PrevPage}\r\n          _NextPage={this._NextPage}\r\n          _LastPage={this._LastPage}\r\n          _FirstPage={this._FirstPage}\r\n          _handleChange={this._handleChange}\r\n          theme={this.props.theme}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import BaseComponent from \"../baseComponent\";\r\nimport React from \"react\";\r\nimport FooterComponent from \"../common/index\";\r\nimport TokenSearchComponent from \"../explorer/tokensearchBar\";\r\nimport TransactionComponent from \"./mainComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchAction } from \"../../utility\"\r\n\r\nclass TransactionListMainComponent extends BaseComponent {\r\n  render() {\r\n    return (\r\n      <>\r\n        <TokenSearchComponent theme={this.props.theme.currentTheme}/>\r\n        <TransactionComponent theme={this.props.theme.currentTheme}/>\r\n        <FooterComponent />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { theme: state.theme };\r\n};\r\nexport default connect(mapStateToProps, { dispatchAction })(TransactionListMainComponent);","module.exports = __webpack_public_path__ + \"static/media/XDC-Alert.86b69beb.svg\";","import Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  dropdownStyle: {\r\n    background: '#283966 !important',\r\n    color: \"#ffffff !important\",\r\n  }\r\n});\r\n\r\nconst PageSelect = styled(Select)`\r\n  width: 100%;\r\n  height: ${({ height }) => height}px;\r\n  margin: 0 10px;\r\n\r\n  legend {\r\n    float: left;\r\n  }\r\n`;\r\nconst PageSelectDark = styled(Select)`\r\n  width: 100%;\r\n  height: ${({ height }) => height}px;\r\n  margin: 0 10px;\r\n  background-color: #283966;\r\n  border: solid 1px #3552a5;\r\n  legend {\r\n    float: left;\r\n  }\r\n`;\r\nconst PageSelector = ({ value, handler, height = 35, theme }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {theme === \"dark\" ? (\r\n        <PageSelectDark\r\n          value={value}\r\n          onChange={(event) => handler(event)}\r\n          displayEmpty\r\n          height={height}\r\n          MenuProps={{ classes: { paper: classes.dropdownStyle } }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Select</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={25}>25</MenuItem>\r\n          <MenuItem value={50}>50</MenuItem>\r\n          <MenuItem value={75}>75</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n        </PageSelectDark>\r\n      ) : (\r\n        <PageSelect\r\n          value={value}\r\n          onChange={(event) => handler(event)}\r\n          displayEmpty\r\n          height={height}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Select</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={25}>25</MenuItem>\r\n          <MenuItem value={50}>50</MenuItem>\r\n          <MenuItem value={75}>75</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n        </PageSelect>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default PageSelector;\r\n","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paperWidthSm: {\r\n        maxWidth: \"320px\",\r\n        width: \"100%\",\r\n        borderRadius: \"8px\",\r\n    }\r\n}));\r\nfunction ConfigureColumnsPopOver(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<Popover classes={{paperWidthSm: classes.paperWidthSm}}\r\n        open={props.isOpen}\r\n        anchorEl={props.anchorEl}\r\n        onClose={props.handleOnClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}>\r\n        <div className={props.theme === \"dark\" ? \"w-320 table-btn-bg-dark\":\"w-320\"}>\r\n            <div className={props.theme === \"dark\" ? \"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center fc-white\" : \"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center\"}>Configure Columns</div>\r\n            <div className=\"margin-0 m-b-15 b-t-1\"/>\r\n            <div className=\"p-l-15 p-r-15\">\r\n                {\r\n                    props.tableColumns && Object.keys(props.tableColumns).map(key => {\r\n                        if (key !== 'Balance')\r\n                            return (\r\n                                <div className=\"display-flex justify-content-between p-b-25\">\r\n                                    <div className=\"display-flex\">\r\n                                        <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\r\n                                            <img className=\"tooltipInfoIconConfigDesk\"\r\n                                                 src=\"/images/info.svg\"></img>\r\n                                        </Tooltip>\r\n                                        <div className={props.theme === \"dark\" ? \"p-l-5 fc-white\":\"p-l-5\"}>{key}</div>\r\n                                    </div>\r\n                                    <div onClick={() => props.toggleTableColumns(key)}>\r\n                                        {props.tableColumns[key].isActive ?\r\n                                            <img className=\"\" src=\"/images/active-switch.svg\"/> :\r\n                                            <img className=\"\" src=\"/images/inactive-switch.svg\"/>}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    </Popover>)\r\n}\r\n\r\nexport default ConfigureColumnsPopOver;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paperWidthSm: {\r\n        maxWidth: \"320px\",\r\n        width: \"100%\",\r\n        borderRadius: \"8px\",\r\n        margin: \"20px\",\r\n    }\r\n}));\r\n\r\nfunction ConfigureColumnsModal(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog\r\n            className=\"\"\r\n            classes={{paperWidthSm: classes.paperWidthSm}}\r\n            open={props.isOpen}\r\n            onClose={props.onModalClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <div className={props.theme === \"dark\" ? \"w-320 table-btn-bg-dark\":\"w-320\"}>\r\n                <div className={props.theme ? \"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center fc-white\":\"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center\"}>Configure Columns</div>\r\n                <div className=\"margin-0 m-b-15 b-t-1\"/>\r\n                <div className=\"p-l-15 p-r-15\">\r\n                    {\r\n                        props.tableColumns && Object.keys(props.tableColumns).map(key => {\r\n                            if (key !== 'Balance')\r\n                                return (\r\n                                    <div className=\"display-flex justify-content-between p-b-25\">\r\n                                        <div className=\"display-flex\">\r\n                                            <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\r\n                                                <img className=\"tooltipInfoIconConfigMob\"\r\n                                                    src=\"/images/info.svg\"></img>\r\n                                            </Tooltip>\r\n                                            <div className={props.theme ? \"p-l-12 fc-white\":\"p-l-12\"}>{key}</div>\r\n                                        </div>\r\n                                        <div onClick={() => props.toggleTableColumns(key)}>\r\n                                            {props.tableColumns[key].isActive ?\r\n                                                <img className=\"\" src=\"/images/active-switch.svg\" /> :\r\n                                                <img className=\"\" src=\"/images/inactive-switch.svg\" />}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Dialog>)\r\n}\r\n\r\nexport default ConfigureColumnsModal;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport \"tippy.js/themes/light.css\";\r\nimport { TransactionService } from \"../../services\";\r\nimport Utils from \"../../utility\";\r\nimport format from \"format-number\";\r\nimport { toolTipMessages } from \"../../constants\";\r\nimport Loader from \"../../assets/loader\";\r\n\r\nfunction TransactionDetailTooltip(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [transactionHash, setTransactionHash] = useState(0);\r\n  const [transactions, setTransactionDetail] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [timeStamp, setTimeStamp] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  let CurrencyValue = window.localStorage.getItem(\"currency\");\r\n  let menuRef = useRef();\r\n\r\n  const openTootltip = () => {\r\n    if (props.transactionAddress !== undefined) {\r\n      setTransactionHash(0);\r\n      setTransactionHash(props.transactionAddress);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", (event) => {\r\n      if (!menuRef?.current?.contains(event.target)) {\r\n        setOpen(false);\r\n      }\r\n    });\r\n    if (transactionHash !== 0) {\r\n      transactionDetail();\r\n    }\r\n    if (timeStamp !== 0) {\r\n      getCoinMarketDetailForTransaction();\r\n    }\r\n  }, [transactionHash, timeStamp, CurrencyValue]);\r\n\r\n  const transactionDetail = async () => {\r\n    let urlPath = `${transactionHash}`;\r\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\r\n      TransactionService.getTransactionDetailsUsingHash(urlPath, {})\r\n    );\r\n    if (error || !transactiondetailusinghash) return;\r\n    setTransactionDetail(transactiondetailusinghash);\r\n    setTimeStamp(transactiondetailusinghash?.timestamp);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const getCoinMarketDetailForTransaction = async () => {\r\n    let urlPath =\r\n      \"?transactionTime=\" + timeStamp + \"&fiatValue=\" + CurrencyValue;\r\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\r\n      TransactionService.getCoinMarketDetailForTransaction(urlPath, {})\r\n    );\r\n    if (error || !transactiondetailusinghash) return;\r\n    setPrice(transactiondetailusinghash[0]?.price);\r\n  };\r\n\r\n  const currencySymbol =\r\n    CurrencyValue === \"INR\" ? \"₹\" : CurrencyValue === \"USD\" ? \"$\" : \"€\";\r\n  const valueFetch =\r\n    CurrencyValue === \"INR\" ? price : CurrencyValue === \"USD\" ? price : price;\r\n  const valueDiv = !valueFetch\r\n    ? 0\r\n    : Utils.decimalDivison(valueFetch * transactions.value, 8);\r\n  const ValueMain = !transactions?.value\r\n    ? 0\r\n    : Utils.decimalDivison(transactions?.value, 8);\r\n  const txfee = !transactions\r\n    ? 0\r\n    : Utils.decimalDivison(transactions?.gasPrice * transactions?.gasUsed, 8);\r\n\r\n  const transactionFetch =\r\n    CurrencyValue === \"INR\"\r\n      ? txfee * price\r\n      : CurrencyValue === \"USD\"\r\n      ? txfee * price\r\n      : txfee * price;\r\n  const fetchtxn = !transactionFetch\r\n    ? 0\r\n    : parseFloat(transactionFetch)?.toFixed(8);\r\n\r\n  const gasP = !transactions.gasPrice\r\n    ? 0\r\n    : Utils.decimalDivison(transactions.gasPrice, 12);\r\n\r\n  return (\r\n    <div>\r\n      <Tippy\r\n        trigger=\"click\"\r\n        theme={\"light\"}\r\n        interactive={true}\r\n        placement={window.innerWidth > 768 ? \"right\" : \"bottom\"}\r\n        offset={[0, 0]}\r\n        content={\r\n          <div ref={menuRef} className={\"transaction-detail-tooltip\"}>\r\n            {isLoading == true ? (\r\n              <div className=\"tooltip-loader-div\">\r\n                <Loader />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <p className=\"fs-14 additional-details\">Additional Details</p>\r\n                <div className=\"display-flex\">\r\n                  <Tippy align=\"right\" content={\"Status of the transaction.\"}>\r\n                    <img\r\n                      className=\"w-14-px h-14 m-r-10\"\r\n                      src=\"/images/question_mark_tooltip.svg\"\r\n                    ></img>\r\n                  </Tippy>\r\n                  <div className=\"detail-heading\">Status</div>\r\n                </div>\r\n                {transactions && transactions.status == true ? (\r\n                  <div className=\"success-text\">Success</div>\r\n                ) : (\r\n                  <div className=\"failed-text\">Failed</div>\r\n                )}\r\n                <hr className=\"line-detail-tooltip\"></hr>\r\n                <div className=\"display-flex\">\r\n                  <Tippy align=\"left\" content={toolTipMessages.value}>\r\n                    <img\r\n                      className=\"w-14-px h-14 m-r-10\"\r\n                      src=\"/images/question_mark_tooltip.svg\"\r\n                    ></img>\r\n                  </Tippy>{\" \"}\r\n                  <div className=\"detail-heading\">Value</div>\r\n                </div>\r\n                <div className=\"detail-heading-text\">\r\n                  {ValueMain}&nbsp; XDC ({currencySymbol}\r\n                  {valueDiv})\r\n                </div>\r\n                <hr className=\"line-detail-tooltip\"></hr>\r\n                <div className=\"display-flex\">\r\n                  <Tippy align=\"left\" content={toolTipMessages.txnfee}>\r\n                    <img\r\n                      className=\"w-14-px h-14 m-r-10\"\r\n                      src=\"/images/question_mark_tooltip.svg\"\r\n                    ></img>\r\n                  </Tippy>{\" \"}\r\n                  <div className=\"detail-heading\">Txn Free</div>\r\n                </div>\r\n                <div className=\"detail-heading-text\">\r\n                  {txfee == 0\r\n                    ? 0\r\n                    : parseFloat(txfee)?.toFixed(8).replace(/0+$/, \"\")}{\" \"}\r\n                  XDC ({currencySymbol}\r\n                  {fetchtxn})\r\n                </div>\r\n                <hr className=\"line-detail-tooltip\"></hr>\r\n                <div className=\"display-flex\">\r\n                  <Tippy align=\"left\" content={toolTipMessages.gasprovided}>\r\n                    <img\r\n                      className=\"w-14-px h-14 m-r-10\"\r\n                      src=\"/images/question_mark_tooltip.svg\"\r\n                    ></img>\r\n                  </Tippy>{\" \"}\r\n                  <div className=\"detail-heading\">Gas Provided</div>\r\n                </div>\r\n                <div className=\"detail-heading-text\">\r\n                  {format({})(transactions.gas)}\r\n                </div>\r\n                <hr className=\"line-detail-tooltip\"></hr>\r\n                <div className=\"display-flex\">\r\n                  <Tippy align=\"left\" content={toolTipMessages.gasprice}>\r\n                    <img\r\n                      className=\"w-14-px h-14 m-r-10\"\r\n                      src=\"/images/question_mark_tooltip.svg\"\r\n                    ></img>\r\n                  </Tippy>{\" \"}\r\n                  <div className=\"detail-heading\">Avg Transaction Fee</div>\r\n                </div>\r\n                <div className=\"detail-heading-text\">\r\n                  {gasP == 0\r\n                    ? 0\r\n                    : parseFloat(gasP)?.toFixed(12).replace(/0+$/, \"\")}\r\n                </div>\r\n                <hr className=\"line-detail-tooltip\"></hr>\r\n                <div className=\"display-flex\">\r\n                  <Tippy align=\"left\" content={toolTipMessages.nounced}>\r\n                    <img\r\n                      className=\"w-14-px h-14 m-r-10\"\r\n                      src=\"/images/question_mark_tooltip.svg\"\r\n                    ></img>\r\n                  </Tippy>{\" \"}\r\n                  <div className=\"detail-heading\">Nonce</div>\r\n                </div>\r\n                <div className=\"detail-heading-text\">{transactions?.nonce}</div>\r\n                <div className=\"tooltip-link-div\">\r\n                  <div>\r\n                    <a\r\n                      href={\"/transaction-details/\" + transactionHash}\r\n                      className=\"tooltip-link\"\r\n                    >\r\n                      Transaction Details\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <a\r\n                      href={\"/transaction-details/\" + transactionHash}\r\n                      className=\"tooltip-link\"\r\n                    >\r\n                      <img className={\"show-arrow\"} src={\"/images/arrow.svg\"} />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        }\r\n      >\r\n        <button\r\n          onClick={() => setOpen(true)}\r\n          className={open ? \"eye-button\" : \"eye-button-inactive\"}\r\n        >\r\n          <img\r\n            className={\"show-tooltip\"}\r\n            src={open ? \"/images/show-icon-white.svg\" : \"/images/show-icon.svg\"}\r\n            onClick={openTootltip}\r\n          />\r\n        </button>\r\n      </Tippy>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionDetailTooltip;\r\n","import React from \"react\";\r\nimport BaseComponent from \"../baseComponent\";\r\nimport Footer from \"./footerComponent\"\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchAction } from \"../../utility\";\r\nimport { eventConstants } from \"../../constants\"\r\n\r\n\r\n\r\nclass FooterComponent extends BaseComponent {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Footer\r\n                    _handleChange={this.props._handleChange}\r\n                    theme={this.props.theme.currentTheme}\r\n                />\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { theme: state.theme };\r\n};\r\n\r\nexport default connect(mapStateToProps, { dispatchAction })(FooterComponent);"],"sourceRoot":""}