{"version":3,"sources":["../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","modules/common/dialog/privateAddressTag.js","assets/images/label.svg","modules/common/dialog/privateNote.js","modules/Transfertransactiondetails/transferTransactionDetails.js","services/token.js"],"names":["DialogTitle","React","props","ref","children","classes","className","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","root","Typography","component","variant","withStyles","margin","padding","flex","name","useStyles","makeStyles","theme","add","backgroundColor","marginLeft","value","width","cross","marginTop","fontWeight","dialog","height","borderRadius","buttons","input","border","marginBottom","outline","inputDark","color","addbtn","cnlbtn","cnlbtnDark","subCategory","fontfamily","fontsize","fontweight","forgotpass","createaccount","icon","xdc","heading","dialogBox","position","top","error1","error2","lastContainer","maxWidth","marginRight","lastContainerDark","lastContainerText","fontSize","fontFamily","lineHeight","FormDialog","open","onClose","useState","privateAddress","setPrivateAddress","errorEmptyField","setErrorEmptyField","error","setError","errorTag","setErrorTag","a","tags","length","genericConstants","ENTER_REQUIRED_FIELD","slice","data","userId","sessionManager","getDataFromCookies","address","tagName","modifiedOn","Date","now","taggedAddress","localStorage","getItem","cookiesConstants","USER_TAGGED_ADDRESS","JSON","parse","existingTagsIndex","find","item","index","push","setItem","stringify","utility","apiSuccessToast","useEffect","fromAddr","toAddr","setInput","Dialog","paperWidthSm","aria-labelledby","id","DialogContent","DialogContentText","onChange","e","target","readOnly","DialogActions","onClick","module","exports","btn","textAlign","background","textarea","resize","notifyLabel","transactionsHash","setTransactionsHash","privateNote","setPrivateNote","privateNoteError","setPrivateNoteError","trxLable","transactionHash","transactionLabel","USER_TRASACTION_LABELS","existingIndex","getListOfTxnLabel","getTotalCountTxnLabel","hash","pvtNote","type","style","paddingLeft","paddingRight","rowDiv","alignItems","justifyContent","mainContainer","mainContainerDark","connect","state","dispatchAction","_handleChange","window","innerWidth","decimalValue","CurrencyValue","useParams","transactions","setTransactions","latestBlocks","setLatestBlocks","coinmarketcap","setCoinmarketcap","amount","setAmount","copiedText","setCopiedText","isLoading","setLoading","setTokenTransferValue","isSeeMore","setSeeMore","transferTransactionDetail","getLatestBlocks","getcoinMarketCapData","urlPath","Utils","parseResponse","coinMarketService","getCoinMarketData","coinMarket","BlockService","getLatestBlock","latestBlock","number","TokenData","getTransferTransactionDetailsUsingHash","transactiondetailusinghash","setFromAddress","from","setToAddress","to","undefined","decimals","Math","pow","parseInt","gasprovided","currencySymbol","valueFetch","price","transactionFetch","transactionFeeINR","transactionFeeUSD","transactionFeeEUR","txfee","toFixed","gasPrice","decimalDivison","gasUsed","gasP","avgTxnFeeConverted","avgTxnFeeFetch","parseFloat","avgTxnFeeFetch1","toString","split","avgTxnFeeFetch2","userInfo","dialogPvtTagIsOpen","setDialogPvtTagIsOpen","dialogValue","setDailogValue","dialogValue2","setDailogValue2","dialogPvtTagIsOpen2","setDialogPvtTagIsOpen2","dialogPvtNoteIsOpen","setDialogPvtNoteIsOpen","loginDialogIsOpen","setLoginDialogIsOpen","fromAddress","toAddress","openDialogPvtTag","scrollTo","closeDialogPvtTag","openDialogPvtTag2","closeDialogPvtTag2","privateNoteUsingHash","existingTransactionLabel","addrTagFrom","addrTagTo","tagValueFrom","filter","obj","sub","tagValueTo","pvtNotehash","pvtNoteLocal","pvtNoteValue","currentTheme","Container","Heading","Div","status","StatusContainer","StatusContainerInside","StatusImgContainer","StatusImg","src","StatusTextSuccess","StatusTextFailed","TxnDetailsRightContainer","TxnDetailsRightTopContainer","align","title","ImageView","Hash","DetailsMiddleContainer","isTextArea","ContentHash","text","onCopy","placement","TxnDetailsRightBottomContainer","DetailsContainer","transactionValue","timestamp","isNaN","Number","moment","utc","format","Content","href","blockNumber","BlockConfirmation","DivMiddleContainer","DivMiddle","display","TabTag","Tag","AddTagContainer","ImgAddTag","AddTagtext","MobileDesktopTag","DivCircle","ImgNextArrow","contractAddress","Div__","Spacing","MiddleContainer","TokenTransferredMiddleContainer","TokenTransferredContent","BlackText","GreyText","BlueText","ImgProfileIcon","SpacingTxnAction","ContainerTxnAction","MainContainerTxnAction","TxnActionNextRow","size","ImgNextRed","Gap1","Gap2","SpacingInteractedWith","ContainerInteractedWith","MainContainerInteractedWith","ContentInteractedWith","ImgInteracted","ImgCopyGrey","InteractedWithNextRow","ImgNewLine","gas","nonce","SpacingInputData","ImageViewInputData","HashInputData","MiddleContainerInputData","SeeMoreContainer","SeeMoreText","ImgSeeLess","ImgSeeMore","SpacingPrivateNode","MiddleContainerPrivateNote","AddLabel","AddLabelText","require","PrivateText","dataHashOrAddress","cursor","event","currency","styled","div","p","span","img","getHeaders","httpConstants","CONTENT_TYPE","APPLICATION_JSON","process","url","httpService","METHOD_TYPE","GET","then","response","success","responseCode","responseData","Promise","resolve","reject","catch","err","API_END_POINT","GET_TOKEN_LIST","POST","path","ceil","pageNum","perpage","searchkey","addr","searchValue","startDate","CoinMarketExchangeForToken","getTokenLists","getTotalToken","getSomeDaysHolders","getTokenSearch","getHolderDetailsUsingAddressforToken","getTotalTransferTransactionsForToken","getListOfTransferTransactionsForToken","getListOfHoldersForToken","getListOfTokenForAddress","getTokenTransactions"],"mappings":"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","file":"static/js/29.59582271.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport { UserService } from \"../../../services\";\r\nimport { history } from \"../../../managers/history\";\r\nimport utility from \"../../../utility\";\r\nimport { sessionManager } from \"../../../managers/sessionManager\";\r\nimport { genericConstants, cookiesConstants } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  add: {\r\n    backgroundColor: \"#2149b9\",\r\n    marginLeft: \"90px\",\r\n  },\r\n  value: {\r\n    width: \"400px !important\",\r\n  },\r\n  cross: {\r\n    marginTop: \"25px\",\r\n    marginLeft: \"40px\",\r\n    fontWeight: \"500\",\r\n  },\r\n  dialog: {\r\n    marginLeft: \"10%\",\r\n    marginTop: \"2px\",\r\n    width: \"80% !important\",\r\n    height: \"70% !important\",\r\n    borderRadius: \"50px !important\",\r\n  },\r\n  buttons: {\r\n    padding: \"1px 35px 15px 0px\",\r\n  },\r\n  input: {\r\n    width: \"503px\",\r\n    height: \"15px\",\r\n    border: \"solid 1px #c6c8ce\",\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"7px\",\r\n    padding: \"20px\",\r\n    marginBottom: \"21px\",\r\n    outline: \"none\"\r\n  },\r\n  inputDark: {\r\n    width: \"503px\",\r\n    height: \"15px\",\r\n    border: \"solid 1px #3552a5\",\r\n    backgroundColor: \"#091b4e\",\r\n    borderRadius: \"7px\",\r\n    padding: \"20px\",\r\n    marginBottom: \"21px\",\r\n    outline: \"none\",\r\n    color: \"#fff\"\r\n  },\r\n  addbtn: {\r\n    width: \"110px\",\r\n    height: \"34px\",\r\n    margin: \"14px -8px 15px 2px\",\r\n    padding: \"6px 19px 3px 20px\",\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#3763dd\",\r\n    color: \"white\",\r\n  },\r\n  cnlbtn: {\r\n    width: \"94px\",\r\n    height: \"34px\",\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#9fa9ba\",\r\n    color: \"white\",\r\n\r\n    margin: \"14px 8px 15px 2px\",\r\n    padding: \"6px 19px 3px 20px\",\r\n  },\r\n  cnlbtnDark: {\r\n    width: \"94px\",\r\n    height: \"34px\",\r\n    borderRadius: \"6px\",\r\n    backgroundColor: \"#192a59\",\r\n    color: \"white\",\r\n    margin: \"14px 8px 15px 2px\",\r\n    padding: \"6px 19px 3px 20px\",\r\n    border: \"solid 1px #3552a5\",\r\n  },\r\n  subCategory: {\r\n    marginTop: \"-12px\",\r\n    marginBottom: \"2px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n    fontweight: \"500\",\r\n    border: \"none !important\",\r\n    color: \"#2a2a2a\"\r\n  },\r\n  forgotpass: {\r\n    color: \"#2149b9\",\r\n    marginLeft: \"123px\",\r\n  },\r\n  createaccount: {\r\n    color: \"#2149b9\",\r\n    marginLeft: \"32px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n  },\r\n  icon: {\r\n    marginLeft: \"-30px\",\r\n  },\r\n  xdc: {\r\n    color: \"#2a2a2a\",\r\n    marginLeft: \"30px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"5px\",\r\n  },\r\n  heading: {\r\n    marginTop: \"7px\",\r\n    marginBottom: \"7px\",\r\n    fontfamily: \"Inter\",\r\n    fontweight: \"600\",\r\n    color: \"#2a2a2a\"\r\n  },\r\n  dialogBox: {\r\n    width: \"553px\",\r\n    position: \"absolute\",\r\n    top: \"111px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  error1: {\r\n    color: \"red\",\r\n    marginLeft: \"2px\",\r\n  },\r\n  error2: {\r\n    color: \"red\",\r\n    marginLeft: \"24px\",\r\n    marginTop: \"-14px\",\r\n  },\r\n  lastContainer: {\r\n    maxWidth: \"534px\",\r\n    width: \"100%\",\r\n    padding: \"11px 12px 10px 13px\",\r\n    borderRadius: \"6px\",\r\n    backgroundColor: \"#fff3f3\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  lastContainerDark: {\r\n    maxWidth: \"534px\",\r\n    width: \"100%\",\r\n    padding: \"11px 12px 10px 13px\",\r\n    borderRadius: \"6px\",\r\n    backgroundColor: \"#C8C8C8\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  lastContainerText: {\r\n    fontSize: \"12px\",\r\n    fontFamily: \"Inter !important\",\r\n    color: \"#ff0202\",\r\n\r\n    lineHeight: \"1.58\",\r\n  },\r\n  \r\n  \"@media (max-width: 767px)\": {\r\n    heading: {\r\n      fontSize: \"16px\",\r\n    },\r\n    dialogBox: {\r\n      width: \"100%\",\r\n      top: \"40px\",\r\n      borderRadius: \"0px !important\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      height: \"100%\",\r\n    },\r\n    input: {\r\n      maxWidth: \"503px\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FormDialog(props) {\r\n  const { open, onClose } = props\r\n  const [privateAddress, setPrivateAddress] = React.useState();\r\n  const [nameTag, setNameTag] = React.useState(false);\r\n  const [errorEmptyField, setErrorEmptyField] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n  const [errorTag, setErrorTag] = React.useState(\"\");\r\n  // const [open, setOpen] = React.useState(false);\r\n  React.useEffect(() => {\r\n    if (props?.value === 1 && props?.fromAddr) {\r\n      setPrivateAddress(props?.fromAddr);\r\n    } else {\r\n      setPrivateAddress(props?.toAddr)\r\n    }\r\n  }, [props])\r\n\r\n  async function TaggedAddress() {\r\n    setError(\"\");\r\n    setErrorTag(\"\");\r\n    setErrorEmptyField(\"\");\r\n    if (!privateAddress && !input && tags.length === 0) {\r\n      setErrorEmptyField(genericConstants.ENTER_REQUIRED_FIELD);\r\n      return;\r\n    }\r\n    if (!privateAddress) {\r\n      setError(genericConstants.ENTER_REQUIRED_FIELD);\r\n    } else if (!input) {\r\n      setErrorTag(genericConstants.ENTER_REQUIRED_FIELD);\r\n    } else if (\r\n      !(privateAddress && privateAddress.length === 43) ||\r\n      !(privateAddress.slice(0, 3) === \"xdc\")\r\n    ) {\r\n      setError(\"Address should start with xdc and consist of 43 characters\");\r\n      return;\r\n    } else if (input.length > 15) {\r\n      setErrorTag(\"Nametag cannot be longer than 15 characters\");\r\n    } else {\r\n    const data = {\r\n      userId: sessionManager.getDataFromCookies(\"userId\"),\r\n      address: privateAddress,\r\n      tagName: input,\r\n      modifiedOn: Date.now()\r\n    };\r\n    // const [error, response] = await utility.parseResponse(\r\n    //   UserService.addPrivateTagToAddress(data)\r\n    // );\r\n\r\n    // if (error) {\r\n    //   utility.apiFailureToast(\"Address is already in use\");\r\n    //   return;\r\n    // }\r\n\r\n    let taggedAddress = localStorage.getItem(\r\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\r\n    );\r\n    if (taggedAddress) {\r\n      taggedAddress = JSON.parse(taggedAddress);\r\n      let existingTagsIndex=null;\r\n      const existingTag = taggedAddress.find(\r\n        (item,index) => {\r\n          if(item.address == privateAddress && item.userId == data.userId){\r\n            existingTagsIndex = index;\r\n            return true;\r\n        }\r\n        }\r\n      );\r\n      if (existingTag) {\r\n        // taggedAddress[existingTagsIndex].tagName = [...taggedAddress[existingTagsIndex].tagName,...tags]\r\n        taggedAddress[existingTagsIndex].tagName = input;\r\n        // utility.apiFailureToast(\"Address is already in use\");\r\n        // return;\r\n      }else{\r\n        taggedAddress.push(data);\r\n      }\r\n    } else {\r\n      taggedAddress = [];\r\n      taggedAddress.push(data);\r\n    }\r\n    // taggedAddress.push(data);\r\n    localStorage.setItem(\r\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS,\r\n      JSON.stringify(taggedAddress)\r\n    );\r\n    utility.apiSuccessToast(\"Tag Added\");\r\n    onClose();\r\n    }\r\n  }\r\n  let taggedAddressfetched = localStorage.getItem(\r\n    cookiesConstants.USER_TAGGED_ADDRESS\r\n  );\r\n\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [tags, setTags] = React.useState([]);\r\n  const [isKeyReleased, setIsKeyReleased] = React.useState(false);\r\n  // const [errorTag, setErrorTag] = React.useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setErrorTag(\"\");\r\n    const { value } = e.target;\r\n    setInput(value);\r\n  };\r\n\r\n  const deleteTag = (index) => {\r\n    setTags((prevState) => prevState.filter((tag, i) => i !== index));\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    const { key } = e;\r\n    const trimmedInput = input.trim();\r\n\r\n    if (key === \",\" && trimmedInput.length && !tags.includes(trimmedInput)) {\r\n      e.preventDefault();\r\n      if (trimmedInput.length > 15) {\r\n        setErrorTag(\"Nametag cannot be longer than 15 characters\");\r\n        return;\r\n      }\r\n      if (tags.length >= 5) {\r\n        setErrorTag(\"Maximum 5 Name tags are allowed\");\r\n        return;\r\n      }\r\n      setTags((prevState) => [...prevState, trimmedInput]);\r\n      setInput(\"\");\r\n      setErrorTag(\"\");\r\n    }\r\n\r\n    if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\r\n      const tagsCopy = [...tags];\r\n      const poppedTag = tagsCopy.pop();\r\n      e.preventDefault();\r\n      setTags(tagsCopy);\r\n      setInput(poppedTag);\r\n    }\r\n\r\n    setIsKeyReleased(false);\r\n  };\r\n\r\n  const onKeyUp = () => {\r\n    setIsKeyReleased(true);\r\n  };\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        // className={classes.dialog}\r\n        classes={{ paperWidthSm: classes.dialogBox }}\r\n        open={open}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <div className={props.theme === \"dark\" ? \"table-bg-dark\" : \"\"}>\r\n        <Row>\r\n          <DialogTitle className={props.theme === \"dark\" ? `${classes.heading} fc-white` : classes.heading} id=\"form-dialog-title\">\r\n            Add a new Address Tag\r\n          </DialogTitle>\r\n        </Row>\r\n        {errorEmptyField ? (\r\n            <div className={classes.error2}>{errorEmptyField}</div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        <DialogContent>\r\n          <DialogContentText className={props.theme === \"dark\" ? `${classes.subCategory} fc-white` : classes.subCategory}>\r\n            Address\r\n          </DialogContentText>\r\n          <input\r\n            value={privateAddress}\r\n\r\n            className={props.theme === \"dark\" ? classes.inputDark : classes.input}\r\n            onChange={(e) => {\r\n              setPrivateAddress(e.target.value)\r\n              setError(\"\");\r\n            }}\r\n            readOnly\r\n          ></input>\r\n          {error ? <div className={classes.error}>{error}</div> : <></>}\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <DialogContentText className={props.theme === \"dark\" ? `${classes.subCategory} fc-white` : classes.subCategory}>\r\n            Name Tag\r\n          </DialogContentText>\r\n          <div className={props.theme === \"dark\" ? \"containerTagDark\" : \"containerTag\"}>\r\n            {/*{tags.map((tag, index) => (*/}\r\n            {/*    <div className=\"tag\">*/}\r\n            {/*      {tag}*/}\r\n            {/*      <button onClick={() => deleteTag(index)}>x</button>*/}\r\n            {/*    </div>*/}\r\n            {/*))}*/}\r\n            <input\r\n                value={input}\r\n                // onKeyDown={onKeyDown}\r\n                // onKeyUp={onKeyUp}\r\n                onChange={onChange}\r\n                className={props.theme === \"dark\" ? \"fc-white p-l-22\" :\"\"}\r\n            />\r\n          </div>\r\n          {errorTag ? (\r\n              <div className={classes.error1}>{errorTag}</div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          {/*<input*/}\r\n          {/*  type=\"text\"*/}\r\n          {/*  className={classes.input}*/}\r\n          {/*  onChange={(e) => setNameTag(e.target.value)}*/}\r\n          {/*></input>*/}\r\n        </DialogContent>\r\n        <DialogActions className={classes.buttons}>\r\n          <span>\r\n            <button className={props.theme === \"dark\" ? classes.cnlbtnDark : classes.cnlbtn} onClick={onClose}>\r\n              Cancel\r\n            </button>\r\n          </span>\r\n          <span>\r\n            <button className={classes.addbtn} onClick={TaggedAddress}>\r\n              Add\r\n            </button>\r\n          </span>\r\n        </DialogActions>\r\n        <div className=\"p-l-15 p-r-15\">\r\n          <div className={props.theme === \"dark\" ? classes.lastContainerDark : classes.lastContainer}>\r\n            <div className={classes.lastContainerText}>\r\n              Privacy is very important to us. To protect sensitive information,\r\n              all custom tags and data related to the Watchlists are saved on\r\n              your local device. Clearing the browsing history or cookies will\r\n              remove the watchlist data saved in your profile.\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/label.da14e1f8.svg\";","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Row } from \"simple-flexbox\";\r\nimport { sessionManager } from \"../../../managers/sessionManager\";\r\nimport { UserService } from \"../../../services\";\r\nimport utility from \"../../../utility\";\r\nimport { cookiesConstants } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  add: {\r\n    backgroundColor: \"#2149b9\",\r\n    marginLeft: \"90px\",\r\n  },\r\n  btn: {\r\n    textAlign: \"start\",\r\n    padding: \"0px\",\r\n    border: \"none !important\",\r\n    background: \"none\",\r\n    \"&:hover\": { background: \"none\" },\r\n  },\r\n  cnlbtn: {\r\n    width: \"94px\",\r\n    height: \"34px\",\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#9fa9ba\",\r\n    color: \"white\",\r\n\r\n    margin: \"14px 8px 15px 2px\",\r\n    padding: \"6px 19px 3px 20px\",\r\n  },\r\n  buttons: {\r\n    padding: \"10px 35px 20px 0px\",\r\n  },\r\n  value: {\r\n    width: \"400px !important\",\r\n  },\r\n  cross: {\r\n    marginTop: \"25px\",\r\n    marginLeft: \"40px\",\r\n    fontWeight: \"500\",\r\n  },\r\n  dialog: {\r\n    marginLeft: \"10%\",\r\n    marginTop: \"6px\",\r\n    width: \"80% !important\",\r\n    height: \"67% !important\",\r\n    borderRadius: \"50px !important\",\r\n  },\r\n\r\n  error: {\r\n    color: \"red\",\r\n    marginLeft: \"2px\",\r\n    marginTop: \"-20px\",\r\n  },\r\n  error1: {\r\n    color: \"red\",\r\n    marginLeft: \"24px\",\r\n    marginTop: \"-14px\",\r\n  },\r\n\r\n  input: {\r\n    width: \"503px\",\r\n    height: \"10px\",\r\n    border: \"solid 1px #c6c8ce\",\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"7px\",\r\n    outline: \"none\",\r\n    padding: \"20px\",\r\n    marginBottom: \"21px\",\r\n  },\r\n  textarea: {\r\n    width: \"503px\",\r\n    height: \"90px\",\r\n    border: \"solid 1px #c6c8ce\",\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"7px\",\r\n    padding: \"20px\",\r\n    outline: \"none\",\r\n    resize: \"none\"\r\n  },\r\n\r\n  addbtn: {\r\n    width: \"110px\",\r\n    height: \"34px\",\r\n    margin: \"14px -8px 15px 2px\",\r\n    padding: \"6px 19px 3px 20px\",\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#3763dd\",\r\n    color: \"white\",\r\n  },\r\n  subCategory: {\r\n    marginTop: \"-12px\",\r\n    marginBottom: \"2px\",\r\n    fontFamily: \"Inter\",\r\n    fontSize: \"14px\",\r\n    color: \"#2a2a2a\",\r\n    fontWeight: \"500\",\r\n    border: \"none !important\",\r\n  },\r\n  forgotpass: {\r\n    color: \"#2149b9\",\r\n    marginLeft: \"123px\",\r\n  },\r\n  createaccount: {\r\n    color: \"#2149b9\",\r\n    marginLeft: \"32px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n  },\r\n  icon: {\r\n    marginLeft: \"-30px\",\r\n  },\r\n  xdc: {\r\n    color: \"#2a2a2a\",\r\n    marginLeft: \"30px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"5px\",\r\n  },\r\n  heading: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"24px\",\r\n    fontFamily: \"Inter\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"18px\",\r\n    color: \"#2a2a2a\",\r\n  },\r\n  dialogBox: {\r\n    width: \"553px\",\r\n    position: \"absolute\",\r\n    top: \"111px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  \"@media (max-width: 714px)\": {\r\n    heading: {\r\n      fontSize: \"16px\"\r\n    },\r\n    dialogBox: {\r\n      width: \"362px\",\r\n      top: \"95px\"\r\n    },\r\n    input: {\r\n      maxWidth: \"503px\",\r\n      width: \"100%\",\r\n    },\r\n    notifyLabel: {\r\n      fontSize: \"13px\",\r\n      width: \"250px\",\r\n    },\r\n    textarea: {\r\n      maxWidth: \"503px\",\r\n      width: \"100%\",\r\n      padding: \"15px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FormDialog(props) {\r\n  const { open, onClose } = props\r\n  const [transactionsHash, setTransactionsHash] = React.useState(\"\");\r\n  const [privateNote, setPrivateNote] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n  const [privateNoteError, setPrivateNoteError] = React.useState(\"\");\r\n  const [errorEmptyField, setErrorEmptyField] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setTransactionsHash(props.hash)\r\n    setPrivateNote(props.pvtNote)\r\n  }, [props])\r\n  async function transactionLable() {\r\n    setError(\"\");\r\n    setPrivateNoteError(\"\");\r\n    setErrorEmptyField(\"\");\r\n    if (!transactionsHash && !privateNote) {\r\n        setErrorEmptyField(\"Please enter required fields\");\r\n        return\r\n    }\r\n    if (!transactionsHash) {\r\n      setError(\"Please enter required field\");\r\n    } else if (!privateNote) {\r\n      setPrivateNoteError(\"Please enter transaction label/note\");\r\n    } else if (\r\n      !(transactionsHash && transactionsHash.length === 66) ||\r\n      !(transactionsHash.slice(0, 2) == \"0x\")\r\n    ) {\r\n      setError(\"Invalid transaction hash\");\r\n    } else if (privateNote.length > 120) {\r\n      setPrivateNoteError(\"Transaction label/note cannot be longer than 120 characters\");\r\n    } else {\r\n    const data = {\r\n      userId: sessionManager.getDataFromCookies(\"userId\"),\r\n      trxLable: privateNote,\r\n      transactionHash: transactionsHash,\r\n      modifiedOn: Date.now()\r\n    };\r\n\r\n    let transactionLabel = localStorage.getItem(\r\n        data.userId+cookiesConstants.USER_TRASACTION_LABELS\r\n    );\r\n    if (transactionLabel) {\r\n      transactionLabel = JSON.parse(transactionLabel);\r\n      let existingIndex = null;\r\n      const existingTransactionLabel = transactionLabel.find(\r\n        (item, index) =>\r\n        {if(item.transactionHash == transactionsHash && item.userId == data.userId){\r\n          existingIndex = index;\r\n          return item;\r\n        }}\r\n      );\r\n      if (existingTransactionLabel) {\r\n        transactionLabel[existingIndex] = data;\r\n        // utility.apiFailureToast(\"Transaction private note is already in use\");\r\n        // return;\r\n      }else\r\n        transactionLabel.push(data);\r\n    } else {\r\n      transactionLabel = [];\r\n      transactionLabel.push(data);\r\n    }\r\n    // transactionLabel.push(data);\r\n    localStorage.setItem(\r\n        data.userId+cookiesConstants.USER_TRASACTION_LABELS,\r\n      JSON.stringify(transactionLabel)\r\n    );\r\n    utility.apiSuccessToast(\"Transaction Added\");\r\n    onClose();\r\n    await props.getListOfTxnLabel();\r\n    await props.getTotalCountTxnLabel();\r\n    setTransactionsHash(\"\");\r\n    setPrivateNote(\"\");\r\n  }\r\n}\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        classes={{ paperWidthSm: classes.dialogBox }}\r\n        open={open}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <Row>\r\n          <div className={classes.heading} id=\"form-dialog-title\">\r\n            Add Transaction Label\r\n          </div>\r\n        </Row>\r\n        {errorEmptyField ? <div className={classes.error1}>{errorEmptyField}</div> : <></>}\r\n        <DialogContent>\r\n          <DialogContentText className={classes.subCategory}>\r\n            Transaction Hash\r\n          </DialogContentText>\r\n          <input\r\n            type=\"text\"\r\n            value={transactionsHash}\r\n            className={classes.input}\r\n            onChange={(e) => setTransactionsHash(e.target.value)}\r\n          ></input>\r\n          {error ? <div className={classes.error}>{error}</div> : <></>}\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <DialogContentText className={classes.subCategory}>\r\n            Transaction Label/Note\r\n          </DialogContentText>\r\n          <textarea\r\n            type=\"text\"\r\n            className={classes.textarea}\r\n            value={privateNote}\r\n            onChange={(e) => setPrivateNote(e.target.value)}\r\n          ></textarea>\r\n        </DialogContent>\r\n        {privateNoteError ? (\r\n            <div className={classes.error1}>{privateNoteError}</div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        <DialogActions className={classes.buttons}>\r\n          <span style={{ color: \"white\" }}>\r\n            <button className={classes.cnlbtn} onClick={onClose}>\r\n              {\" \"}\r\n              Cancel\r\n            </button>\r\n          </span>\r\n          <span>\r\n            <button className={classes.addbtn} onClick={transactionLable}>\r\n              Add\r\n            </button>\r\n          </span>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n// import \"tippy.js/dist/tippy.css\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\nimport { useParams } from \"react-router\";\r\nimport Utils, { dispatchAction } from \"../../utility\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport moment from \"moment\";\r\nimport TokenData from \"../../services/token\";\r\nimport BlockService from \"../../services/blocks\";\r\nimport coinMarketService from \"../../services/coinMarket\";\r\nimport format from \"format-number\";\r\nimport { sessionManager } from \"../../managers/sessionManager\";\r\nimport PrivateAddressTag from \"../../modules/common/dialog/privateAddressTag\";\r\nimport PrivateNote from \"../../modules/common/dialog/privateNote\";\r\nimport { cookiesConstants } from \"../../constants\";\r\nimport LoginDialog from \"../explorer/loginDialog\";\r\nimport { BsCaretRightFill } from \"react-icons/bs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"75.125rem\",\r\n\r\n    marginRight: \"auto\",\r\n    // marginTop: \"90px\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: \"auto\",\r\n\r\n    width: \"100%\",\r\n\r\n    \"@media (min-width: 0px) and (max-width: 767px)\": {\r\n      maxWidth: \"22.563rem\",\r\n      paddingLeft: \"7px\",\r\n      paddingRight: \"7px\",\r\n    },\r\n    \"@media (min-width: 768px) and (max-width: 1239px)\": {\r\n      // marginTop: \"130px\",\r\n      maxWidth: \"41.5rem\",\r\n    },\r\n  },\r\n  rowDiv: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    height: \"53px\",\r\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\r\n    borderRadius: \"7px\",\r\n\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  mainContainer: {\r\n    width: \"100%\",\r\n  },\r\n  mainContainerDark: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#091b4e\"\r\n  },\r\n}));\r\n\r\nfunction TransferTransaction({ _handleChange,theme }) {\r\n  const classes = useStyles();\r\n  function shorten(b, amountL = 25, amountR = 0, stars = 3) {\r\n    return `${b?.slice(0, amountL)} ${\".\".repeat(stars)} ${b?.slice(\r\n      b.length\r\n    )} `;\r\n  }\r\n\r\n  const width = window.innerWidth;\r\n\r\n  let decimalValue = 0\r\n  let currentBlock = 0\r\n  let CurrencyValue = window.localStorage.getItem(\"currency\");\r\n  const { address } = useParams();\r\n  const [transactions, setTransactions] = useState(false);\r\n  const [latestBlocks, setLatestBlocks] = useState(0);\r\n  const [coinmarketcap, setCoinmarketcap] = useState([]);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [tokenTransferValue, setTokenTransferValue] = useState(0)\r\n  const [isSeeMore, setSeeMore] = useState(false);\r\n  useEffect(() => {\r\n    transferTransactionDetail();\r\n    getLatestBlocks();\r\n    getcoinMarketCapData()\r\n  }, [amount]);\r\n\r\n  const getcoinMarketCapData = async () => {\r\n    let urlPath = `${CurrencyValue}`;\r\n    let [error, coinMarket] = await Utils.parseResponse(\r\n      coinMarketService.getCoinMarketData(urlPath, {})\r\n    );\r\n    if (error || !coinMarket) return;\r\n    setCoinmarketcap(coinMarket[0])\r\n  };\r\n\r\n  const getLatestBlocks = async () => {\r\n    let urlPath = \"?skip=0&limit=1\";\r\n    let [error, latestBlock] = await Utils.parseResponse(\r\n      BlockService.getLatestBlock(urlPath, {})\r\n    );\r\n    if (error || !latestBlock) return;\r\n    setLatestBlocks(latestBlock[0].number);\r\n\r\n  };\r\n\r\n  const transferTransactionDetail = async () => {\r\n    let urlPath = `/${address}`;\r\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\r\n      TokenData.getTransferTransactionDetailsUsingHash(urlPath, {})\r\n    );\r\n    if (error || !transactiondetailusinghash) return;\r\n    setTransactions(transactiondetailusinghash);\r\n    setFromAddress(transactiondetailusinghash.from);\r\n    setToAddress(transactiondetailusinghash.to);\r\n    setLoading(false);\r\n    if (transactiondetailusinghash.decimals !== undefined) {\r\n      decimalValue = Math.pow(10, transactiondetailusinghash.decimals)\r\n      setTokenTransferValue(parseInt(parseInt(transactiondetailusinghash.value) / decimalValue))\r\n    }\r\n    currentBlock = transactiondetailusinghash.number\r\n  };\r\n\r\n  const hashid = `A transaction hash is a unique character identifier that is generated whenever the transaction is executed. `;\r\n  const blocknumber = ` The number of block in which transaction was recorded. Block confirmation indicate how many blocks since the transaction is mined.  `;\r\n  const timestamp = ` The date and time at which a transaction is mined. `;\r\n  const from = ` The sending party of the transaction(could be from a contact address)  `;\r\n  const to = ` The receiving party of the transaction(could be from a contact address) `;\r\n  const value = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\r\n  const txnfee = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\r\n  const gasprovided = `Maximum amount of gas provided for the transaction. For normal XDC transfers the value is 21,000. For contract this value is higher an bound by block gas limit. `;\r\n  const gasprice = ` Cost per unit of gas specified for the transaction, in XDC and Gwei. The higher the gas price the higher hance of getting included in a block `;\r\n  const gasused = ` The exact unit of gas that was used for the transactions. `;\r\n  const nounced = ` Sequential running number for an address, beginning with 0 for the first transaction. For example, if the nonce of a transaction is 10, it would be 11th transaction sent from the sender's address. `;\r\n  const input = `Additional information that is required for the transaction `;\r\n  const transferToken = `The value being transacted in XDC and fiat value. Note: You can click the fiat value (if available) to see historical value at the time of transaction.`;\r\n  const privatenote = `User can add a private note to the transaction. Private note is being saved in the local storage of the device.`;\r\n\r\n  function _handleChange(event) {\r\n    setAmount(event?.target?.value);\r\n    window.localStorage.setItem(\"currency\", event?.target?.value);\r\n  }\r\n\r\n\r\n  const currencySymbol = CurrencyValue === \"INR\" ? \"₹ \" : CurrencyValue === \"USD\" ? \"$ \" : \"€ \";\r\n  const valueFetch = coinmarketcap.price\r\n\r\n  const transactionFetch = CurrencyValue === \"INR\" ? transactions.transactionFeeINR : CurrencyValue === \"USD\" ? transactions.transactionFeeUSD : transactions.transactionFeeEUR;\r\n\r\n  const fetchtxn = !transactionFetch ? 0 : (transactionFetch / 1000000000000000000).toFixed(12);\r\n\r\n\r\n  let txfee = !transactions.gasPrice ? 0 : Utils.decimalDivison(transactions.gasPrice, 2);\r\n  txfee = txfee * transactions.gasUsed\r\n\r\n\r\n  const gasP = !transactions.gasPrice ? 0 : Utils.decimalDivison(transactions.gasPrice, 2);\r\n  const avgTxnFeeConverted =\r\n    CurrencyValue === \"INR\"\r\n      ? gasP * coinmarketcap.price\r\n      : CurrencyValue === \"USD\"\r\n      ? gasP * coinmarketcap.price\r\n      : gasP * coinmarketcap.price;\r\n  const avgTxnFeeFetch = !avgTxnFeeConverted\r\n    ? 0\r\n    : parseFloat(avgTxnFeeConverted)?.toFixed(14);\r\n  let avgTxnFeeFetch1 = avgTxnFeeFetch.toString().split(\".\")[0];\r\n  let avgTxnFeeFetch2 = avgTxnFeeFetch.toString().split(\".\")[1];\r\n\r\n\r\n  const valueDiv = !valueFetch ? 0 : Utils.decimalDivison(valueFetch, 2);\r\n\r\n  const userInfo = sessionManager.getDataFromCookies(\"userInfo\");\r\n  const [dialogPvtTagIsOpen, setDialogPvtTagIsOpen] = React.useState(false);\r\n  const [dialogValue, setDailogValue] = React.useState(0);\r\n  const [dialogValue2, setDailogValue2] = React.useState(0);\r\n  const [dialogPvtTagIsOpen2, setDialogPvtTagIsOpen2] = React.useState(false);\r\n  const [dialogPvtNoteIsOpen, setDialogPvtNoteIsOpen] = React.useState(false);\r\n  const [loginDialogIsOpen, setLoginDialogIsOpen] = React.useState(false);\r\n  const [fromAddress, setFromAddress] = useState(\"\");\r\n  const [toAddress, setToAddress] = useState(\"\");\r\n  const [privateNote, setPrivateNote] = useState(\"\");\r\n\r\n  const openDialogPvtTag = () => {\r\n    window.scrollTo(0, 0);\r\n    setDialogPvtTagIsOpen(true);\r\n    setDailogValue(1);\r\n  };\r\n  const closeDialogPvtTag = () => {\r\n    setDialogPvtTagIsOpen(false);\r\n    setDailogValue(0);\r\n  };\r\n  const openDialogPvtTag2 = () => {\r\n    window.scrollTo(0, 0);\r\n    setDialogPvtTagIsOpen2(true);\r\n    setDailogValue2(1);\r\n  };\r\n  const closeDialogPvtTag2 = () => {\r\n    setDialogPvtTagIsOpen2(false);\r\n    setDailogValue2(0);\r\n  };\r\n  const openDialogPvtNote = () => setDialogPvtNoteIsOpen(true);\r\n  const closeDialogPvtNote = () => setDialogPvtNoteIsOpen(false);\r\n  const openLoginDialog = () => setLoginDialogIsOpen(true);\r\n  const closeLoginDialog = () => setLoginDialogIsOpen(false);\r\n  const handleSeeMore = () => {\r\n    setSeeMore(true);\r\n  };\r\n  const handleSeeLess = () => {\r\n    setSeeMore(false);\r\n  };\r\n\r\n  const privateNoteUsingHash = async () => {\r\n    const data = {\r\n      transactionHash: `${address}`,\r\n      userId: sessionManager.getDataFromCookies(\"userId\"),\r\n    };\r\n    let transactionLabel = localStorage.getItem(\r\n      data.userId + cookiesConstants.USER_TRASACTION_LABELS\r\n    );\r\n    transactionLabel = JSON.parse(transactionLabel);\r\n    if (!transactionLabel || !transactionLabel.length) return;\r\n\r\n    const existingTransactionLabel = transactionLabel.find(\r\n      (item) =>\r\n        item.transactionHash == data.transactionHash &&\r\n        item.userId == data.userId\r\n    );\r\n    if (existingTransactionLabel) {\r\n      setPrivateNote(existingTransactionLabel);\r\n    }\r\n  };\r\n  const getListOfTxnLabel = () => {\r\n    privateNoteUsingHash();\r\n  };\r\n\r\n  // ---------------------------------------> fetch from/to address tag (local-storage) <------------------------------------//\r\n  var addrTagFrom = fromAddress;\r\n  var addrTagTo = toAddress;\r\n\r\n  let taggedAddress = localStorage.getItem(\r\n    sessionManager.getDataFromCookies(\"userId\") +\r\n      cookiesConstants.USER_TAGGED_ADDRESS\r\n  );\r\n  let tags =\r\n    taggedAddress && taggedAddress.length > 0 ? JSON.parse(taggedAddress) : \"\";\r\n  var tagValueFrom =\r\n    tags && tags.length > 0\r\n      ? tags?.filter(\r\n          (obj) => obj.address === addrTagFrom && obj.userId === userInfo.sub\r\n        )\r\n      : \"\";\r\n  var tagValueTo =\r\n    tags && tags.length > 0\r\n      ? tags?.filter(\r\n          (obj) => obj.address === addrTagTo && obj.userId === userInfo.sub\r\n        )\r\n      : \"\";\r\n\r\n  // ---------------------------------------> fetch pvt note from (local-storage) <--------------------------------------------//\r\n\r\n  var pvtNotehash = `${address}`;\r\n  let pvtNoteLocal = localStorage.getItem(\r\n    cookiesConstants.USER_TRASACTION_LABELS\r\n  );\r\n\r\n  let pvtNote =\r\n    pvtNoteLocal && pvtNoteLocal.length > 0 ? JSON.parse(pvtNoteLocal) : \"\";\r\n  var pvtNoteValue =\r\n    pvtNote && pvtNote.length > 0\r\n      ? pvtNote?.filter(\r\n          (obj) =>\r\n            obj.transactionHash === pvtNotehash && obj.userId === userInfo.sub\r\n        )\r\n      : \"\";\r\n  \r\n\r\n  return (\r\n    <div className={theme.currentTheme === \"dark\" ? classes.mainContainerDark : classes.mainContainer}>\r\n      <Tokensearchbar theme={theme.currentTheme}/>\r\n      <div className={classes.root}>\r\n        <Grid>\r\n          <div className={isLoading === true ? \"cover-spin-2\" : \"\"}>\r\n            <div className={isLoading === true ? \"cover-spin\" : \"\"}>\r\n              <Container>\r\n                <Heading theme={theme.currentTheme}>Transaction Details</Heading>\r\n              </Container>\r\n\r\n              <Div theme={theme.currentTheme}>\r\n              {transactions ? (\r\n                  transactions.status == true ? (\r\n                    <StatusContainer theme={theme.currentTheme}>\r\n                      <StatusContainerInside>\r\n                        <StatusImgContainer>\r\n                          <StatusImg src=\"/images/success.svg\"></StatusImg>\r\n                        </StatusImgContainer>\r\n                        <StatusTextSuccess>Success</StatusTextSuccess>\r\n                      </StatusContainerInside>\r\n                    </StatusContainer>\r\n                  ) : (\r\n                    <StatusContainer theme={theme.currentTheme}>\r\n                      <StatusImgContainer>\r\n                        <StatusImg src=\"/images/failed.svg\"></StatusImg>\r\n                      </StatusImgContainer>\r\n                      <StatusTextFailed>Failed</StatusTextFailed>\r\n                    </StatusContainer>\r\n                  )\r\n                ) : null}\r\n                <TxnDetailsRightContainer>\r\n                  <TxnDetailsRightTopContainer>\r\n                    <Container>\r\n                      <Tooltip align=\"right\" title={hashid}>\r\n                        <ImageView src={\"/images/info.svg\"} />\r\n                      </Tooltip>\r\n\r\n                      <Hash theme={theme.currentTheme}>Transaction Hash</Hash>\r\n                    </Container>\r\n                    <DetailsMiddleContainer isTextArea={false}>\r\n                      <ContentHash theme={theme.currentTheme}>\r\n                        {address}\r\n                      </ContentHash>\r\n                      <span\r\n                        className={\r\n                          width >= 768\r\n                            ? \"copyEditContainer2\"\r\n                            : \"copyEditContainerMobile\"\r\n                        }\r\n                      >\r\n                        <CopyToClipboard\r\n                          text={address}\r\n                          onCopy={() => setCopiedText(address)}\r\n                        >\r\n                          <Tooltip\r\n                            title={\r\n                              copiedText === address\r\n                                ? \"Copied\"\r\n                                : \"Copy To Clipboard\"\r\n                            }\r\n                            placement=\"top\"\r\n                          >\r\n                            <button\r\n                              className={\r\n                                width > 1240\r\n                                  ? theme.currentTheme === \"dark\" ? \"copyToClipboardHash table-bg-dark\" : \"copyToClipboardHash\"\r\n                                  : theme.currentTheme === \"dark\" ? \"copyToClipboardHashMobile table-bg-dark\" : \"copyToClipboardHashMobile\"\r\n                              }\r\n                            >\r\n                              <img\r\n                                className={\r\n                                  width > 1240\r\n                                    ? \"copy-icon\"\r\n                                    : width < 768\r\n                                    ? \"copyIconHashMobile\"\r\n                                    : \"copyIconHash\"\r\n                                }\r\n                                src={\"/images/copy-grey.svg\"}\r\n                              />\r\n                            </button>\r\n                          </Tooltip>\r\n                        </CopyToClipboard>\r\n                      </span>\r\n                    </DetailsMiddleContainer>\r\n                  </TxnDetailsRightTopContainer>\r\n                  <TxnDetailsRightBottomContainer>\r\n                    <DetailsContainer>\r\n                      <Container>\r\n                        <Tooltip title={value}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n                        <Hash theme={theme.currentTheme}>Transaction Value</Hash>\r\n                      </Container>\r\n                      <Tooltip title={transactions?.value}>\r\n                        <DetailsMiddleContainer isTextArea={false} theme={theme.currentTheme}>\r\n                          {!transactions?.transactionValue\r\n                            ? 0\r\n                            : Utils.decimalDivison(transactions?.transactionValue, 2)}{\" \"}\r\n                            XDC ({currencySymbol}\r\n                          {coinmarketcap && coinmarketcap?.price > 0 ? Utils.decimalDivison(coinmarketcap.price * transactions?.transactionValue, 2) : 0})\r\n                        </DetailsMiddleContainer>\r\n                      </Tooltip>\r\n                    </DetailsContainer>\r\n                    {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={value} style={{ cursor: \"pointer\" }}>\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Value</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    {!transactions?.transactionValue\r\n                      ? 0\r\n                      : Utils.decimalDivison(transactions?.transactionValue, 2)}{\" \"}\r\n                    XDC ({currencySymbol}\r\n                    {coinmarketcap && coinmarketcap?.price > 0 ? Utils.decimalDivison(coinmarketcap.price * transactions?.transactionValue, 2) : 0})\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                    {/* ------------------------------------------------time stamp------------------------------------- */}\r\n                    <DetailsContainer className=\"mobileTimeStamp\">\r\n                      <Container>\r\n                        <Tooltip title={timestamp}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n\r\n                        <Hash theme={theme.currentTheme}>Transaction Timestamp</Hash>\r\n                      </Container>\r\n                      <DetailsMiddleContainer isTextArea={false} theme={theme.currentTheme}>\r\n                        {/* {`${\r\n                          (transactions?.timestamp &&\r\n                            moment(transactions.timestamp * 1000)\r\n                              .tz(timezone)\r\n                              .format(\"MMM DD, YYYY, hh:mm A\")) ||\r\n                          \"\"\r\n                        } ${\r\n                          (timezone && Utility.getUtcOffset(timezone)) || \"\"\r\n                        }`} */}\r\n                        {transactions.timestamp &&\r\n                      !isNaN(Number(transactions.timestamp))\r\n                      ? moment(Number(transactions.timestamp) * 1000).utc().format(\r\n                        \"MMMM Do YYYY, h:mm:ss A\"\r\n                      ) + \"  UTC\"\r\n                      : \"\"}\r\n                        {/*============================================================================({getHoursAgo(transactions.timestamp * 1000)})==================================*/}\r\n                      </DetailsMiddleContainer>\r\n                    </DetailsContainer>\r\n                    {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={timestamp}>\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>Timestamp</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    {transactions.timestamp &&\r\n                      !isNaN(Number(transactions.timestamp))\r\n                      ? moment(Number(transactions.timestamp) * 1000).utc().format(\r\n                        \"MMMM Do YYYY, h:mm:ss A\"\r\n                      ) + \"  UTC\"\r\n                      : \"\"}\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                    {/* ------------------------------------------------------block-------------------------------  */}\r\n                    <DetailsContainer>\r\n                      <Container>\r\n                        <Tooltip title={blocknumber}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n\r\n                        <Hash theme={theme.currentTheme}>Block Number</Hash>\r\n                      </Container>\r\n                      <DetailsMiddleContainer isTextArea={false}>\r\n                        <Content>\r\n                          <a\r\n                            className={theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction fc-4878ff\" : \"linkTableDetails-transaction\"}\r\n                            href={\"/block-details/\" + transactions.blockNumber}\r\n                          >\r\n                            {\" \"}\r\n                            {transactions.blockNumber\r\n                              ? transactions.blockNumber\r\n                              : \"\"}\r\n                          </a>\r\n                          &nbsp;{\" \"}\r\n                          <BlockConfirmation theme={theme.currentTheme}>\r\n                          {latestBlocks && latestBlocks > 0 ? latestBlocks - parseInt(transactions?.blockNumber) : 0} Blocks Confirmation\r\n                          </BlockConfirmation>\r\n                        </Content>\r\n                      </DetailsMiddleContainer>\r\n                    </DetailsContainer>\r\n                    {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={blocknumber}>\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>Block Number</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      <a\r\n                        className=\"linkTableDetails\"\r\n                        href={\"/block-details/\" + transactions.blockNumber}\r\n                      >\r\n                        {transactions.blockNumber}\r\n                      </a>\r\n                      - {latestBlocks && latestBlocks > 0 ? latestBlocks - parseInt(transactions?.blockNumber) : 0}  Blocks Confirmation\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                  </TxnDetailsRightBottomContainer>\r\n                </TxnDetailsRightContainer>\r\n\r\n              </Div>\r\n\r\n\r\n\r\n\r\n              <DivMiddleContainer>\r\n                {/* -----------------------------------------------from---------------------------- */}\r\n                {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={from}>\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>From</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      <a\r\n                        className=\"linkTableDetails\"\r\n                        href={\"/address-details/\" + transactions.from}\r\n                      >\r\n                        {transactions.from}\r\n                      </a>\r\n                      <CopyToClipboard\r\n                        text={transactions.from}\r\n                        onCopy={() => setCopiedText(transactions.from)}\r\n                      >\r\n                        <Tooltip\r\n                          title={\r\n                            copiedText === transactions.from\r\n                              ? \"Copied\"\r\n                              : \"Copy To Clipboard\"\r\n                          }\r\n                          placement=\"top\"\r\n                        >\r\n                          <button\r\n                            style={{\r\n                              color: \"blue\",\r\n                              backgroundColor: \"white\",\r\n                              fontSize: 14,\r\n                            }}\r\n                          >\r\n                            <ImgView src={\"/images/copy.svg\"} />\r\n                          </button>\r\n                        </Tooltip>\r\n                      </CopyToClipboard>\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                <DivMiddle theme={theme.currentTheme}>\r\n                  <Container>\r\n                    <Tooltip title={from}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash theme={theme.currentTheme}>From</Hash>\r\n                  </Container>\r\n                  <DetailsMiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      {\" \"}\r\n                      <div style={{ display: width >= 768 ? \"flex\" : \"block\" }}>\r\n                        <a\r\n                          className={theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction fc-4878ff\" : \"linkTableDetails-transaction\"}\r\n                          href={\"/address-details/\" + transactions.from}\r\n                        >\r\n                          {transactions.from}\r\n                        </a>\r\n                        <div\r\n                          className={\r\n                            width < 768\r\n                              ? \"fromContainerMobile\"\r\n                              : \"fromContainer\"\r\n                          }\r\n                        >\r\n                          <CopyToClipboard\r\n                            text={transactions.from}\r\n                            onCopy={() => setCopiedText(transactions.from)}\r\n                          >\r\n                            <Tooltip\r\n                              title={\r\n                                copiedText === transactions.from\r\n                                  ? \"Copied\"\r\n                                  : \"Copy To Clipboard\"\r\n                              }\r\n                              placement=\"top\"\r\n                            >\r\n                              <button\r\n                                className={\r\n                                  width > 1240\r\n                                  ? theme.currentTheme === \"dark\" ? \"copyToClipboardHash table-bg-dark\" : \"copyToClipboardHash\"\r\n                                  : theme.currentTheme === \"dark\" ? \"copyToClipboardHashMobile table-bg-dark\" : \"copyToClipboardHashMobile\"\r\n                                }\r\n                              >\r\n                                <img\r\n                                  className={\r\n                                    width > 1240\r\n                                      ? \"copy-icon\"\r\n                                      : width < 768\r\n                                      ? \"copy-icon-from\"\r\n                                      : \"copy-icon-from-tab\"\r\n                                  }\r\n                                  src={\"/images/copy-grey.svg\"}\r\n                                />\r\n                              </button>\r\n                            </Tooltip>\r\n                          </CopyToClipboard>\r\n                        </div>\r\n                      </div>\r\n                    </Content>\r\n                    <TabTag>\r\n                      {width >= 768 && width <= 1240 ? (\r\n                        userInfo ? (\r\n                          <>\r\n                            {\r\n                              <PrivateAddressTag\r\n                                open={dialogPvtTagIsOpen}\r\n                                onClose={closeDialogPvtTag}\r\n                                fromAddr={transactions.from}\r\n                                value={dialogValue}\r\n                                hash={address}\r\n                              />\r\n                            }\r\n\r\n                            {tagValueFrom && tagValueFrom?.length > 0 ? (\r\n                              <Tag>\r\n                                {\r\n                                  tagValueFrom[tagValueFrom?.length - 1]\r\n                                    ?.tagName\r\n                                }\r\n                              </Tag>\r\n                            ) : (\r\n                              <Tooltip\r\n                                title=\"Add a new Address Tag\"\r\n                                placement=\"top\"\r\n                              >\r\n                                <AddTagContainer onClick={openDialogPvtTag}>\r\n                                  <ImgAddTag>\r\n                                    <img src=\"/images/add-tag-white.svg\" />\r\n                                  </ImgAddTag>\r\n                                  <AddTagtext>Add Tag</AddTagtext>\r\n                                </AddTagContainer>\r\n                              </Tooltip>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </TabTag>\r\n                  </DetailsMiddleContainer>\r\n                  <MobileDesktopTag>\r\n                    {width < 768 || width > 1240 ? (\r\n                      userInfo ? (\r\n                        <>\r\n                          {\r\n                            <PrivateAddressTag\r\n                              open={dialogPvtTagIsOpen}\r\n                              onClose={closeDialogPvtTag}\r\n                              fromAddr={transactions.from}\r\n                              value={dialogValue}\r\n                              hash={address}\r\n                            />\r\n                          }\r\n\r\n                          {tagValueFrom && tagValueFrom?.length ? (\r\n                            <Tag>\r\n                              {tagValueFrom[tagValueFrom?.length - 1]?.tagName}\r\n                            </Tag>\r\n                          ) : (\r\n                            <Tooltip\r\n                              title=\"Add a new Address Tag\"\r\n                              placement=\"top\"\r\n                            >\r\n                              <AddTagContainer onClick={openDialogPvtTag}>\r\n                                <ImgAddTag>\r\n                                  <img src=\"/images/add-tag-white.svg\" />\r\n                                </ImgAddTag>\r\n                                <AddTagtext>Add Tag</AddTagtext>\r\n                              </AddTagContainer>\r\n                            </Tooltip>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </MobileDesktopTag>\r\n                </DivMiddle>\r\n                <DivCircle>\r\n                  <ImgNextArrow>\r\n                    <img src=\"/images/next-arrow.svg\" />\r\n                  </ImgNextArrow>\r\n                </DivCircle>\r\n                {/* --------------------------------------------------------------------to--------------------- */}\r\n                <DivMiddle theme={theme.currentTheme}>\r\n                {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={to}>\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>To</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      <a\r\n                        className=\"linkTableDetails\"\r\n                        href={\"/address-details/\" + transactions.to}\r\n                      >\r\n                        {transactions.to}\r\n                      </a>\r\n                      <CopyToClipboard\r\n                        text={transactions.to}\r\n                        onCopy={() => setCopiedText(transactions.to)}\r\n                      >\r\n                        <Tooltip\r\n                          title={\r\n                            copiedText === transactions.to\r\n                              ? \"Copied\"\r\n                              : \"Copy To Clipboard\"\r\n                          }\r\n                          placement=\"top\"\r\n                        >\r\n                          <button\r\n                            style={{\r\n                              color: \"blue\",\r\n                              backgroundColor: \"white\",\r\n                              fontSize: 14,\r\n                            }}\r\n                          >\r\n                            <ImgView src={\"/images/copy.svg\"} />\r\n                          </button>\r\n                        </Tooltip>\r\n                      </CopyToClipboard>\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                  <Container>\r\n                    <Tooltip title={to}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash theme={theme.currentTheme}>To</Hash>\r\n                  </Container>\r\n                  <DetailsMiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      <span\r\n                        style={{ display: width >= 768 ? \"flex\" : \"block\" }}\r\n                      >\r\n                        <a\r\n                          className={theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction fc-4878ff\" : \"linkTableDetails-transaction\"}\r\n                          href={\"/address-details/\" + transactions.to}\r\n                        >\r\n                          {transactions.to\r\n                            ? transactions.to\r\n                            : transactions.contractAddress}\r\n                        </a>\r\n                        <div\r\n                          className={\r\n                            width < 768\r\n                              ? \"fromContainerMobile\"\r\n                              : \"fromContainer\"\r\n                          }\r\n                        >\r\n                          <CopyToClipboard\r\n                            text={transactions.to}\r\n                            onCopy={() => setCopiedText(transactions.to)}\r\n                          >\r\n                            <Tooltip\r\n                              title={\r\n                                copiedText === transactions.to\r\n                                  ? \"Copied\"\r\n                                  : \"Copy To Clipboard\"\r\n                              }\r\n                              placement=\"top\"\r\n                            >\r\n                              <button\r\n                                className={\r\n                                  width > 1240\r\n                                  ? theme.currentTheme === \"dark\" ? \"copyToClipboardHash table-bg-dark\" : \"copyToClipboardHash\"\r\n                                  : theme.currentTheme === \"dark\" ? \"copyToClipboardFromMobile table-bg-dark\" : \"copyToClipboardFromMobile\"\r\n                                }\r\n                              >\r\n                                <img\r\n                                  className={\r\n                                    width > 1240\r\n                                      ? \"copy-icon\"\r\n                                      : width < 768\r\n                                      ? \"copy-icon-from\"\r\n                                      : \"copy-icon-from-tab\"\r\n                                  }\r\n                                  src={\"/images/copy-grey.svg\"}\r\n                                />\r\n                              </button>\r\n                            </Tooltip>\r\n                          </CopyToClipboard>\r\n                        </div>\r\n                      </span>\r\n                    </Content>\r\n                    <TabTag>\r\n                      {width >= 768 && width <= 1240 ? (\r\n                        userInfo ? (\r\n                          <>\r\n                            {\r\n                              <PrivateAddressTag\r\n                                open={dialogPvtTagIsOpen2}\r\n                                onClose={closeDialogPvtTag2}\r\n                                toAddr={transactions.to}\r\n                                value={dialogValue2}\r\n                                hash={address}\r\n                              />\r\n                            }\r\n                            {tagValueTo && tagValueTo?.length ? (\r\n                              <Tag>\r\n                                {tagValueTo[tagValueTo?.length - 1]?.tagName}\r\n                              </Tag>\r\n                            ) : (\r\n                              <Tooltip\r\n                                title=\"Add a new Address Tag\"\r\n                                placement=\"top\"\r\n                              >\r\n                                <AddTagContainer onClick={openDialogPvtTag2}>\r\n                                  <ImgAddTag>\r\n                                    <img src=\"/images/add-tag-white.svg\" />\r\n                                  </ImgAddTag>\r\n                                  <AddTagtext>Add Tag</AddTagtext>\r\n                                </AddTagContainer>\r\n                              </Tooltip>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </TabTag>\r\n                  </DetailsMiddleContainer>\r\n                  <MobileDesktopTag>\r\n                    {width < 768 || width > 1240 ? (\r\n                      userInfo ? (\r\n                        <>\r\n                          {\r\n                            <PrivateAddressTag\r\n                              open={dialogPvtTagIsOpen2}\r\n                              onClose={closeDialogPvtTag2}\r\n                              toAddr={transactions.to}\r\n                              value={dialogValue2}\r\n                              hash={address}\r\n                            />\r\n                          }\r\n                          {tagValueTo && tagValueTo?.length ? (\r\n                            <Tag>\r\n                              {tagValueTo[tagValueTo?.length - 1]?.tagName}\r\n                            </Tag>\r\n                          ) : (\r\n                            <Tooltip\r\n                              title=\"Add a new Address Tag\"\r\n                              placement=\"top\"\r\n                            >\r\n                              <AddTagContainer onClick={openDialogPvtTag2}>\r\n                                <ImgAddTag>\r\n                                  <img src=\"/images/add-tag-white.svg\" />\r\n                                </ImgAddTag>\r\n                                <AddTagtext>Add Tag</AddTagtext>\r\n                              </AddTagContainer>\r\n                            </Tooltip>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </MobileDesktopTag>\r\n                </DivMiddle>\r\n              </DivMiddleContainer>\r\n\r\n              <Div__ theme={theme.currentTheme}>\r\n              <Spacing theme={theme.currentTheme}>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasprovided}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Token Transferred</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <TokenTransferredMiddleContainer>\r\n                      <TokenTransferredContent>\r\n                    <BlackText theme={theme.currentTheme}>XRC-721</BlackText>\r\n                    <GreyText>Token ID</GreyText>\r\n                    <GreyText>[</GreyText>\r\n                    <BlueText theme={theme.currentTheme}>1256</BlueText>\r\n                    <GreyText>]</GreyText>\r\n                    <BlueText theme={theme.currentTheme}>CunningFox.. (CFX)</BlueText>\r\n                    </TokenTransferredContent>\r\n                    <ImgProfileIcon src=\"/images/xyz.svg\" />\r\n                    </TokenTransferredMiddleContainer>\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                <SpacingTxnAction theme={theme.currentTheme}>\r\n                  <ContainerTxnAction>\r\n                    <Tooltip align=\"right\" title={gasprovided}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Txn Action</Hash>\r\n                  </ContainerTxnAction>\r\n                  <MiddleContainer isTextArea={false}>\r\n                  <MainContainerTxnAction>\r\n                    <TxnActionNextRow>\r\n                      <div className=\"arrow_right_grey\">\r\n                        <BsCaretRightFill size={10}/>\r\n                      </div>\r\n                      <GreyText>Sale:</GreyText>\r\n                      <BlackText theme={theme.currentTheme}>1 NFT</BlackText>\r\n                      <GreyText>For</GreyText>\r\n                      <BlackText theme={theme.currentTheme}>2500.00 XDC</BlackText>\r\n                      <ImgNextRed src=\"/images/xyz.svg\" />\r\n                      <BlackText theme={theme.currentTheme}>FleekApp</BlackText>\r\n                    </TxnActionNextRow>\r\n                    <TxnActionNextRow>\r\n                      <Gap1 />\r\n                      <div className=\"arrow_right_grey\">\r\n                        <BsCaretRightFill size={10}/>\r\n                      </div>\r\n                      <BlackText theme={theme.currentTheme}>Transfer of</BlackText>\r\n                      <BlueText theme={theme.currentTheme}>CunningFox.. (CFX)</BlueText>\r\n                      <GreyText>from</GreyText>\r\n                      <BlueText theme={theme.currentTheme}>xdcc4e69958…5b9c</BlueText>\r\n                      <GreyText>to</GreyText>\r\n                      <BlueText theme={theme.currentTheme}>xdcc4e69958…9e9a</BlueText>\r\n                    </TxnActionNextRow>\r\n                    <TxnActionNextRow>\r\n                      <Gap2 />\r\n                      <div className=\"arrow_right_grey\">\r\n                        <BsCaretRightFill size={10}/>\r\n                      </div>\r\n                      <BlackText theme={theme.currentTheme}>1 of</BlackText>\r\n                      <GreyText>Token ID</GreyText>\r\n                      <GreyText>[</GreyText>\r\n                      <BlueText theme={theme.currentTheme}>1256</BlueText>\r\n                      <GreyText>]</GreyText>\r\n                    </TxnActionNextRow>  \r\n                  </MainContainerTxnAction>\r\n                  </MiddleContainer>\r\n                </SpacingTxnAction>\r\n                <SpacingInteractedWith theme={theme.currentTheme}>\r\n                  <ContainerInteractedWith>\r\n                    <Tooltip align=\"right\" title={gasprovided}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Interacted With (To)</Hash>\r\n                  </ContainerInteractedWith>\r\n                  <MiddleContainer isTextArea={false}>\r\n                  <MainContainerInteractedWith>\r\n                    <ContentInteractedWith>\r\n                    <BlackText theme={theme.currentTheme}>Contract</BlackText>\r\n                      &nbsp;\r\n                      <span><a className={theme.currentTheme===\"dark\"?\"linkTableDetails-transaction-dark\":\"linkTableDetails-transaction\"} href={\"#\"}>\r\n                      xdcc4e699581116412965b5e7c71b8e2dd50ac341eb9a\r\n                      </a></span>\r\n                      &nbsp;&nbsp;\r\n                      <BlackText theme={theme.currentTheme}>(FleekApp)</BlackText>\r\n                      <ImgInteracted src=\"/images/success.svg\" />\r\n                      <ImgCopyGrey src=\"/images/copy-grey.svg\" />\r\n                    </ContentInteractedWith>\r\n                    <InteractedWithNextRow>\r\n                      <ImgNewLine src=\"/images/xyz.svg\" />\r\n                      <GreyText>TRANSFER</GreyText>\r\n                      <BlackText theme={theme.currentTheme}>0.000000006 XDC</BlackText>\r\n                      <GreyText>From</GreyText>\r\n                      <BlueText theme={theme.currentTheme}>Fleek: NFT App</BlueText>\r\n                      <GreyText>to</GreyText>\r\n                      <BlackText theme={theme.currentTheme}>Fleek:</BlackText>\r\n                      <BlueText theme={theme.currentTheme}>NFT App</BlueText>\r\n                    </InteractedWithNextRow>\r\n                    <InteractedWithNextRow>\r\n                      <ImgNewLine src=\"/images/xyz.svg\" />\r\n                      <GreyText>TRANSFER</GreyText>\r\n                      <BlackText theme={theme.currentTheme}>0.000000006 XDC</BlackText>\r\n                      <GreyText>From</GreyText>\r\n                      <BlueText theme={theme.currentTheme}>Fleek: NFT App</BlueText>\r\n                      <GreyText>to</GreyText>\r\n                      <BlueText theme={theme.currentTheme}>xdcc4e6995811141…eb9a</BlueText>\r\n                    </InteractedWithNextRow>\r\n                    </MainContainerInteractedWith>\r\n                  </MiddleContainer>\r\n                </SpacingInteractedWith>\r\n                {/* -------------------------------------------------------------txn fee----------------------- */}\r\n                {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={txnfee} style={{ cursor: \"pointer\" }}>\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>Txn Fee</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      {txfee && txfee > 0 ? txfee : 0}  XDC ({currencySymbol}\r\n                      {txfee && txfee > 0 ? Utils.decimalDivison(coinmarketcap.price * txfee, 2) : 0}\r\n                      )\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={txnfee}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash theme={theme.currentTheme}>Transaction Fee</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content theme={theme.currentTheme}>\r\n                      {/* {\" \"}\r\n                      {txnFee2 == 0 ? (\r\n                        <span>{txnFee1}</span>\r\n                      ) : (\r\n                        <span>\r\n                          {txnFee1}\r\n                          {\".\"}\r\n                          <span style={{ color: \"#9FA9BA\" }}>{txnFee2}</span>\r\n                        </span>\r\n                      )}\r\n                      &nbsp;XDC ({currencySymbol}\r\n                      {fetchtxn2 == null ? (\r\n                        <span>{fetchtxn1}</span>\r\n                      ) : (\r\n                        <span>\r\n                          {fetchtxn1}\r\n                          {\".\"}\r\n                          <span style={{ color: \"#9FA9BA\" }}>{fetchtxn2}</span>\r\n                        </span>\r\n                      )}\r\n                      ) */}\r\n                      {txfee && txfee > 0 ? txfee : 0}  XDC ({currencySymbol}\r\n                      {txfee && txfee > 0 ? Utils.decimalDivison(coinmarketcap.price * txfee, 2) : 0}\r\n                      )\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                {/* --------------------------------gas provided-------------------------------- */}\r\n                {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip\r\n                      align=\"right\"\r\n                      title={gasprovided}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Gas Provided</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    {transactions.gas}\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasprovided}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Gas Provided</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false} theme={theme.currentTheme}>\r\n                    {format({})(transactions.gas)}\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                {/* ---------------------------------------avg txn fee --------------------- */}\r\n                {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip\r\n                      align=\"right\"\r\n                      title={gasprice}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Gas Price</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    {gasP}\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasprice}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Avg Transaction Fee</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content theme={theme.currentTheme}>\r\n                    {/* {gasPrice2 == 0 ? (\r\n                      <span>{gasPrice1}</span>\r\n                    ) : (\r\n                      <span>\r\n                        {gasPrice1}\r\n                        {\".\"}\r\n                        <span style={{ color: \"#9FA9BA\" }}>{gasPrice2}</span>\r\n                      </span>\r\n                    )} */}\r\n                    {gasP}&nbsp;XDC ({currencySymbol}\r\n                      {avgTxnFeeFetch2 == null ? (\r\n                        <span>{avgTxnFeeFetch1}</span>\r\n                      ) : (\r\n                        <span>\r\n                          {avgTxnFeeFetch1}\r\n                          {\".\"}\r\n                          <span style={{ color: \"#9FA9BA\" }}>{avgTxnFeeFetch2}</span>\r\n                        </span>\r\n                      )}\r\n                      )\r\n                      </Content>\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                {/* --------------------------------------------gas used--------------------------- */}\r\n                {/* <Spacing>\r\n                  <Container>\r\n                    <Tooltip\r\n                      align=\"right\"\r\n                      title={gasused}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <ImageView src={\"/images/questionmark.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Gas Used</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>{transactions.gasUsed}</Content>\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasused}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Gas Used</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content theme={theme.currentTheme}>{format({})(transactions?.gasUsed)}</Content>\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n\r\n                {/* --------------------------------------------see more------------------------------------ */}\r\n                {!isSeeMore ? (\r\n                  <Spacing>\r\n                    <SeeMoreContainer onClick={handleSeeMore}>\r\n                      <SeeMoreText>See more</SeeMoreText>\r\n                      <ImgSeeMore src=\"/images/see-more.svg\"></ImgSeeMore>\r\n                    </SeeMoreContainer>\r\n                  </Spacing>\r\n                ) : (\r\n                  <>\r\n                  {/* <Spacing>\r\n                    <Container>\r\n                      <Tooltip title={transferToken}>\r\n                        <ImageView src={\"/images/info.svg\"} />\r\n                      </Tooltip>\r\n                    <Hash theme={theme.currentTheme}> Interacted With (To)</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <ContentInteractedWith>\r\n                      <div className={theme.currentTheme === \"dark\" ? \"fc-b1c3e1\" : \"\"}>Contract</div>\r\n                      &nbsp;\r\n                      <span>(<a className={theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction fc-4878ff\" : \"linkTableDetails-transaction\"} href={\"/address/\" + transactions?.contract}>\r\n                        {transactions?.contract}\r\n                      </a>)</span>\r\n                    </ContentInteractedWith>\r\n                  </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={transferToken}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>            \r\n                    <Hash theme={theme.currentTheme}> Token Transfer</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content theme={theme.currentTheme}>\r\n                      {tokenTransferValue}\r\n\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing> */}\r\n                    <Spacing>\r\n                      <Container>\r\n                        <Tooltip align=\"right\" title={nounced}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n                        <Hash theme={theme.currentTheme}>Nonce</Hash>\r\n                      </Container>\r\n                      <MiddleContainer isTextArea={false}>\r\n                        <Content theme={theme.currentTheme}> {transactions.nonce}</Content>\r\n                      </MiddleContainer>\r\n                    </Spacing>\r\n                    <SpacingInputData>\r\n                      <Container>\r\n                        <Tooltip align=\"right\" title={input}>\r\n                          <ImageViewInputData src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n                        <HashInputData theme={theme.currentTheme}>Input Data</HashInputData>\r\n                      </Container>\r\n                      <MiddleContainerInputData isTextArea={true} theme={theme.currentTheme}>\r\n                        <div className={theme.currentTheme === \"dark\" ? \"bg-transparent-dark\" : \"transaction-details-input-data\"}>\r\n                          <textarea\r\n                            className={theme.currentTheme === \"dark\" ? \"text-area-transaction-details-dark\" : \"text-area-transaction\"}\r\n                            readOnly\r\n                            value={transactions.input}\r\n                          />\r\n                        </div>\r\n                      </MiddleContainerInputData>\r\n                    </SpacingInputData>\r\n                    <Spacing>\r\n                      <SeeMoreContainer onClick={handleSeeLess}>\r\n                        <SeeMoreText>See Less</SeeMoreText>\r\n                        <ImgSeeLess src=\"/images/see-more.svg\"></ImgSeeLess>\r\n                      </SeeMoreContainer>\r\n                    </Spacing>\r\n                  </>\r\n                )}\r\n                <SpacingPrivateNode>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={privatenote}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash theme={theme.currentTheme}>Private Note</Hash>\r\n                  </Container>\r\n                  <MiddleContainerPrivateNote>\r\n                    {!userInfo ? (\r\n                      <PrivateText theme={theme.currentTheme}>\r\n                        {\r\n                          <LoginDialog\r\n                            open={loginDialogIsOpen}\r\n                            onClose={closeLoginDialog}\r\n                            dataHashOrAddress={address}\r\n                          />\r\n                        }\r\n                        To access the private note feature, you must be\r\n                        <a\r\n                          className={ theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction fc-4878ff\" : \"linkTableDetails-transaction\"}\r\n                          style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\r\n                          onClick={openLoginDialog}\r\n                        >\r\n                          Logged In\r\n                        </a>\r\n                      </PrivateText>\r\n                    ) : privateNote ? (\r\n                      <span>{privateNote?.trxLable}</span>\r\n                    ) : (\r\n                      <AddLabel>\r\n                        <AddLabelText>\r\n                          Add private note by clicking on this icon\r\n                        </AddLabelText>\r\n                        {\r\n                          <PrivateNote\r\n                            open={dialogPvtNoteIsOpen}\r\n                            getListOfTxnLabel={getListOfTxnLabel}\r\n                            getTotalCountTxnLabel={() => {}}\r\n                            onClose={closeDialogPvtNote}\r\n                            hash={address}\r\n                            pvtNote={\r\n                              pvtNoteValue[pvtNoteValue?.length - 1]?.trxLable\r\n                            }\r\n                          />\r\n                        }\r\n                        {\r\n                          <Tooltip\r\n                            title=\"Add Transaction Label\"\r\n                            placement=\"top\"\r\n                          >\r\n                            <img\r\n                              className={\r\n                                width > 1240 ? \"edit-icon1\" : \"editIconHash\"\r\n                              }\r\n                              onClick={openDialogPvtNote}\r\n                              src={require(\"../../../src/assets/images/label.svg\")}\r\n                            />\r\n                          </Tooltip>\r\n                        }\r\n                      </AddLabel>\r\n                    )}\r\n                  </MiddleContainerPrivateNote>\r\n                </SpacingPrivateNode>\r\n              </Div__>\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n\r\n      <FooterComponent _handleChange={_handleChange} currency={amount} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { theme: state.theme };\r\n};\r\nexport default connect(mapStateToProps, { dispatchAction })(TransferTransaction);\r\n\r\nconst Input = styled.input`\r\n  border-radius: 5px;\r\n  border: solid 1px #e3e7eb;\r\n  background-color: #fff;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: left;\r\n  color: #2a2a2a;\r\n`;\r\nconst Content = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.935rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  line-height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #b1c3e1;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    line-height: 18px !important;\r\n    word-break: break-all;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1241px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n`;\r\nconst ContentHash = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.935rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  line-height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #b1c3e1;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    line-height: 18px !important;\r\n    word-break: break-all;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1241px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    width: 33rem;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n`;\r\n// const ContentInteractedWith = styled.div`\r\n//   font-family: Inter;\r\n//   font-size: 0.935rem;\r\n\r\n//   text-align: left;\r\n//   color: #3a3a3a;\r\n//   line-height: 22px;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   @media (min-width: 0px) and (max-width: 767px) {\r\n//     font-size: 0.875rem;\r\n//     text-align: left;\r\n//     color: #3a3a3a;\r\n//     opacity: 1;\r\n//     line-height: 7px !important;\r\n//     flex-direction: column;\r\n//     align-items: flex-start;\r\n//     padding-right: 10px;\r\n//     padding-top: 5px;\r\n//   }\r\n//   @media (min-width: 768px) and (max-width: 1241px) {\r\n//     font-size: 0.875rem;\r\n//     word-break: break-all;\r\n//     text-align: left;\r\n\r\n//     color: #3a3a3a;\r\n//     opacity: 1;\r\n//   }\r\n// `;\r\nconst TextArea = styled.textarea`\r\n  opacity: 0.33;\r\n  border-radius: 4px;\r\n  border: solid 1px #9fa9ba;\r\n  background-color: #dee0e3;\r\n  width: 100%;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  float: left;\r\n  padding: 14px;\r\n  overflow-y: auto;\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 110%;\r\n  }\r\n`;\r\nconst PrivateText = styled.p`\r\n  display: contents;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #fff !important;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: contents;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    display: block;\r\n    margin-bottom: -5px;\r\n  }\r\n`;\r\nconst Div__ = styled.div`\r\n  width: 75.125rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  padding: 0.563rem;\r\n  padding-left: 27px;\r\n  padding-right: 25px;\r\n  margin-top: 35px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    background-color: #192a59;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    max-width: 22.563rem;\r\n    width: 100%;\r\n    // height: 61rem;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-bottom: 35px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 41.5rem;\r\n    height: unset;\r\n    margin-bottom: 54px;\r\n  }\r\n`;\r\nconst MiddleContainerPrivateNote = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: solid 1px #9fa9ba;\r\n  height: auto;\r\n  padding: 1px 9px 1px 18px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-top: 10px;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    margin-left: unset;\r\n    line-height: 1.5;\r\n    height: auto;\r\n    padding: 1px 6px 1px 6px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    margin-left: 100px;\r\n  }\r\n`;\r\nconst MiddleContainerInputData = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    border: none;\r\n    background-color: #9fa9ba;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    margin-left: unset;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    margin-left: 100px;\r\n  }\r\n`;\r\n\r\nconst MiddleContainer = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #b1c3e1;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\r\n    margin-left: unset;\r\n    margin-top: 10px;\r\n    padding-left: 5px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    margin-left: 100px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst MiddleContainer1 = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\r\n    margin-left: unset;\r\n    margin-top: 10px;\r\n    display: block;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    // word-break: break-all;\r\n    // text-align: left;\r\n    //\r\n    // color: #3a3a3a;\r\n    // opacity: 1;\r\n    // display: block;\r\n    margin-left: 64px;\r\n  }\r\n`;\r\n\r\nconst HashInputData = styled.span`\r\n  color: var(--unnamed-color-2a2a2a);\r\n  white-space: nowrap;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n\r\n  color: #2a2a2a;\r\n  padding-bottom: 30px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #fff;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.75rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    padding-bottom: 20px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #fff;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #fff;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst Hash = styled.span`\r\n  white-space: nowrap;\r\n  font-family: Inter;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n\r\n  color: #252525;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #fff;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.75rem;\r\n    text-align: left;\r\n\r\n    color: #252525;\r\n    opacity: 1;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #fff;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #fff;\r\n    `}\r\n  }\r\n`;\r\nconst SpacingInputData = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  padding: 13px 0 8px 0;\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding: 11px 6px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    // height: 6.25rem;\r\n  }\r\n`;\r\nconst SpacingPrivateNode = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  // border-bottom: solid 1px #e3e7eb;\r\n  padding: 15px 0 6px 0;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding: 11px 6px;\r\n    border-bottom: none;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n  }\r\n`;\r\nconst Spacing = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 4.063rem;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    height: auto;\r\n    padding: 12px 0 17px 0;\r\n  }\r\n`;\r\nconst SpacingHash = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 4.063rem;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding: 11px 6px;\r\n    height: auto;\r\n  }\r\n`;\r\nconst HashDiv = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  padding: 16px 33px;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding-left: 10px;\r\n    // padding-right: 85px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    padding: 14px 30px;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n\r\n  width: 100%;\r\n  align-items: center;\r\n  max-width: 165px;\r\n`;\r\nconst SecondContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: 767px) {\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  width: 75.125rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  margin-bottom: 15px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    background-color: #192a59;\r\n  `}\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n  //   width: 22.563rem;\r\n  //   height: 6.813rem;\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    max-width: 41.5rem;\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\nconst DivMiddleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 35px;\r\n  margin-bottom: 36px;\r\n   @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    display: block;\r\n  }\r\n`;\r\nconst DivMiddle = styled.div`\r\n  max-width: 35.625rem;\r\n  width: 100%;\r\n  padding: 15px 25px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  // margin-bottom: 15px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    background-color: #192a59;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding: 10px;\r\n  }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    max-width: 41.5rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.span`\r\n  white-space: nowrap;\r\n  color: #2a2a2a;\r\n  box-shadow: none;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 1.5rem;\r\n  margin-top: 46px;\r\n  margin-bottom: 12px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #fff;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: Inter;\r\n    font-size: 14px;\r\n    text-align: left;\r\n    color: #252525;\r\n    margin-top: 12px;\r\n    margin-bottom: 17px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #fff;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: Inter;\r\n    font-size: 18px;\r\n    text-align: left;\r\n    color: #2a2a2a;\r\n    margin-top: 19px;\r\n    margin-bottom: 28px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #fff;\r\n    `}\r\n  }\r\n`;\r\nconst ImageViewInputData = styled.img`\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  padding-bottom: 30px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 22px;\r\n    padding-bottom: 17px;\r\n    margin-left: -4px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 22px;\r\n  }\r\n`;\r\nconst ImageView = styled.img`\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  cursor: pointer;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  // @media (min-width: 768px) and (max-width: 1240px) {\r\n  //   width: 0.875rem;\r\n  //   height: 0.875rem;\r\n  // }\r\n`;\r\nconst StatusContainer = styled.div`\r\n  max-width: 10.75rem;\r\n  width: 100%;\r\n  border-right: 1px solid #e3e7eb;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    border-right: 1px solid #4a5d94;\r\n  `}\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n  //   width: 14px;\r\n  //   height: 14px;\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    max-width: 41.5rem;\r\n    width: 100%;\r\n    border-right: none;\r\n    border-bottom: 1px solid #e3e7eb;\r\n    padding-bottom: 30px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      border-right: 1px solid #4a5d94;\r\n    `}\r\n  }\r\n`;\r\nconst StatusImgContainer = styled.div`\r\n  width: 58px;\r\n  margin: 44px auto 10px auto;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    margin: 21px auto 10px auto;\r\n  }\r\n`;\r\nconst StatusContainerInside = styled.div`\r\n  width: 100px;\r\n  margin: auto;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    padding-top: 1px;\r\n  }\r\n`;\r\nconst StatusImg = styled.img`\r\n  width: 58px;\r\n  align-item: center;\r\n`;\r\nconst StatusTextSuccess = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: center;\r\n  color: #03be46;\r\n`;\r\nconst StatusTextFailed = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: center;\r\n  color: red;\r\n`;\r\nconst SeeMoreContainer = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n`;\r\nconst SeeMoreText = styled.div`\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n\r\n  color: #4878ff;\r\n  margin-left: 4px;\r\n  margin-right: 5px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\nconst ImgSeeMore = styled.img`\r\n  display: flex;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    height: 15px;\r\n    margin-top: 2px;\r\n  }\r\n`;\r\nconst ImgSeeLess = styled.img`\r\n  display: flex;\r\n  transform: rotate(180deg);\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    height: 15px;\r\n    margin-top: 2px;\r\n  }\r\n`;\r\nconst TxnDetailsRightContainer = styled.div`\r\n  width: 100%;\r\n  padding-left: 21px;\r\n  padding-right: 25px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n`;\r\nconst TxnDetailsRightBottomContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 32px;\r\n  padding-bottom: 25px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    flex-flow: row wrap;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    flex-flow: row wrap;\r\n    padding-top: 0px;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\nconst TxnDetailsRightTopContainer = styled.div`\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  padding-top: 22px;\r\n`;\r\nconst DetailsContainer = styled.div`\r\n  display: block;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    padding-top: 29px;\r\n  }\r\n`;\r\nconst DetailsMiddleContainer = styled.div`\r\n  margin-left: 4px;\r\n  display: flex;\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n\r\n  color: #3a3a3a;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #b1c3e1;\r\n  `}\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    justify-content: space-between;\r\n    padding-top: 10px;\r\n    margin-right: 22px;\r\n  }\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: block;\r\n    padding-top: 10px;\r\n    color: #2a2a2a;\r\n    padding-right: 15px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n`;\r\nconst BlockConfirmation = styled.div`\r\n  margin-left: 4px;\r\n  display: flex;\r\n  font-family: Inter;\r\n  font-size: 13px;\r\n\r\n  color: #2149b9;\r\n  background-color: #e2eaff;\r\n  padding-left: 8px;\r\n  padding-right: 10px;\r\n  border-radius: 4px;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    border: solid 1px #3552a5;\r\n    background-color: #091b4e;\r\n    color: #4878ff;\r\n  `}\r\n`;\r\n\r\nconst DivCircle = styled.div`\r\n  max-width: 36px;\r\n  height: 36px;\r\n  width: 100%;\r\n  border-radius: 50%;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  margin: auto;\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    margin-top: 34px;\r\n    margin-bottom: 33px;\r\n  }\r\n`;\r\n\r\nconst ImgNextArrow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 12px;\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding-top: 0px;\r\n    transform: rotate(90deg);\r\n    padding-left: 17px;\r\n  }\r\n`;\r\nconst AddTagContainer = styled.div`\r\n  background-color: #4878ff;\r\n  display: flex;\r\n  width: 95px;\r\n  padding: 3px 0 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin-top: 2px;\r\n  margin-left: 4px;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\nconst ImgAddTag = styled.div`\r\n  margin-right: 4px;\r\n`;\r\nconst AddTagtext = styled.div`\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  padding: 2px 5px 3px 5px;\r\n  border-radius: 4px;\r\n  border: solid 1px #d2deff;\r\n  background-color: #eaf0ff;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n\r\n  text-align: center;\r\n  color: #4878ff;\r\n  width: fit-content;\r\n  margin-top: 2px;\r\n  margin-left: 4px;\r\n`;\r\nconst TabTag = styled.div`\r\n  width: 180px;\r\n`;\r\nconst MobileDesktopTag = styled.div`\r\n  padding-top: 10px;\r\n`;\r\nconst AddLabel = styled.div`\r\n  display: flex;\r\n`;\r\nconst AddLabelText = styled.div`\r\n  margin-right: 8px;\r\n`;\r\nconst MainContainerInteractedWith = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst MainContainerTxnAction = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ContentInteractedWith = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.935rem;\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  line-height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    line-height: 7px !important;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding-right: 10px;\r\n    padding-top: 5px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1241px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst InteractedWithNextRow = styled.div`\r\n  display: flex;\r\n`;\r\nconst TxnActionNextRow = styled.div`\r\n  display: flex;\r\n`;\r\nconst TokenTransferredMiddleContainer = styled.div`\r\n  display: flex;\r\n`;\r\nconst TokenTransferredContent = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n  margin-right: 12px;\r\n`;\r\n\r\nconst ImgInteracted = styled.img`\r\n  width: 19px;\r\n  margin-left: 13px;\r\n  margin-right: 9px;\r\n`;\r\n\r\nconst ImgProfileIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst ImgCopyGrey = styled.img`\r\n  width: 25px;\r\n`;\r\n\r\nconst ImgNextArrowLine = styled.img`\r\n  width: 18px;\r\n`;\r\nconst ImgNextRed = styled.img`\r\n  width: 18px;\r\n  margin-left: 10px;\r\n  margin-right: 20px;\r\n`;\r\nconst ImgNewLine = styled.img`\r\n  width: 25px;\r\n`;\r\n\r\nconst GreyText = styled.span`\r\n  color: #9fa9ba;\r\n  margin-left: 2px;\r\n`;\r\n\r\nconst BlackText = styled.span`\r\n  color: #2a2a2a;\r\n  margin-left: 2px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #ffffff;\r\n  `}\r\n`;\r\n\r\nconst BlueText = styled.span`\r\n  color: #2149b9;\r\n  margin-left: 2px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #4878ff;\r\n  `}\r\n`;\r\n\r\nconst Gap1 = styled.span`\r\n  margin-left: 15px;\r\n`;\r\nconst Gap2 = styled.span`\r\n  margin-left: 30px;\r\n`;\r\nconst SpacingInteractedWith = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 7rem;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n  border-bottom: solid 1px #4a5d94;\r\n`}\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    height: auto;\r\n    padding: 12px 0 17px 0;\r\n  }\r\n`;\r\nconst SpacingTxnAction = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 7rem;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n  border-bottom: solid 1px #4a5d94;\r\n`}\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    height: auto;\r\n    padding: 12px 0 17px 0;\r\n  }\r\n`;\r\n\r\n\r\nconst ContainerInteractedWith = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  max-width: 165px;\r\n  margin-top: -40px;\r\n`;\r\nconst ContainerTxnAction = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  max-width: 165px;\r\n  margin-top: -40px;\r\n`;\r\n","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  CoinMarketExchangeForToken,\r\n  getTokenLists,\r\n  getTotalToken,\r\n  getSomeDaysHolders,\r\n  getTokenSearch,\r\n  getHolderDetailsUsingAddressforToken,\r\n  getTransferTransactionDetailsUsingHash,\r\n  getTotalTransferTransactionsForToken,\r\n  getListOfTransferTransactionsForToken,\r\n  getListOfHoldersForToken,\r\n  getListOfTokenForAddress,getTokenTransactions,\r\n};\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\n\r\nasync function CoinMarketExchangeForToken(data) {\r\n  let url = process.env.REACT_APP_GET_TOKEN_MARKETCAP + \"/\" + data;\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenLists(data) {\r\n  let url = process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL + httpConstants.API_END_POINT.GET_TOKEN_LIST;//\"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage;\r\n  // let url = \"http://localhost:3007/getListOfTokens\";\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getSomeDaysHolders(path, data) {\r\n  let url = process.env.REACT_APP_GET_SOME_DAYS_HOLDERS + path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenSearch(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TOKEN_SEARCH +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage +\r\n    \"&data=\" +\r\n    data.searchkey;\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTotalToken() {\r\n  let url = process.env.REACT_APP_GET_TOTAL_TOKEN;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getListOfTransferTransactionsForToken(data) {\r\n  // let url = \"http://localhost:3005/getListOfTransferTransactionsForToken/\"+data.addr;\r\n  let url = process.env.REACT_APP_GET_LIST_OF_TRANSFER_FOR_TOKEN + data.addr;\r\n  delete data.addr;\r\n    //+ \"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage + (data.searchValue ? \"&searchValue=\" + data.searchValue : \"\") + (data.startDate ? \"&startDate=\" + data.startDate : \"\");\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getTokenTransactions(data) {\r\n  let url = process.env.REACT_APP_GET_TOKEN_TRANSACTION + data.address;\r\n   // let url = \"http://localhost:3007/getListOfHoldersForToken/\"+data.address;\r\n   delete data.address;\r\n return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n   .then((response) => {\r\n     if (\r\n       !response.success ||\r\n       response.responseCode !== 200 ||\r\n       !response.responseData ||\r\n       response.responseData.length === 0\r\n     )\r\n       return Promise.reject();\r\n     return Promise.resolve(response.responseData);\r\n   })\r\n   .catch(function (err) {\r\n     return Promise.reject(err);\r\n   });\r\n}\r\nasync function getTotalTransferTransactionsForToken(data) {\r\n    let url = process.env.REACT_APP_GET_TOTAL_TRANSFER_FOR_TOKEN + data.addr + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\r\n        + (data.startDate ? (data.searchValue ? \"&startDate=\" : \"?startDate=\") + data.startDate : \"\");\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getListOfHoldersForToken(data) {\r\n   let url = process.env.REACT_APP_GET_LIST_OF_HOLDERS_FOR_TOKEN + data.address;\r\n    // let url = \"http://localhost:3007/getListOfHoldersForToken/\"+data.address;\r\n    delete data.address;\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getTransferTransactionDetailsUsingHash(path, data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSFER_TRANSACTION_DETAIL_USING_ADDRESS + path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getListOfTokenForAddress(path, data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_LIST_OF_TOKENS_FOR_ADDRESS+ path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getHolderDetailsUsingAddressforToken(data) {\r\n  let url = process.env.REACT_APP_GET_HOLDER_DETAIL_USING_ADDRESS_FOR_TOKEN\r\n  // let url = \"http://localhost:3007/getHolderDetailsUsingAddress\"\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n"],"sourceRoot":""}