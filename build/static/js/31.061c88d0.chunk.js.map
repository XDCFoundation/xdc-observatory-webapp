{"version":3,"sources":["../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","modules/common/dialog/privateAddressTag.js","assets/images/label.svg","modules/common/dialog/privateNote.js","modules/resp_transaction/resTransaction.js"],"names":["DialogTitle","React","props","ref","children","classes","className","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","root","Typography","component","variant","withStyles","margin","padding","flex","name","useStyles","makeStyles","theme","add","backgroundColor","marginLeft","value","width","cross","marginTop","fontWeight","dialog","height","borderRadius","buttons","input","border","marginBottom","outline","addbtn","color","cnlbtn","subCategory","fontfamily","fontsize","fontweight","forgotpass","createaccount","icon","xdc","heading","dialogBox","position","top","error1","error2","fontSize","marginRight","maxWidth","FormDialog","open","onClose","useState","privateAddress","setPrivateAddress","errorEmptyField","setErrorEmptyField","error","setError","errorTag","setErrorTag","a","tags","length","genericConstants","ENTER_REQUIRED_FIELD","slice","data","userId","sessionManager","getDataFromCookies","address","tagName","modifiedOn","Date","now","taggedAddress","localStorage","getItem","cookiesConstants","USER_TAGGED_ADDRESS","JSON","parse","existingTagsIndex","find","item","index","push","setItem","stringify","utility","apiSuccessToast","useEffect","fromAddr","toAddr","setInput","Dialog","paperWidthSm","aria-labelledby","id","DialogContent","DialogContentText","onChange","e","target","readOnly","DialogActions","onClick","module","exports","btn","textAlign","background","textarea","resize","fontFamily","notifyLabel","transactionsHash","setTransactionsHash","privateNote","setPrivateNote","privateNoteError","setPrivateNoteError","trxLable","transactionHash","transactionLabel","USER_TRASACTION_LABELS","existingIndex","getListOfTxnLabel","getTotalCountTxnLabel","hash","pvtNote","type","style","paddingLeft","paddingRight","rowDiv","alignItems","justifyContent","mainContainer","mainContainerDark","connect","state","dispatchAction","_handleChange","useParams","transactions","setTransactions","setIsPvtNote","setAddressTag","setAddressTagTo","setIsTag","setIsTagTo","amount","setAmount","copiedText","setCopiedText","fromAddress","setFromAddress","toAddress","setToAddress","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","dialogPvtTagIsOpen","setDialogPvtTagIsOpen","dialogValue","setDailogValue","dialogValue2","setDailogValue2","dialogPvtTagIsOpen2","setDialogPvtTagIsOpen2","dialogPvtNoteIsOpen","setDialogPvtNoteIsOpen","loginDialogIsOpen","setLoginDialogIsOpen","openDialogPvtTag","scrollTo","closeDialogPvtTag","openDialogPvtTag2","closeDialogPvtTag2","openDialogPvtNote","closeDialogPvtNote","isLoading","setLoading","timeStamp","setTimeStamp","price","setPrice","latestBlock","setLatestBlock","isSeeMore","setSeeMore","transactionDetail","getLatestBlock","privateNoteUsingHash","urlPath","Utils","parseResponse","TransactionService","getTransactionDetailsUsingHash","transactiondetailusinghash","undefined","timestamp","tagUsingAddressFrom","tagUsingAddressTo","from","to","BlockService","latestBlocks","ts","parseInt","getCoinMarketDetailForTransaction","CurrencyValue","userInfo","existingTransactionLabel","response","taggedAddressFetched","tagValue","filter","obj","addrTagFrom","addrTagTo","tagValueFrom","sub","tagValueTo","pvtNotehash","pvtNoteLocal","pvtNoteValue","gasprovided","currencySymbol","valueFetch","txfee","decimalDivison","gasPrice","gasUsed","txnFee","parseFloat","toFixed","replace","txnFee1","toString","split","txnFee2","transactionFetch","fetchtxn","fetchtxn1","fetchtxn2","gasP","gasPrice1","gasPrice2","avgTxnFeeConverted","avgTxnFeeFetch","avgTxnFeeFetch1","avgTxnFeeFetch2","transactionValue","valueDiv","ValueMain","bx","number","blockNumber","timezone","useSelector","currentTheme","Container","Heading","Div","status","StatusContainer","StatusContainerInside","StatusImgContainer","StatusImg","src","StatusTextSuccess","StatusTextFailed","TxnDetailsRightContainer","TxnDetailsRightTopContainer","align","title","ImageView","Hash","DetailsMiddleContainer","isTextArea","ContentHash","text","onCopy","placement","require","TxnDetailsRightBottomContainer","DetailsContainer","moment","tz","format","Utility","getUtcOffset","Content","href","BlockConfirmation","DivMiddleContainer","DivMiddle","display","TabTag","Tag","AddTagContainer","ImgAddTag","AddTagtext","MobileDesktopTag","DivCircle","ImgNextArrow","contractAddress","Div__","Spacing","MiddleContainer","TokenTransferredMiddleContainer","TokenTransferredContent","BlackText","GreyText","BlueText","ImgProfileIcon","SpacingTxnAction","ContainerTxnAction","MainContainerTxnAction","TxnActionNextRow","size","ImgNextRed","Gap1","Gap2","SpacingInteractedWith","ContainerInteractedWith","MainContainerInteractedWith","ContentInteractedWith","ImgInteracted","ImgCopyGrey","InteractedWithNextRow","ImgNewLine","gas","nonce","SpacingInputData","ImageViewInputData","HashInputData","MiddleContainerInputData","SeeMoreContainer","SeeMoreText","ImgSeeLess","ImgSeeMore","SpacingPrivateNode","MiddleContainerPrivateNote","AddLabel","AddLabelText","PrivateText","dataHashOrAddress","cursor","event","currency","styled","div","p","span","img"],"mappings":"2TAeIA,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAwBL,EAAMM,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAQC,YAAyBR,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAoBD,gBAAoB,MAAOU,YAAS,CACtDL,UAAWM,YAAKP,EAAQQ,KAAMP,GAC9BH,IAAKA,GACJM,GAAQD,EAAoBJ,EAAwBH,gBAAoBa,IAAY,CACrFC,UAAW,KACXC,QAAS,MACRZ,OA8BUa,cApDK,CAElBJ,KAAM,CACJK,OAAQ,EACRC,QAAS,YACTC,KAAM,aA+CwB,CAChCC,KAAM,kBADOJ,CAEZjB,G,uDC/CGsB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,gBAAiB,UACjBC,WAAY,QAEdC,MAAO,CACLC,MAAO,oBAETC,MAAO,CACLC,UAAW,OACXJ,WAAY,OACZK,WAAY,OAEdC,OAAQ,CACNN,WAAY,MACZI,UAAW,MACXF,MAAO,iBACPK,OAAQ,iBACRC,aAAc,mBAEhBC,QAAS,CACPjB,QAAS,qBAEXkB,MAAO,CACLR,MAAO,QACPK,OAAQ,OACRI,OAAQ,oBACRZ,gBAAiB,UACjBS,aAAc,MACdhB,QAAS,OACToB,aAAc,OACdC,QAAS,QAEXC,OAAQ,CACNZ,MAAO,QACPK,OAAQ,OACRhB,OAAQ,qBACRC,QAAS,oBACTgB,aAAc,MACdT,gBAAiB,UACjBgB,MAAO,SAETC,OAAQ,CACNd,MAAO,OACPK,OAAQ,OACRC,aAAc,MACdT,gBAAiB,UACjBgB,MAAO,QAEPxB,OAAQ,oBACRC,QAAS,qBAEXyB,YAAa,CACXb,UAAW,QACXQ,aAAc,MACdM,WAAY,QACZC,SAAU,OACVC,WAAY,MACZT,OAAQ,kBACRI,MAAO,WAETM,WAAY,CACVN,MAAO,UACPf,WAAY,SAEdsB,cAAe,CACbP,MAAO,UACPf,WAAY,OACZkB,WAAY,QACZC,SAAU,QAEZI,KAAM,CACJvB,WAAY,SAEdwB,IAAK,CACHT,MAAO,UACPf,WAAY,OACZkB,WAAY,QACZC,SAAU,OAEZM,QAAS,CACPrB,UAAW,MACXQ,aAAc,MACdM,WAAY,QACZE,WAAY,MACZL,MAAO,WAETW,UAAW,CACTxB,MAAO,QACPyB,SAAU,WACVC,IAAK,QACLpB,aAAc,QAEhBqB,OAAQ,CACNd,MAAO,MACPf,WAAY,OAEd8B,OAAQ,CACNf,MAAO,MACPf,WAAY,OACZI,UAAW,SAEb,4BAA6B,CAC3BqB,QAAS,CACPM,SAAU,QAEZL,UAAW,CACTxB,MAAO,OACP0B,IAAK,OACLpB,aAAc,iBACdR,WAAY,OACZgC,YAAa,OACbzB,OAAQ,QAEVG,MAAO,CACLuB,SAAU,QACV/B,MAAO,aAKE,SAASgC,EAAW3D,GACjC,IAAQ4D,EAAkB5D,EAAlB4D,KAAMC,EAAY7D,EAAZ6D,QACd,EAA4C9D,IAAM+D,WAAlD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA8BjE,IAAM+D,UAAS,GAA7C,mBACA,GADA,UAC8C/D,IAAM+D,SAAS,KAA7D,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA0BnE,IAAM+D,SAAS,IAAzC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCrE,IAAM+D,SAAS,IAA/C,mBAAOO,EAAP,KAAiBC,EAAjB,KANwC,4CAgBxC,gCAAAC,EAAA,yDACEH,EAAS,IACTE,EAAY,IACZJ,EAAmB,IACdH,GAAmB5B,GAAyB,IAAhBqC,EAAKC,OAJxC,uBAKIP,EAAmBQ,IAAiBC,sBALxC,6BAQOZ,EARP,iBASIK,EAASM,IAAiBC,sBAT9B,2BAUcxC,EAVd,iBAWImC,EAAYI,IAAiBC,sBAXjC,2BAaMZ,GAA4C,KAA1BA,EAAeU,QACF,QAA/BV,EAAea,MAAM,EAAG,GAd9B,wBAgBIR,EAAS,8DAhBb,2BAkBajC,EAAMsC,OAAS,GACxBH,EAAY,gDAERO,EAAO,CACXC,OAAQC,IAAeC,mBAAmB,UAC1CC,QAASlB,EACTmB,QAAS/C,EACTgD,WAAYC,KAAKC,QAWfC,EAAgBC,aAAaC,QAC/BX,EAAKC,OAASW,IAAiBC,uBAG/BJ,EAAgBK,KAAKC,MAAMN,GACvBO,EAAkB,KACFP,EAAcQ,MAChC,SAACC,EAAKC,GACJ,GAAGD,EAAKd,SAAWlB,GAAkBgC,EAAKjB,QAAUD,EAAKC,OAEvD,OADAe,EAAoBG,GACb,KAMXV,EAAcO,GAAmBX,QAAU/C,EAI3CmD,EAAcW,KAAKpB,KAGrBS,EAAgB,IACFW,KAAKpB,GAGrBU,aAAaW,QACXrB,EAAKC,OAASW,IAAiBC,oBAC/BC,KAAKQ,UAAUb,IAEjBc,IAAQC,gBAAgB,aACxBxC,KApEF,6CAhBwC,sBAQxC9D,IAAMuG,WAAU,WACO,KAAZ,OAALtG,QAAK,IAALA,OAAA,EAAAA,EAAO0B,SAAP,OAAsB1B,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOuG,UAC/BvC,EAAiB,OAAChE,QAAD,IAACA,OAAD,EAACA,EAAOuG,UAEzBvC,EAAiB,OAAChE,QAAD,IAACA,OAAD,EAACA,EAAOwG,UAE1B,CAACxG,IAyEuBuF,aAAaC,QACtCC,IAAiBC,qBADnB,IAIA,EAA0B3F,IAAM+D,SAAS,IAAzC,mBAAO3B,EAAP,KAAcsE,EAAd,KACA,EAAwB1G,IAAM+D,SAAS,IAAvC,mBAAOU,EAAP,KACA,GADA,KAC0CzE,IAAM+D,UAAS,IAAzD,mBAgDM3D,GAhDN,UAgDgBiB,KAEhB,OACE,6BACE,kBAACsF,EAAA,EAAD,CAEEvG,QAAS,CAAEwG,aAAcxG,EAAQgD,WACjCS,KAAMA,EACNgD,kBAAgB,qBAEhB,6BACA,kBAAC,MAAD,KACE,kBAAC,EAAD,CAAaxG,UAAWD,EAAQ+C,QAAS2D,GAAG,qBAA5C,0BAID5C,EACG,yBAAK7D,UAAWD,EAAQoD,QAASU,GAEjC,qCAEJ,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB3G,UAAWD,EAAQuC,aAAtC,WAGA,2BACEhB,MAAOqC,EAEP3D,UAAWD,EAAQgC,MACnB6E,SAAU,SAACC,GACTjD,EAAkBiD,EAAEC,OAAOxF,OAC3B0C,EAAS,KAEX+C,UAAQ,IAEThD,EAAQ,yBAAK/D,UAAWD,EAAQgE,OAAQA,GAAe,sCAE1D,kBAAC2C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB3G,UAAWD,EAAQuC,aAAtC,YAGA,yBAAKtC,UAAU,gBAOb,2BACIsB,MAAOS,EAGP6E,SAjGG,SAACC,GAChB3C,EAAY,IACZ,IAAQ5C,EAAUuF,EAAEC,OAAZxF,MACR+E,EAAS/E,OAiGF2C,EACG,yBAAKjE,UAAWD,EAAQmD,QAASe,GAEjC,sCAQN,kBAAC+C,EAAA,EAAD,CAAehH,UAAWD,EAAQ+B,SAChC,8BACE,4BAAQ9B,UAAWD,EAAQsC,OAAQ4E,QAASxD,GAA5C,WAIF,8BACE,4BAAQzD,UAAWD,EAAQoC,OAAQ8E,QAtNL,4CAsN9B,c,qBC7VZC,EAAOC,QAAU,IAA0B,mC,6MCYrCnG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,gBAAiB,UACjBC,WAAY,QAEd+F,IAAK,CACHC,UAAW,QACXxG,QAAS,MACTmB,OAAQ,kBACRsF,WAAY,OACZ,UAAW,CAAEA,WAAY,SAE3BjF,OAAQ,CACNd,MAAO,OACPK,OAAQ,OACRC,aAAc,MACdT,gBAAiB,UACjBgB,MAAO,QAEPxB,OAAQ,oBACRC,QAAS,qBAEXiB,QAAS,CACPjB,QAAS,sBAEXS,MAAO,CACLC,MAAO,oBAETC,MAAO,CACLC,UAAW,OACXJ,WAAY,OACZK,WAAY,OAEdC,OAAQ,CACNN,WAAY,MACZI,UAAW,MACXF,MAAO,iBACPK,OAAQ,iBACRC,aAAc,mBAGhBkC,MAAO,CACL3B,MAAO,MACPf,WAAY,MACZI,UAAW,SAEbyB,OAAQ,CACNd,MAAO,MACPf,WAAY,OACZI,UAAW,SAGbM,MAAO,CACLR,MAAO,QACPK,OAAQ,OACRI,OAAQ,oBACRZ,gBAAiB,UACjBS,aAAc,MACdK,QAAS,OACTrB,QAAS,OACToB,aAAc,QAEhBsF,SAAU,CACRhG,MAAO,QACPK,OAAQ,OACRI,OAAQ,oBACRZ,gBAAiB,UACjBS,aAAc,MACdhB,QAAS,OACTqB,QAAS,OACTsF,OAAQ,QAGVrF,OAAQ,CACNZ,MAAO,QACPK,OAAQ,OACRhB,OAAQ,qBACRC,QAAS,oBACTgB,aAAc,MACdT,gBAAiB,UACjBgB,MAAO,SAETE,YAAa,CACXb,UAAW,QACXQ,aAAc,MACdwF,WAAY,QACZrE,SAAU,OACVhB,MAAO,UACPV,WAAY,MACZM,OAAQ,mBAEVU,WAAY,CACVN,MAAO,UACPf,WAAY,SAEdsB,cAAe,CACbP,MAAO,UACPf,WAAY,OACZkB,WAAY,QACZC,SAAU,QAEZI,KAAM,CACJvB,WAAY,SAEdwB,IAAK,CACHT,MAAO,UACPf,WAAY,OACZkB,WAAY,QACZC,SAAU,OAEZM,QAAS,CACPrB,UAAW,OACXQ,aAAc,OACdZ,WAAY,OACZoG,WAAY,QACZ/F,WAAY,MACZ0B,SAAU,OACVhB,MAAO,WAETW,UAAW,CACTxB,MAAO,QACPyB,SAAU,WACVC,IAAK,QACLpB,aAAc,QAEhB,4BAA6B,CAC3BiB,QAAS,CACPM,SAAU,QAEZL,UAAW,CACTxB,MAAO,QACP0B,IAAK,QAEPlB,MAAO,CACLuB,SAAU,QACV/B,MAAO,QAETmG,YAAa,CACXtE,SAAU,OACV7B,MAAO,SAETgG,SAAU,CACRjE,SAAU,QACV/B,MAAO,OACPV,QAAS,aAKA,SAAS0C,EAAW3D,GACjC,IAAQ4D,EAAkB5D,EAAlB4D,KAAMC,EAAY7D,EAAZ6D,QACd,EAAgD9D,IAAM+D,SAAS,IAA/D,mBAAOiE,EAAP,KAAyBC,EAAzB,KACA,EAAsCjI,IAAM+D,SAAS,IAArD,mBAAOmE,EAAP,KAAoBC,EAApB,KACA,EAA0BnI,IAAM+D,SAAS,IAAzC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgDrE,IAAM+D,SAAS,IAA/D,mBAAOqE,EAAP,KAAyBC,EAAzB,KACA,EAA8CrI,IAAM+D,SAAS,IAA7D,mBAAOG,EAAP,KAAwBC,EAAxB,KANwC,4CAYxC,gCAAAK,EAAA,yDACEH,EAAS,IACTgE,EAAoB,IACpBlE,EAAmB,IACd6D,GAAqBE,EAJ5B,uBAKM/D,EAAmB,gCALzB,6BAQO6D,EARP,iBASI3D,EAAS,+BATb,2BAUc6D,EAVd,iBAWIG,EAAoB,uCAXxB,2BAaML,GAAgD,KAA5BA,EAAiBtD,QACL,MAAhCsD,EAAiBnD,MAAM,EAAG,GAdhC,iBAgBIR,EAAS,4BAhBb,6BAiBa6D,EAAYxD,OAAS,KAjBlC,iBAkBI2D,EAAoB,+DAlBxB,+BAoBQvD,EAAO,CACXC,OAAQC,IAAeC,mBAAmB,UAC1CqD,SAAUJ,EACVK,gBAAiBP,EACjB5C,WAAYC,KAAKC,QAGfkD,EAAmBhD,aAAaC,QAChCX,EAAKC,OAAOW,IAAiB+C,0BAG/BD,EAAmB5C,KAAKC,MAAM2C,GAC1BE,EAAgB,KACaF,EAAiBzC,MAChD,SAACC,EAAMC,GACN,GAAGD,EAAKuC,iBAAmBP,GAAoBhC,EAAKjB,QAAUD,EAAKC,OAElE,OADA2D,EAAgBzC,EACTD,KAITwC,EAAiBE,GAAiB5D,EAIlC0D,EAAiBtC,KAAKpB,KAExB0D,EAAmB,IACFtC,KAAKpB,GAGxBU,aAAaW,QACTrB,EAAKC,OAAOW,IAAiB+C,uBAC/B7C,KAAKQ,UAAUoC,IAEjBnC,IAAQC,gBAAgB,qBACxBxC,IAxDF,UAyDQ7D,EAAM0I,oBAzDd,yBA0DQ1I,EAAM2I,wBA1Dd,QA2DEX,EAAoB,IACpBE,EAAe,IA5DjB,6CAZwC,sBAQxCnI,IAAMuG,WAAU,WACd0B,EAAoBhI,EAAM4I,MAC1BV,EAAelI,EAAM6I,WACpB,CAAC7I,IAiEJ,IAAMG,EAAUiB,IAEhB,OACE,6BACE,kBAAC,IAAD,CACEhB,UAAWD,EAAQ4B,OACnB5B,QAAS,CAAEwG,aAAcxG,EAAQgD,WACjCS,KAAMA,EACNgD,kBAAgB,qBAEhB,kBAAC,MAAD,KACE,yBAAKxG,UAAWD,EAAQ+C,QAAS2D,GAAG,qBAApC,0BAID5C,EAAkB,yBAAK7D,UAAWD,EAAQmD,QAASW,GAAyB,qCAC7E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmB7D,UAAWD,EAAQuC,aAAtC,oBAGA,2BACEoG,KAAK,OACLpH,MAAOqG,EACP3H,UAAWD,EAAQgC,MACnB6E,SAAU,SAACC,GAAD,OAAOe,EAAoBf,EAAEC,OAAOxF,UAE/CyC,EAAQ,yBAAK/D,UAAWD,EAAQgE,OAAQA,GAAe,sCAE1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmB/D,UAAWD,EAAQuC,aAAtC,0BAGA,8BACEoG,KAAK,OACL1I,UAAWD,EAAQwH,SACnBjG,MAAOuG,EACPjB,SAAU,SAACC,GAAD,OAAOiB,EAAejB,EAAEC,OAAOxF,WAG5CyG,EACG,yBAAK/H,UAAWD,EAAQmD,QAAS6E,GAEjC,qCAEJ,kBAAC,IAAD,CAAe/H,UAAWD,EAAQ+B,SAChC,0BAAM6G,MAAO,CAAEvG,MAAO,UACpB,4BAAQpC,UAAWD,EAAQsC,OAAQ4E,QAASxD,GACzC,IADH,WAKF,8BACE,4BAAQzD,UAAWD,EAAQoC,OAAQ8E,QAhIL,4CAgI9B,a,gfCzQNjG,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCX,KAAM,CACJ+C,SAAU,YAEVD,YAAa,OACbhC,WAAY,OACZY,aAAc,QAEdV,MAAO,OACP,iDAAkD,CAChD+B,SAAU,YACVsF,YAAa,MACbC,aAAc,OAEhB,oDAAqD,CACnDvF,SAAU,YAGdwF,OAAQ,CACNvH,MAAO,OACPwH,WAAY,SACZnH,OAAQ,OACR0F,WAAY,sCACZzF,aAAc,MAEdmH,eAAgB,iBAGlBC,cAAe,CACb1H,MAAO,QAET2H,kBAAmB,CACjB3H,MAAO,OACPH,gBAAiB,eA4sCN+H,wBAHS,SAACC,GACvB,MAAO,CAAElI,MAAOkI,EAAMlI,SAEgB,CAAEmI,qBAA3BF,EAxsCf,cAAuBG,cAAvB,IAAqCpI,EAArC,EAAqCA,MAArC,mBAA+C,IAAD,sBACtCnB,EAAUiB,KACRwH,EAASe,eAATf,KACR,EAAwC9E,qBAAS,GAAjD,oBAAO8F,EAAP,KAAqBC,EAArB,KACA,EAAkC/F,qBAAS,GAA3C,oBAAkBgG,GAAlB,WACA,EAAsChG,oBAAS,IAA/C,oBAAOmE,EAAP,KAAoBC,EAApB,KACA,EAAoCpE,oBAAS,IAA7C,oBAAmBiG,GAAnB,WACA,EAAwCjG,oBAAS,IAAjD,oBAAqBkG,GAArB,WACA,EAA0BlG,qBAAS,GAAnC,oBAAcmG,GAAd,WACA,EAA8BnG,qBAAS,GAAvC,oBAAgBoG,GAAhB,WACA,EAA4BpG,oBAAS,IAArC,oBAAOqG,EAAP,KAAeC,EAAf,KACA,EAAoCtG,oBAAS,IAA7C,oBAAOuG,EAAP,KAAmBC,EAAnB,KACA,EAAsCxG,oBAAS,IAA/C,oBAAOyG,EAAP,KAAoBC,EAApB,KACA,EAAkC1G,oBAAS,IAA3C,oBAAO2G,EAAP,KAAkBC,GAAlB,KAEA,SAASC,KACP,MAAmDC,OACnD,MAAO,CACLjJ,MAFF,EAAQkJ,WAGN7I,OAHF,EAA2B8I,aAO7B,OAAgD/K,KAAM+D,SACpD6G,MADF,sBAAOI,GAAP,MAAyBC,GAAzB,MAIAjL,KAAMuG,WAAU,WACd,SAAS2E,IACPD,GAAoBL,MAItB,OADAC,OAAOM,iBAAiB,SAAUD,GAC3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACjD,IACH,IAAQtJ,GAAUoJ,GAAVpJ,MAER,GAAoD5B,KAAM+D,UAAS,GAAnE,sBAAOsH,GAAP,MAA2BC,GAA3B,MACA,GAAsCtL,KAAM+D,SAAS,GAArD,sBAAOwH,GAAP,MAAoBC,GAApB,MACA,GAAwCxL,KAAM+D,SAAS,GAAvD,sBAAO0H,GAAP,MAAqBC,GAArB,MACA,GAAsD1L,KAAM+D,UAAS,GAArE,sBAAO4H,GAAP,MAA4BC,GAA5B,MACA,GAAsD5L,KAAM+D,UAAS,GAArE,sBAAO8H,GAAP,MAA4BC,GAA5B,MACA,GAAkD9L,KAAM+D,UAAS,GAAjE,sBAAOgI,GAAP,MAA0BC,GAA1B,MAEMC,GAAmB,WACvBpB,OAAOqB,SAAS,EAAG,GACnBZ,IAAsB,GACtBE,GAAe,IAEXW,GAAoB,WACxBb,IAAsB,GACtBE,GAAe,IAEXY,GAAoB,WACxBvB,OAAOqB,SAAS,EAAG,GACnBN,IAAuB,GACvBF,GAAgB,IAEZW,GAAqB,WACzBT,IAAuB,GACvBF,GAAgB,IAEZY,GAAoB,kBAAMR,IAAuB,IACjDS,GAAqB,kBAAMT,IAAuB,IAGxD,GAAgC/H,qBAAS,GAAzC,sBAAOyI,GAAP,MAAkBC,GAAlB,MACA,GAAkC1I,sBAAlC,sBAAO2I,GAAP,MAAkBC,GAAlB,MACA,GAA0B5I,oBAAS,IAAnC,sBAAO6I,GAAP,MAAcC,GAAd,MACA,GAAsC9I,oBAAS,GAA/C,sBAAO+I,GAAP,MAAoBC,GAApB,MACA,GAAgChJ,qBAAS,GAAzC,sBAAOiJ,GAAP,MAAkBC,GAAlB,MACA1G,qBAAS,wBAAC,uBAAA/B,EAAA,sEACF0I,KADE,OAERC,KACAC,KAHQ,2CAIP,IAEH,IAAMF,GAAiB,yCAAG,qCAAA1I,EAAA,6DACpB6I,EADoB,UACPxE,GADO,SAEwByE,KAAMC,cACpDC,KAAmBC,+BAA+BJ,EAAS,KAHrC,uCAEnBjJ,EAFmB,MAEZsJ,EAFY,OAOgB,IAAtCA,EAA2BhJ,aACIiJ,IAA/BD,GAC+B,KAA/BA,GAC+B,OAA/BA,GAEAjB,IAAW,IAETrI,GAAUsJ,EAdU,mDAexB5D,EAAgB4D,GAChBf,GAAY,OAACe,QAAD,IAACA,OAAD,EAACA,EAA4BE,WACzCnB,IAAW,GAEXoB,GAAoBH,GACpBI,GAAkBJ,GAClBjD,EAAeiD,EAA2BK,MAC1CpD,GAAa+C,EAA2BM,IAtBhB,4CAAH,qDAwBjBb,GAAc,yCAAG,mCAAA3I,EAAA,4DACP,kBADO,SAEa8I,KAAMC,cACtCU,KAAad,eAFD,kBAEyB,KAHlB,uCAEhB/I,EAFgB,KAET8J,EAFS,MAKjB9J,GAAU8J,EALO,iDAOrBnB,GAAemB,GAPM,4CAAH,qDASpB3H,sBAAU,WACR,IAAI4H,EAAKC,SAAS1B,IAClB2B,GAAkCF,KACjC,CAACzB,KACJnG,sBAAU,WACR,IAAI4H,EAAKC,SAAS1B,IAClB2B,GAAkCF,KACjC,CAAC/D,IACJ,IAAMiE,GAAiC,yCAAG,WAAOF,GAAP,0BAAA3J,EAAA,6DACpC6I,EAAU,oBAAsBc,EAAK,cAAgBG,GADjB,SAEQhB,KAAMC,cACpDC,KAAmBa,kCAAkChB,EAAS,KAHxB,uCAEnCjJ,EAFmC,KAE5BsJ,EAF4B,MAKpCtJ,GAAUsJ,EAL0B,iDAMxCb,GAAQ,UAACa,EAA2B,UAA5B,aAAC,EAA+Bd,OANA,4CAAH,sDASjC2B,GAAWvJ,KAAeC,mBAAmB,YAE7CmI,GAAoB,yCAAG,iCAAA5I,EAAA,yDACrBM,EAAO,CACXyD,gBAAgB,GAAD,OAAKM,GACpB9D,OAAQC,KAAeC,mBAAmB,WAExCuD,EAAmBhD,aAAaC,QAClCX,EAAKC,OAASW,KAAiB+C,yBAEjCD,EAAmB5C,KAAKC,MAAM2C,KACJA,EAAiB9D,OAThB,kDAWrB8J,EAA2BhG,EAAiBzC,MAChD,SAACC,GAAD,OACEA,EAAKuC,iBAAmBzD,EAAKyD,iBAC7BvC,EAAKjB,QAAUD,EAAKC,aAGtBoD,EAAeqG,GACfzE,GAAa,IAlBY,2CAAH,qDAsBpBpB,GAAoB,WACxByE,MAGIS,GAAmB,yCAAG,WAAOY,GAAP,sBAAAjK,EAAA,sDACpBM,EAAO,CACXI,QAASuJ,EAASV,KAClBhJ,OAAQC,KAAeC,mBAAmB,WAMxCyJ,EAAuBlJ,aAAaC,QACtCX,EAAKC,OAASW,KAAiBC,qBAE7BlB,EACFiK,GAAwBA,EAAqBhK,OAAS,EAClDkB,KAAKC,MAAM6I,GACX,IACAC,EACJlK,GAAQA,EAAKC,OAAS,EAAtB,OACID,QADJ,IACIA,OADJ,EACIA,EAAMmK,QACJ,SAACC,GAAD,OAASA,EAAI3J,UAAYJ,EAAKI,SAAW2J,EAAI9J,QAAUD,EAAKC,UAE9D,KACU4J,EAASjK,SACvBsF,EAAc2E,EAAS,IACvBzE,GAAS,IAxBe,2CAAH,sDA4BnB4D,GAAiB,yCAAG,WAAOW,GAAP,sBAAAjK,EAAA,sDAClBM,EAAO,CACXI,QAASuJ,EAAST,GAClBjJ,OAAQC,KAAeC,mBAAmB,WAOxCyJ,EAAuBlJ,aAAaC,QACtCX,EAAKC,OAASW,KAAiBC,qBAE7BlB,EACFiK,GAAwBA,EAAqBhK,OAAS,EAClDkB,KAAKC,MAAM6I,GACX,IACAC,EACJlK,GAAQA,EAAKC,OAAS,EAAtB,OACID,QADJ,IACIA,OADJ,EACIA,EAAMmK,QACJ,SAACC,GAAD,OAASA,EAAI3J,UAAYJ,EAAKI,SAAW2J,EAAI9J,QAAUD,EAAKC,UAE9D,KACU4J,EAASjK,SACvBuF,EAAgB0E,EAAS,IACzBxE,GAAW,IAzBW,2CAAH,sDA8BnB2E,GAActE,EACduE,GAAYrE,EAEZnF,GAAgBC,aAAaC,QAC/BT,KAAeC,mBAAmB,UAChCS,KAAiBC,qBAEjBlB,GACFc,IAAiBA,GAAcb,OAAS,EAAIkB,KAAKC,MAAMN,IAAiB,GACtEyJ,GACFvK,IAAQA,GAAKC,OAAS,EAAtB,OACID,SADJ,IACIA,QADJ,EACIA,GAAMmK,QACJ,SAACC,GAAD,OAASA,EAAI3J,UAAY4J,IAAeD,EAAI9J,SAAWwJ,GAASU,OAElE,GACFC,GACFzK,IAAQA,GAAKC,OAAS,EAAtB,OACID,SADJ,IACIA,QADJ,EACIA,GAAMmK,QACJ,SAACC,GAAD,OAASA,EAAI3J,UAAY6J,IAAaF,EAAI9J,SAAWwJ,GAASU,OAEhE,GAIFE,GAAW,UAAMtG,GACjBuG,GAAe5J,aAAaC,QAC9BC,KAAiB+C,wBAGfK,GACFsG,IAAgBA,GAAa1K,OAAS,EAAIkB,KAAKC,MAAMuJ,IAAgB,GACnEC,GACFvG,IAAWA,GAAQpE,OAAS,EAA5B,OACIoE,SADJ,IACIA,QADJ,EACIA,GAAS8F,QACP,SAACC,GAAD,OACEA,EAAItG,kBAAoB4G,IAAeN,EAAI9J,SAAWwJ,GAASU,OAEnE,GAeAK,GAAW,oKAajB,IAAIhB,GAAgBzD,OAAOrF,aAAaC,QAAQ,YAC1C8J,GACc,QAAlBjB,GAA0B,SAAwB,QAAlBA,GAA0B,IAAM,SAC5DkB,GACsB5C,GACtB6C,GAAS5F,EAEXyD,KAAMoC,gBAA2B,OAAZ7F,QAAY,IAAZA,OAAA,EAAAA,EAAc8F,WAAd,OAAyB9F,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAc+F,SAAS,GADrE,EAGEC,GAAM,UAAGC,WAAWL,WAAd,aAAG,EAAmBM,QAAQ,GAAGC,QAAQ,MAAO,IAExDC,GAAUJ,GAAOK,WAAWC,MAAM,KAAK,GACvCC,GAAUP,GAAOK,WAAWC,MAAM,KAAK,GAErCE,GAEAZ,GAAQ7C,GAIR0D,GAAYD,GAAD,UAEbP,WAAWO,WAFE,aAEb,EAA8BN,QAAQ,GADtC,EAEAQ,GAAYD,GAASJ,WAAWC,MAAM,KAAK,GAC3CK,GAAYF,GAASJ,WAAWC,MAAM,KAAK,GAEzCM,GAAQ5G,EAAa8F,SAEvBrC,KAAMoC,eAAe7F,EAAa8F,SAAU,IAD5C,EAEEA,GAAQ,UAAGG,WAAWW,WAAd,aAAG,EAAkBV,QAAQ,IAAIC,QAAQ,MAAO,IAC1DU,GAAYf,GAASO,WAAWC,MAAM,KAAK,GAC3CQ,GAAYhB,GAASO,WAAWC,MAAM,KAAK,GACzCS,GAEAH,GAAO7D,GAIPiE,GAAkBD,GAAD,UAEnBd,WAAWc,WAFQ,aAEnB,EAAgCb,QAAQ,IADxC,EAEAe,GAAkBD,GAAeX,WAAWC,MAAM,KAAK,GACvDY,GAAkBF,GAAeX,WAAWC,MAAM,KAAK,GAEvDa,IACU,OAAZnH,QAAY,IAAZA,OAAA,EAAAA,EAAclI,OACd,KAC0B,MAAV,OAAZkI,QAAY,IAAZA,OAAA,EAAAA,EAAclI,OAFlB,OAGIkI,QAHJ,IAGIA,OAHJ,EAGIA,EAAclI,MACdsP,IACQ,OAAZpH,QAAY,IAAZA,OAAA,EAAAA,EAAclI,OAAQ,IAAiB,OAAZkI,QAAY,IAAZA,OAAA,EAAAA,EAAclI,OAAQ,GAC5C6N,GAAawB,IAAkBjB,QAAQ,GACxCzC,KAAMoC,eAAeF,GAAawB,GAAkB,GACtDE,IACU,OAAZrH,QAAY,IAAZA,OAAA,EAAAA,EAAclI,OAAQ,IAAiB,OAAZkI,QAAY,IAAZA,OAAA,EAAAA,EAAclI,OAAQ,EAAjD,OACIkI,QADJ,IACIA,OADJ,EACIA,EAAclI,MACd2L,KAAMoC,eAAesB,GAAkB,GACzCG,IAAK,UAAArE,GAAY,UAAZ,eAAgBsE,SAAhB,OAAyBvH,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAcwH,aAqC1CC,GAAWC,cAAY,SAAC9H,GAAD,OAAWA,EAAM6H,YAE9C,OACE,0BAAKjR,UAAkC,SAAvBkB,EAAMiQ,aAA0BpR,EAAQmJ,kBAAoBnJ,EAAQkJ,eAClF,mBAAC,KAAD,CAAgB/H,MAAOA,EAAMiQ,eAE7B,0BAAKnR,UAAWD,EAAQQ,MACtB,mBAAC,KAAD,KACE,0BAAKP,UAAwB,GAAbmM,GAAoB,eAAiB,IACnD,0BAAKnM,UAAwB,GAAbmM,GAAoB,aAAe,IACjD,mBAACiF,GAAD,KACE,mBAACC,GAAD,CAASnQ,MAAOA,EAAMiQ,cAAtB,wBAGF,mBAACG,GAAD,CAAKpQ,MAAOA,EAAMiQ,cACf3H,EACwB,GAAvBA,EAAa+H,OACX,mBAACC,GAAD,CAAiBtQ,MAAOA,EAAMiQ,cAC5B,mBAACM,GAAD,KACE,mBAACC,GAAD,KACE,mBAACC,GAAD,CAAWC,IAAI,yBAEjB,mBAACC,GAAD,kBAIJ,mBAACL,GAAD,KACE,mBAACE,GAAD,KACE,mBAACC,GAAD,CAAWC,IAAI,wBAEjB,mBAACE,GAAD,gBAGF,KACJ,mBAACC,GAAD,KACE,mBAACC,GAAD,KACE,mBAACZ,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAvJ/B,gHAwJU,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,qBAEF,mBAACkB,GAAD,CAAwBC,YAAY,GAClC,mBAACC,GAAD,CAAarR,MAAOA,EAAMiQ,cACvB3I,GAOH,2BACExI,UACEuB,IAAS,IACL,qBACA,2BAGN,mBAAC,mBAAD,CACEiR,KAAMhK,EACNiK,OAAQ,kBAAMvI,EAAc1B,KAE5B,mBAAC,KAAD,CACE0J,MACEjI,IAAezB,EACX,SACA,oBAENkK,UAAU,OAEV,6BACE1S,UACEuB,GAAQ,KACmB,SAAvBL,EAAMiQ,aAA0B,0BAA4B,sBACrC,SAAvBjQ,EAAMiQ,aAA0B,gCAAkC,6BAGxE,0BACEnR,UACEuB,GAAQ,KACJ,YACAA,GAAQ,IACR,qBACA,eAENqQ,IAAK,6BAKZ1D,GAAarG,EAAa,uCACzB,sCAEI,mBAAC,KAAD,CACErE,KAAMgI,GACNlD,kBAAmBA,GACnBC,sBAAuB,aACvB9E,QAASyI,GACT1D,KAAMA,EACNC,QAAO,UAAEZ,EAAY,UAAd,aAAE,EAAgBI,WAI3B,mBAAC,KAAD,CACEiK,MAAM,wBACNQ,UAAU,OAEV,0BACE1S,UACEuB,GAAQ,KAAO,YAAc,eAE/B0F,QAASgF,GACT2F,IAAKe,EAAQ,UAMrB,MAKR,mBAACC,GAAD,KACE,mBAACC,GAAD,KACE,mBAACzB,GAAD,KACE,mBAAC,KAAD,CAASc,MA5OpB,2JA6Oa,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,sBAEF,mBAAC,KAAD,CAASe,MAAK,OAAE1I,QAAF,IAAEA,OAAF,EAAEA,EAAclI,OAC5B,mBAAC+Q,GAAD,CAAwBC,YAAY,EAAOpR,MAAOA,EAAMiQ,cACrDN,GADH,UACuB,IACnBD,GAEE,KAAO1B,GAAiB0B,IAAY,IADpC,OAMV,mBAACiC,GAAD,CAAkB7S,UAAU,mBAC1B,mBAACoR,GAAD,KACE,mBAAC,KAAD,CAASc,MAhQhB,wDAiQS,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,0BAEF,mBAACkB,GAAD,CAAwBC,YAAY,EAAOpR,MAAOA,EAAMiQ,cAAxD,WAMiB,OAAZ3H,QAAY,IAAZA,OAAA,EAAAA,EAAc+D,YACbuF,KAAgC,IAAzBtJ,EAAa+D,WACjBwF,GAAG9B,IACH+B,OAAO,0BACZ,GAVJ,YAYK/B,IAAYgC,KAAQC,aAAajC,KAAc,MAMtD,mBAAC4B,GAAD,KACE,mBAACzB,GAAD,KACE,mBAAC,KAAD,CAASc,MA3Rd,yIA4RO,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,iBAEF,mBAACkB,GAAD,CAAwBC,YAAY,EAAOpR,MAAOA,EAAMiQ,cACtD,mBAACgC,GAAD,KACE,wBACEnT,UAAU,+BACVoT,KAAM,kBAAoB5J,EAAawH,aAEtC,IACAxH,EAAawH,YACVxH,EAAawH,YACb,IARR,OAUS,IACP,mBAACqC,GAAD,CAAmBnS,MAAOA,EAAMiQ,cAC7BL,GADH,8BAUZ,mBAACwC,GAAD,KAEE,mBAACC,GAAD,CAAWrS,MAAOA,EAAMiQ,cACtB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASc,MAzTjB,4EA0TU,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,SAEF,mBAACkB,GAAD,CAAwBC,YAAY,GAClC,mBAACa,GAAD,KACG,IACD,0BAAKxK,MAAO,CAAE6K,QAASjS,IAAS,IAAM,OAAS,UAC7C,wBACEvB,UAAkC,SAAvBkB,EAAMiQ,aAA0B,oCAAsC,+BACjFiC,KAAM,oBAAsB5J,EAAakE,MAExClE,EAAakE,MAEhB,0BACE1N,UACEuB,GAAQ,IACJ,sBACA,iBAGN,mBAAC,mBAAD,CACEiR,KAAMhJ,EAAakE,KACnB+E,OAAQ,kBAAMvI,EAAcV,EAAakE,QAEzC,mBAAC,KAAD,CACEwE,MACEjI,IAAeT,EAAakE,KACxB,SACA,oBAENgF,UAAU,OAEV,6BACE1S,UACEuB,GAAQ,KACmB,SAAvBL,EAAMiQ,aAA0B,0BAA4B,sBACrC,SAAvBjQ,EAAMiQ,aAA0B,gCAAkC,6BAGxE,0BACEnR,UACEuB,GAAQ,KACJ,YACAA,GAAQ,IACR,iBACA,qBAENqQ,IAAK,gCAQnB,mBAAC6B,GAAD,KACGlS,IAAS,KAAOA,IAAS,MACxB2M,GACE,sCAEI,mBAAC,KAAD,CACE1K,KAAMwH,GACNvH,QAASqI,GACT3F,SAAUqD,EAAakE,KACvBpM,MAAO4J,GACP1C,KAAMA,IAITmG,KAA4B,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAActK,QAAS,EACtC,mBAACqP,GAAD,eAEI/E,IAAyB,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAActK,QAAS,UAFxC,aAEI,EACIS,SAIR,mBAAC,KAAD,CACEoN,MAAM,wBACNQ,UAAU,OAWV,mBAACiB,GAAD,CAAiB1M,QAAS2E,IACxB,mBAACgI,GAAD,KACE,0BAAKhC,IAAI,+BAEX,mBAACiC,GAAD,mBASV,KAIN,mBAACC,GAAD,MACGvS,GAAQ,KAAOA,GAAQ,OACtB2M,GACE,sCAEI,mBAAC,KAAD,CACE1K,KAAMwH,GACNvH,QAASqI,GACT3F,SAAUqD,EAAakE,KACvBpM,MAAO4J,GACP1C,KAAMA,IAITmG,KAAY,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAActK,QAC7B,mBAACqP,GAAD,eACG/E,IAAyB,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAActK,QAAS,UADvC,aACG,EAAwCS,SAG3C,mBAAC,KAAD,CACEoN,MAAM,wBACNQ,UAAU,OAWV,mBAACiB,GAAD,CAAiB1M,QAAS2E,IACxB,mBAACgI,GAAD,KACE,0BAAKhC,IAAI,+BAEX,mBAACiC,GAAD,mBASV,KAIN,mBAACE,GAAD,KACE,mBAACC,GAAD,KACE,0BAAKpC,IAAI,6BAIb,mBAAC2B,GAAD,CAAWrS,MAAOA,EAAMiQ,cACtB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASc,MA/dnB,6EAgeY,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,OAEF,mBAACkB,GAAD,CAAwBC,YAAY,GAClC,mBAACa,GAAD,KACE,2BACExK,MAAO,CAAE6K,QAASjS,IAAS,IAAM,OAAS,UAE1C,wBACEvB,UAAkC,SAAvBkB,EAAMiQ,aAA0B,oCAAsC,+BACjFiC,KAAM,oBAAsB5J,EAAamE,IAExCnE,EAAamE,GACVnE,EAAamE,GACbnE,EAAayK,iBAEnB,0BACEjU,UACEuB,GAAQ,IACJ,sBACA,iBAGN,mBAAC,mBAAD,CACEiR,KAAMhJ,EAAamE,GACnB8E,OAAQ,kBAAMvI,EAAcV,EAAamE,MAEzC,mBAAC,KAAD,CACEuE,MACEjI,IAAeT,EAAamE,GACxB,SACA,oBAEN+E,UAAU,OAEV,6BACE1S,UACEuB,GAAQ,KACmB,SAAvBL,EAAMiQ,aAA0B,0BAA4B,sBACrC,SAAvBjQ,EAAMiQ,aAA0B,gCAAkC,6BAGxE,0BACEnR,UACEuB,GAAQ,KACJ,YACAA,GAAQ,IACR,iBACA,qBAENqQ,IAAK,gCAQnB,mBAAC6B,GAAD,KACGlS,IAAS,KAAOA,IAAS,MACxB2M,GACE,sCAEI,mBAAC,KAAD,CACE1K,KAAM8H,GACN7H,QAASuI,GACT5F,OAAQoD,EAAamE,GACrBrM,MAAO8J,GACP5C,KAAMA,IAGTqG,KAAU,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAYxK,QACzB,mBAACqP,GAAD,eACG7E,IAAqB,OAAVA,SAAU,IAAVA,QAAA,EAAAA,GAAYxK,QAAS,UADnC,aACG,EAAoCS,SAGvC,mBAAC,KAAD,CACEoN,MAAM,wBACNQ,UAAU,OAWV,mBAACiB,GAAD,CAAiB1M,QAAS8E,IACxB,mBAAC6H,GAAD,KACE,0BAAKhC,IAAI,+BAEX,mBAACiC,GAAD,mBASV,KAIN,mBAACC,GAAD,MACGvS,GAAQ,KAAOA,GAAQ,OACtB2M,GACE,sCAEI,mBAAC,KAAD,CACE1K,KAAM8H,GACN7H,QAASuI,GACT5F,OAAQoD,EAAamE,GACrBrM,MAAO8J,GACP5C,KAAMA,IAGTqG,KAAU,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAYxK,QACzB,mBAACqP,GAAD,eACG7E,IAAqB,OAAVA,SAAU,IAAVA,QAAA,EAAAA,GAAYxK,QAAS,UADnC,aACG,EAAoCS,SAGvC,mBAAC,KAAD,CACEoN,MAAM,wBACNQ,UAAU,OAWV,mBAACiB,GAAD,CAAiB1M,QAAS8E,IACxB,mBAAC6H,GAAD,KACE,0BAAKhC,IAAI,+BAEX,mBAACiC,GAAD,mBASV,MAMR,mBAACK,GAAD,CAAOhT,MAAOA,EAAMiQ,cACpB,mBAACgD,GAAD,KACI,mBAAC/C,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAAOjD,IAC5B,mBAACkD,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,2BAEF,mBAACgC,GAAD,CAAiB9B,YAAY,GAC3B,mBAAC+B,GAAD,KACE,mBAACC,GAAD,KACF,mBAACC,GAAD,gBACA,mBAACC,GAAD,iBACA,mBAACA,GAAD,UACA,mBAACC,GAAD,aACA,mBAACD,GAAD,UACA,mBAACC,GAAD,4BAEA,mBAACC,GAAD,CAAgB9C,IAAI,uBAIxB,mBAAC+C,GAAD,KACE,mBAACC,GAAD,KACE,mBAAC,KAAD,CAAS3C,MAAM,QAAQC,MAAOjD,IAC5B,mBAACkD,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,oBAEF,mBAACgC,GAAD,CAAiB9B,YAAY,GAC7B,mBAACuC,GAAD,KACE,mBAACC,GAAD,KACE,0BAAK9U,UAAU,oBACb,mBAAC,KAAD,CAAkB+U,KAAM,MAE1B,mBAACP,GAAD,cACA,mBAACD,GAAD,cACA,mBAACC,GAAD,YACA,mBAACD,GAAD,oBACA,mBAACS,GAAD,CAAYpD,IAAI,oBAChB,mBAAC2C,GAAD,kBAEF,mBAACO,GAAD,KACE,mBAACG,GAAD,MACA,0BAAKjV,UAAU,oBACb,mBAAC,KAAD,CAAkB+U,KAAM,MAE1B,mBAACR,GAAD,oBACA,mBAACE,GAAD,2BACA,mBAACD,GAAD,aACA,mBAACC,GAAD,8BACA,mBAACD,GAAD,WACA,mBAACC,GAAD,+BAEF,mBAACK,GAAD,KACE,mBAACI,GAAD,MACA,0BAAKlV,UAAU,oBACb,mBAAC,KAAD,CAAkB+U,KAAM,MAE1B,mBAACR,GAAD,aACA,mBAACC,GAAD,iBACA,mBAACA,GAAD,UACA,mBAACC,GAAD,aACA,mBAACD,GAAD,cAKN,mBAACW,GAAD,KACE,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASnD,MAAM,QAAQC,MAAOjD,IAC5B,mBAACkD,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,8BAEF,mBAACgC,GAAD,CAAiB9B,YAAY,GAC7B,mBAAC+C,GAAD,KACE,mBAACC,GAAD,KACE,0CADF,OAGE,+BAAM,wBAAGtV,UAAU,+BAA+BoT,KAAM,KAAlD,kDAHR,aAOG,0CAPH,IAQE,mBAACmC,GAAD,CAAe3D,IAAI,wBACnB,mBAAC4D,GAAD,CAAa5D,IAAI,2BAEnB,mBAAC6D,GAAD,KACE,mBAACC,GAAD,CAAY9D,IAAI,oBAChB,mBAAC4C,GAAD,iBACA,mBAACD,GAAD,wBACA,mBAACC,GAAD,aACA,mBAACC,GAAD,uBACA,mBAACD,GAAD,WACA,mBAACD,GAAD,eACA,mBAACE,GAAD,iBAEF,mBAACgB,GAAD,KACE,mBAACC,GAAD,CAAY9D,IAAI,oBAChB,mBAAC4C,GAAD,iBACA,mBAACD,GAAD,wBACA,mBAACC,GAAD,aACA,mBAACC,GAAD,uBACA,mBAACD,GAAD,WACA,mBAACC,GAAD,uCAMN,mBAACN,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASc,MA7uBf,2JA8uBQ,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,oBAEF,mBAACiD,GAAD,CAAiB9B,YAAY,GAC3B,mBAACa,GAAD,CAASjS,MAAOA,EAAMiQ,cACnB,IACW,GAAXpB,GACC,+BAAOH,IAEP,+BACGA,GACA,IACD,2BAAMjH,MAAO,CAAEvG,MAAO,YAAc2N,KAR1C,YAWcb,GACE,MAAbiB,GACC,+BAAOD,IAEP,+BACGA,GACA,IACD,2BAAMvH,MAAO,CAAEvG,MAAO,YAAc+N,KAlB1C,OAyBJ,mBAACgE,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAAOjD,IAC5B,mBAACkD,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,iBAEF,mBAACiD,GAAD,CAAiBlT,MAAOA,EAAMiQ,aAAcmB,YAAY,GACrDU,KAAO,GAAPA,CAAWxJ,EAAamM,OAG7B,mBAACxB,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAxxB3B,mJAyxBM,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,wBAEF,mBAACiD,GAAD,CAAiB9B,YAAY,GAC3B,mBAACa,GAAD,CAASjS,MAAOA,EAAMiQ,cACR,GAAbb,GACC,+BAAOD,IAEP,+BACGA,GACA,IACD,2BAAM1H,MAAO,CAAEvG,MAAO,YAAckO,KAPxC,YAUYpB,GACU,MAAnBwB,GACC,+BAAOD,IAEP,+BACGA,GACA,IACD,2BAAM9H,MAAO,CAAEvG,MAAO,YAAcsO,KAjB1C,OAyBJ,mBAACyD,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAxzB5B,+DAyzBO,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,aAEF,mBAACiD,GAAD,CAAiB9B,YAAY,GAC3B,mBAACa,GAAD,CAASjS,MAAOA,EAAMiQ,cAAe6B,KAAO,GAAPA,CAAA,OAAWxJ,QAAX,IAAWA,OAAX,EAAWA,EAAc+F,YAGhE5C,GAQA,sCACE,mBAACwH,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MA30BhC,0MA40BW,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,UAEF,mBAACiD,GAAD,CAAiB9B,YAAY,GAC3B,mBAACa,GAAD,CAASjS,MAAOA,EAAMiQ,cAAtB,IAAsC3H,EAAaoM,SAGvD,mBAACC,GAAD,CAAkB3U,MAAOA,EAAMiQ,cAC7B,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAr1BlC,gEAs1Ba,mBAAC4D,GAAD,CAAoBlE,IAAK,sBAE3B,mBAACmE,GAAD,CAAe7U,MAAOA,EAAMiQ,cAA5B,eAEF,mBAAC6E,GAAD,CAA0B1D,YAAY,GACpC,0BAAKtS,UAAU,kCACb,+BACEA,UAAkC,SAAvBkB,EAAMiQ,aAA0B,6BAA+B,wBAC1EpK,UAAQ,EACRzF,MAAOkI,EAAazH,WAK5B,mBAACoS,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAAC8E,GAAD,CAAkBhP,QAn3BhB,WACpB2F,IAAW,KAm3BS,mBAACsJ,GAAD,iBACA,mBAACC,GAAD,CAAYvE,IAAI,4BAvCtB,mBAACuC,GAAD,CAASjT,MAAOA,EAAMiQ,cACpB,mBAAC8E,GAAD,CAAkBhP,QAl1Bd,WACpB2F,IAAW,KAk1BO,mBAACsJ,GAAD,iBACA,mBAACE,GAAD,CAAYxE,IAAI,2BAyCtB,mBAACyE,GAAD,KACE,mBAACjF,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MA52BxB,mHA62BG,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,CAAMlR,MAAOA,EAAMiQ,cAAnB,iBAEF,mBAACmF,GAAD,CAA4BpV,MAAOA,EAAMiQ,cACrCjD,GAkBErG,EACF,sCAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAaI,UAEpB,mBAACsO,GAAD,KACE,mBAACC,GAAD,kDAIE,mBAAC,KAAD,CACEhT,KAAMgI,GACNlD,kBAAmBA,GACnBC,sBAAuB,aACvB9E,QAASyI,GACT1D,KAAMA,EACNC,QAAO,UACLuG,IAAyB,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAc3K,QAAS,UAD/B,aACL,EAAwC4D,WAK5C,mBAAC,KAAD,CACEiK,MAAM,wBACNQ,UAAU,OAEV,0BACE1S,UACEuB,GAAQ,KAAO,aAAe,eAEhC0F,QAASgF,GACT2F,IAAKe,EAAQ,UA9CrB,mBAAC8D,GAAD,KAEI,mBAAC,KAAD,CACEjT,KAAMkI,GACNjI,QArkCD,kBAAMkI,IAAqB,IAskC1B+K,kBAAmBlO,IALzB,kDASE,wBACExI,UAAU,+BACV2I,MAAO,CAAEtH,WAAY,MAAOsV,OAAQ,WACpC1P,QA9kCA,kBAAM0E,IAAqB,KA2kC7B,iBA8CV,8BACA,kCAMR,mBAAC,KAAD,CAAiBzK,MAAOA,EAAMiQ,aAAc7H,cA/6BhD,SAAuBsN,GAAQ,IAAD,IAC5B5M,EAAS,OAAC4M,QAAD,IAACA,GAAD,UAACA,EAAO9P,cAAR,aAAC,EAAexF,OACzBkJ,OAAOrF,aAAaW,QAAQ,WAA5B,OAAwC8Q,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAO9P,cAA/C,aAAwC,EAAexF,QA66BqBuV,SAAU9M,KAhsC1F,MA0sCc+M,WAAO/U,MAAV,kMAAX,IAUMoR,GAAU2D,WAAOC,IAAV,6mBAST,kBAAyB,SAAzB,EAAG7V,OAAY,gCAYb,kBAAyB,SAAzB,EAAGA,OAAY,gCAWf,kBAAyB,SAAzB,EAAGA,OAAY,gCAKfqR,GAAcuE,WAAOC,IAAV,goBASb,kBAAyB,SAAzB,EAAG7V,OAAY,+BAYb,kBAAyB,SAAzB,EAAGA,OAAY,iCAYf,kBAAyB,SAAzB,EAAGA,OAAY,iCAoBfuV,IAfWK,WAAOvP,SAAV,kUAeMuP,WAAOE,EAAV,gPAUX9C,GAAQ4C,WAAOC,IAAV,+jBASP,kBAAyB,SAAzB,EAAG7V,OAAY,sEAkBboV,GAA6BQ,WAAOC,IAAV,mrBAY5B,kBAAyB,SAAzB,EAAG7V,OAAY,kGAyBb8U,GAA2Bc,WAAOC,IAAV,ogBA0BxB3C,GAAkB0C,WAAOC,IAAV,isBAUjB,kBAAyB,SAAzB,EAAG7V,OAAY,gCAWL,SAACtB,GAAD,OAAYA,EAAM0S,WAAN,mBAGpB,kBAAyB,SAAzB,EAAGpR,OAAY,gCAYf,kBAAyB,SAAzB,EAAGA,OAAY,gCAyCf6U,IAnCmBe,WAAOC,IAAV,suBAkBR,SAACnX,GAAD,OAAYA,EAAM0S,WAAN,mBAiBJwE,WAAOG,KAAV,8qBASf,kBAAyB,SAAzB,EAAG/V,OAAY,gCAYb,kBAAyB,SAAzB,EAAGA,OAAY,gCAYf,kBAAyB,SAAzB,EAAGA,OAAY,iCAMfkR,GAAO0E,WAAOG,KAAV,4jBAON,kBAAyB,SAAzB,EAAG/V,OAAY,+BAWb,kBAAyB,SAAzB,EAAGA,OAAY,+BAcf2U,GAAmBiB,WAAOC,IAAV,8WAQlB,kBAAyB,SAAzB,EAAG7V,OAAY,kDAWbmV,GAAqBS,WAAOC,IAAV,6WAiBlB5C,GAAU2C,WAAOC,IAAV,2RAOT,kBAAyB,SAAzB,EAAG7V,OAAY,kDA0CbkQ,IAjCc0F,WAAOC,IAAV,kSAeDD,WAAOC,IAAV,kYAkBKD,WAAOC,IAAV,+GAcTzF,IAPkBwF,WAAOC,IAAV,2GAOTD,WAAOC,IAAV,mbAOL,kBAAyB,SAAzB,EAAG7V,OAAY,4CAaboS,GAAqBwD,WAAOC,IAAV,wTAalBxD,GAAYuD,WAAOC,IAAV,oZAQX,kBAAyB,SAAzB,EAAG7V,OAAY,0CAYbmQ,GAAUyF,WAAOG,KAAV,goBAST,kBAAyB,SAAzB,EAAG/V,OAAY,+BAUb,kBAAyB,SAAzB,EAAGA,OAAY,+BAWf,kBAAyB,SAAzB,EAAGA,OAAY,+BAKf4U,GAAqBgB,WAAOI,IAAV,ySAalB/E,GAAY2E,WAAOI,IAAV,8QAYT1F,GAAkBsF,WAAOC,IAAV,maAIjB,kBAAyB,SAAzB,EAAG7V,OAAY,gDAab,kBAAyB,SAAzB,EAAGA,OAAY,gDAKfwQ,GAAqBoF,WAAOC,IAAV,0OAUlBtF,GAAwBqF,WAAOC,IAAV,iNAUrBpF,GAAYmF,WAAOI,IAAV,qEAITrF,GAAoBiF,WAAOC,IAAV,oHAOjBjF,GAAmBgF,WAAOC,IAAV,gHAOhBd,GAAmBa,WAAOC,IAAV,mEAIhBb,GAAcY,WAAOC,IAAV,4OAYXX,GAAaU,WAAOI,IAAV,iJAOVf,GAAaW,WAAOI,IAAV,+KAQVnF,GAA2B+E,WAAOC,IAAV,wMASxBnE,GAAiCkE,WAAOC,IAAV,mXAe9B/E,GAA8B8E,WAAOC,IAAV,sGAK3BlE,GAAmBiE,WAAOC,IAAV,mMAShB1E,GAAyByE,WAAOC,IAAV,2bAOxB,kBAAyB,SAAzB,EAAG7V,OAAY,+BAab,kBAAyB,SAAzB,EAAGA,OAAY,+BAKfmS,GAAoByD,WAAOC,IAAV,2RAanB,kBAAyB,SAAzB,EAAG7V,OAAY,0EAMb6S,GAAY+C,WAAOC,IAAV,8ZAmBT/C,GAAe8C,WAAOC,IAAV,2UAcZpD,GAAkBmD,WAAOC,IAAV,kWAgBfnD,GAAYkD,WAAOC,IAAV,mDAGTlD,GAAaiD,WAAOC,IAAV,gDAIVrD,GAAMoD,WAAOC,IAAV,kSAcHtD,GAASqD,WAAOC,IAAV,8CAGNjD,GAAmBgD,WAAOC,IAAV,mDAGhBR,GAAWO,WAAOC,IAAV,mEAIRP,GAAeM,WAAOC,IAAV,2EAIZ1B,GAA8ByB,WAAOC,IAAV,4EAI3BlC,GAAyBiC,WAAOC,IAAV,4EAItBzB,GAAwBwB,WAAOC,IAAV,qoBA4BrBtB,GAAwBqB,WAAOC,IAAV,iDAGrBjC,GAAmBgC,WAAOC,IAAV,iDAGhB1C,GAAkCyC,WAAOC,IAAV,iDAG/BzC,GAA0BwC,WAAOC,IAAV,4FAMvBxB,GAAgBuB,WAAOI,IAAV,2FAMbxC,GAAiBoC,WAAOI,IAAV,gEAKd1B,GAAcsB,WAAOI,IAAV,+CAOXlC,IAHmB8B,WAAOI,IAAV,+CAGHJ,WAAOI,IAAV,6FAKVxB,GAAaoB,WAAOI,IAAV,+CAIV1C,GAAWsC,WAAOG,KAAV,uEAKR1C,GAAYuC,WAAOG,KAAV,uEAKTxC,GAAWqC,WAAOG,KAAV,uEAKRhC,GAAO6B,WAAOG,KAAV,qDAGJ/B,GAAO4B,WAAOG,KAAV,qDAGJ9B,GAAwB2B,WAAOC,IAAV,oRAcrBpC,GAAmBmC,WAAOC,IAAV,oRAgBhB3B,GAA0B0B,WAAOC,IAAV,oIAOvBnC,GAAqBkC,WAAOC,IAAV","file":"static/js/31.061c88d0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Row } from \"simple-flexbox\";\nimport { UserService } from \"../../../services\";\nimport { history } from \"../../../managers/history\";\nimport utility from \"../../../utility\";\nimport { sessionManager } from \"../../../managers/sessionManager\";\nimport { genericConstants, cookiesConstants } from \"../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  add: {\n    backgroundColor: \"#2149b9\",\n    marginLeft: \"90px\",\n  },\n  value: {\n    width: \"400px !important\",\n  },\n  cross: {\n    marginTop: \"25px\",\n    marginLeft: \"40px\",\n    fontWeight: \"500\",\n  },\n  dialog: {\n    marginLeft: \"10%\",\n    marginTop: \"2px\",\n    width: \"80% !important\",\n    height: \"70% !important\",\n    borderRadius: \"50px !important\",\n  },\n  buttons: {\n    padding: \"1px 35px 15px 0px\",\n  },\n  input: {\n    width: \"503px\",\n    height: \"15px\",\n    border: \"solid 1px #c6c8ce\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"7px\",\n    padding: \"20px\",\n    marginBottom: \"21px\",\n    outline: \"none\"\n  },\n  addbtn: {\n    width: \"110px\",\n    height: \"34px\",\n    margin: \"14px -8px 15px 2px\",\n    padding: \"6px 19px 3px 20px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#3763dd\",\n    color: \"white\",\n  },\n  cnlbtn: {\n    width: \"94px\",\n    height: \"34px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#9fa9ba\",\n    color: \"white\",\n\n    margin: \"14px 8px 15px 2px\",\n    padding: \"6px 19px 3px 20px\",\n  },\n  subCategory: {\n    marginTop: \"-12px\",\n    marginBottom: \"2px\",\n    fontfamily: \"Inter\",\n    fontsize: \"14px\",\n    fontweight: \"500\",\n    border: \"none !important\",\n    color: \"#2a2a2a\"\n  },\n  forgotpass: {\n    color: \"#2149b9\",\n    marginLeft: \"123px\",\n  },\n  createaccount: {\n    color: \"#2149b9\",\n    marginLeft: \"32px\",\n    fontfamily: \"Inter\",\n    fontsize: \"14px\",\n  },\n  icon: {\n    marginLeft: \"-30px\",\n  },\n  xdc: {\n    color: \"#2a2a2a\",\n    marginLeft: \"30px\",\n    fontfamily: \"Inter\",\n    fontsize: \"5px\",\n  },\n  heading: {\n    marginTop: \"7px\",\n    marginBottom: \"7px\",\n    fontfamily: \"Inter\",\n    fontweight: \"600\",\n    color: \"#2a2a2a\"\n  },\n  dialogBox: {\n    width: \"553px\",\n    position: \"absolute\",\n    top: \"111px\",\n    borderRadius: \"12px\",\n  },\n  error1: {\n    color: \"red\",\n    marginLeft: \"2px\",\n  },\n  error2: {\n    color: \"red\",\n    marginLeft: \"24px\",\n    marginTop: \"-14px\",\n  },\n  \"@media (max-width: 767px)\": {\n    heading: {\n      fontSize: \"16px\",\n    },\n    dialogBox: {\n      width: \"100%\",\n      top: \"40px\",\n      borderRadius: \"0px !important\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      height: \"100%\",\n    },\n    input: {\n      maxWidth: \"503px\",\n      width: \"100%\",\n    },\n  },\n}));\n\nexport default function FormDialog(props) {\n  const { open, onClose } = props\n  const [privateAddress, setPrivateAddress] = React.useState();\n  const [nameTag, setNameTag] = React.useState(false);\n  const [errorEmptyField, setErrorEmptyField] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [errorTag, setErrorTag] = React.useState(\"\");\n  // const [open, setOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (props?.value === 1 && props?.fromAddr) {\n      setPrivateAddress(props?.fromAddr);\n    } else {\n      setPrivateAddress(props?.toAddr)\n    }\n  }, [props])\n\n  async function TaggedAddress() {\n    setError(\"\");\n    setErrorTag(\"\");\n    setErrorEmptyField(\"\");\n    if (!privateAddress && !input && tags.length === 0) {\n      setErrorEmptyField(genericConstants.ENTER_REQUIRED_FIELD);\n      return;\n    }\n    if (!privateAddress) {\n      setError(genericConstants.ENTER_REQUIRED_FIELD);\n    } else if (!input) {\n      setErrorTag(genericConstants.ENTER_REQUIRED_FIELD);\n    } else if (\n      !(privateAddress && privateAddress.length === 43) ||\n      !(privateAddress.slice(0, 3) === \"xdc\")\n    ) {\n      setError(\"Address should start with xdc and consist of 43 characters\");\n      return;\n    } else if (input.length > 15) {\n      setErrorTag(\"Nametag cannot be longer than 15 characters\");\n    } else {\n    const data = {\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n      address: privateAddress,\n      tagName: input,\n      modifiedOn: Date.now()\n    };\n    // const [error, response] = await utility.parseResponse(\n    //   UserService.addPrivateTagToAddress(data)\n    // );\n\n    // if (error) {\n    //   utility.apiFailureToast(\"Address is already in use\");\n    //   return;\n    // }\n\n    let taggedAddress = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\n    );\n    if (taggedAddress) {\n      taggedAddress = JSON.parse(taggedAddress);\n      let existingTagsIndex=null;\n      const existingTag = taggedAddress.find(\n        (item,index) => {\n          if(item.address == privateAddress && item.userId == data.userId){\n            existingTagsIndex = index;\n            return true;\n        }\n        }\n      );\n      if (existingTag) {\n        // taggedAddress[existingTagsIndex].tagName = [...taggedAddress[existingTagsIndex].tagName,...tags]\n        taggedAddress[existingTagsIndex].tagName = input;\n        // utility.apiFailureToast(\"Address is already in use\");\n        // return;\n      }else{\n        taggedAddress.push(data);\n      }\n    } else {\n      taggedAddress = [];\n      taggedAddress.push(data);\n    }\n    // taggedAddress.push(data);\n    localStorage.setItem(\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS,\n      JSON.stringify(taggedAddress)\n    );\n    utility.apiSuccessToast(\"Tag Added\");\n    onClose();\n    }\n  }\n  let taggedAddressfetched = localStorage.getItem(\n    cookiesConstants.USER_TAGGED_ADDRESS\n  );\n\n  const [input, setInput] = React.useState(\"\");\n  const [tags, setTags] = React.useState([]);\n  const [isKeyReleased, setIsKeyReleased] = React.useState(false);\n  // const [errorTag, setErrorTag] = React.useState(\"\");\n\n  const onChange = (e) => {\n    setErrorTag(\"\");\n    const { value } = e.target;\n    setInput(value);\n  };\n\n  const deleteTag = (index) => {\n    setTags((prevState) => prevState.filter((tag, i) => i !== index));\n  };\n\n  const onKeyDown = (e) => {\n    const { key } = e;\n    const trimmedInput = input.trim();\n\n    if (key === \",\" && trimmedInput.length && !tags.includes(trimmedInput)) {\n      e.preventDefault();\n      if (trimmedInput.length > 15) {\n        setErrorTag(\"Nametag cannot be longer than 15 characters\");\n        return;\n      }\n      if (tags.length >= 5) {\n        setErrorTag(\"Maximum 5 Name tags are allowed\");\n        return;\n      }\n      setTags((prevState) => [...prevState, trimmedInput]);\n      setInput(\"\");\n      setErrorTag(\"\");\n    }\n\n    if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\n      const tagsCopy = [...tags];\n      const poppedTag = tagsCopy.pop();\n      e.preventDefault();\n      setTags(tagsCopy);\n      setInput(poppedTag);\n    }\n\n    setIsKeyReleased(false);\n  };\n\n  const onKeyUp = () => {\n    setIsKeyReleased(true);\n  };\n\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Dialog\n        // className={classes.dialog}\n        classes={{ paperWidthSm: classes.dialogBox }}\n        open={open}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <div>\n        <Row>\n          <DialogTitle className={classes.heading} id=\"form-dialog-title\">\n            Add a new Address Tag\n          </DialogTitle>\n        </Row>\n        {errorEmptyField ? (\n            <div className={classes.error2}>{errorEmptyField}</div>\n          ) : (\n            <></>\n          )}\n        <DialogContent>\n          <DialogContentText className={classes.subCategory}>\n            Address\n          </DialogContentText>\n          <input\n            value={privateAddress}\n\n            className={classes.input}\n            onChange={(e) => {\n              setPrivateAddress(e.target.value)\n              setError(\"\");\n            }}\n            readOnly\n          ></input>\n          {error ? <div className={classes.error}>{error}</div> : <></>}\n        </DialogContent>\n        <DialogContent>\n          <DialogContentText className={classes.subCategory}>\n            Name Tag\n          </DialogContentText>\n          <div className=\"containerTag\">\n            {/*{tags.map((tag, index) => (*/}\n            {/*    <div className=\"tag\">*/}\n            {/*      {tag}*/}\n            {/*      <button onClick={() => deleteTag(index)}>x</button>*/}\n            {/*    </div>*/}\n            {/*))}*/}\n            <input\n                value={input}\n                // onKeyDown={onKeyDown}\n                // onKeyUp={onKeyUp}\n                onChange={onChange}\n            />\n          </div>\n          {errorTag ? (\n              <div className={classes.error1}>{errorTag}</div>\n            ) : (\n              <></>\n            )}\n          {/*<input*/}\n          {/*  type=\"text\"*/}\n          {/*  className={classes.input}*/}\n          {/*  onChange={(e) => setNameTag(e.target.value)}*/}\n          {/*></input>*/}\n        </DialogContent>\n        <DialogActions className={classes.buttons}>\n          <span>\n            <button className={classes.cnlbtn} onClick={onClose}>\n              Cancel\n            </button>\n          </span>\n          <span>\n            <button className={classes.addbtn} onClick={TaggedAddress}>\n              Add\n            </button>\n          </span>\n        </DialogActions>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/label.dda2f7e0.svg\";","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Row } from \"simple-flexbox\";\nimport { sessionManager } from \"../../../managers/sessionManager\";\nimport { UserService } from \"../../../services\";\nimport utility from \"../../../utility\";\nimport { cookiesConstants } from \"../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  add: {\n    backgroundColor: \"#2149b9\",\n    marginLeft: \"90px\",\n  },\n  btn: {\n    textAlign: \"start\",\n    padding: \"0px\",\n    border: \"none !important\",\n    background: \"none\",\n    \"&:hover\": { background: \"none\" },\n  },\n  cnlbtn: {\n    width: \"94px\",\n    height: \"34px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#9fa9ba\",\n    color: \"white\",\n\n    margin: \"14px 8px 15px 2px\",\n    padding: \"6px 19px 3px 20px\",\n  },\n  buttons: {\n    padding: \"10px 35px 20px 0px\",\n  },\n  value: {\n    width: \"400px !important\",\n  },\n  cross: {\n    marginTop: \"25px\",\n    marginLeft: \"40px\",\n    fontWeight: \"500\",\n  },\n  dialog: {\n    marginLeft: \"10%\",\n    marginTop: \"6px\",\n    width: \"80% !important\",\n    height: \"67% !important\",\n    borderRadius: \"50px !important\",\n  },\n\n  error: {\n    color: \"red\",\n    marginLeft: \"2px\",\n    marginTop: \"-20px\",\n  },\n  error1: {\n    color: \"red\",\n    marginLeft: \"24px\",\n    marginTop: \"-14px\",\n  },\n\n  input: {\n    width: \"503px\",\n    height: \"10px\",\n    border: \"solid 1px #c6c8ce\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"7px\",\n    outline: \"none\",\n    padding: \"20px\",\n    marginBottom: \"21px\",\n  },\n  textarea: {\n    width: \"503px\",\n    height: \"90px\",\n    border: \"solid 1px #c6c8ce\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"7px\",\n    padding: \"20px\",\n    outline: \"none\",\n    resize: \"none\"\n  },\n\n  addbtn: {\n    width: \"110px\",\n    height: \"34px\",\n    margin: \"14px -8px 15px 2px\",\n    padding: \"6px 19px 3px 20px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#3763dd\",\n    color: \"white\",\n  },\n  subCategory: {\n    marginTop: \"-12px\",\n    marginBottom: \"2px\",\n    fontFamily: \"Inter\",\n    fontSize: \"14px\",\n    color: \"#2a2a2a\",\n    fontWeight: \"500\",\n    border: \"none !important\",\n  },\n  forgotpass: {\n    color: \"#2149b9\",\n    marginLeft: \"123px\",\n  },\n  createaccount: {\n    color: \"#2149b9\",\n    marginLeft: \"32px\",\n    fontfamily: \"Inter\",\n    fontsize: \"14px\",\n  },\n  icon: {\n    marginLeft: \"-30px\",\n  },\n  xdc: {\n    color: \"#2a2a2a\",\n    marginLeft: \"30px\",\n    fontfamily: \"Inter\",\n    fontsize: \"5px\",\n  },\n  heading: {\n    marginTop: \"30px\",\n    marginBottom: \"30px\",\n    marginLeft: \"24px\",\n    fontFamily: \"Inter\",\n    fontWeight: \"600\",\n    fontSize: \"18px\",\n    color: \"#2a2a2a\",\n  },\n  dialogBox: {\n    width: \"553px\",\n    position: \"absolute\",\n    top: \"111px\",\n    borderRadius: \"12px\",\n  },\n  \"@media (max-width: 714px)\": {\n    heading: {\n      fontSize: \"16px\"\n    },\n    dialogBox: {\n      width: \"362px\",\n      top: \"95px\"\n    },\n    input: {\n      maxWidth: \"503px\",\n      width: \"100%\",\n    },\n    notifyLabel: {\n      fontSize: \"13px\",\n      width: \"250px\",\n    },\n    textarea: {\n      maxWidth: \"503px\",\n      width: \"100%\",\n      padding: \"15px\",\n    },\n  },\n}));\n\nexport default function FormDialog(props) {\n  const { open, onClose } = props\n  const [transactionsHash, setTransactionsHash] = React.useState(\"\");\n  const [privateNote, setPrivateNote] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [privateNoteError, setPrivateNoteError] = React.useState(\"\");\n  const [errorEmptyField, setErrorEmptyField] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setTransactionsHash(props.hash)\n    setPrivateNote(props.pvtNote)\n  }, [props])\n  async function transactionLable() {\n    setError(\"\");\n    setPrivateNoteError(\"\");\n    setErrorEmptyField(\"\");\n    if (!transactionsHash && !privateNote) {\n        setErrorEmptyField(\"Please enter required fields\");\n        return\n    }\n    if (!transactionsHash) {\n      setError(\"Please enter required field\");\n    } else if (!privateNote) {\n      setPrivateNoteError(\"Please enter transaction label/note\");\n    } else if (\n      !(transactionsHash && transactionsHash.length === 66) ||\n      !(transactionsHash.slice(0, 2) == \"0x\")\n    ) {\n      setError(\"Invalid transaction hash\");\n    } else if (privateNote.length > 120) {\n      setPrivateNoteError(\"Transaction label/note cannot be longer than 120 characters\");\n    } else {\n    const data = {\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n      trxLable: privateNote,\n      transactionHash: transactionsHash,\n      modifiedOn: Date.now()\n    };\n\n    let transactionLabel = localStorage.getItem(\n        data.userId+cookiesConstants.USER_TRASACTION_LABELS\n    );\n    if (transactionLabel) {\n      transactionLabel = JSON.parse(transactionLabel);\n      let existingIndex = null;\n      const existingTransactionLabel = transactionLabel.find(\n        (item, index) =>\n        {if(item.transactionHash == transactionsHash && item.userId == data.userId){\n          existingIndex = index;\n          return item;\n        }}\n      );\n      if (existingTransactionLabel) {\n        transactionLabel[existingIndex] = data;\n        // utility.apiFailureToast(\"Transaction private note is already in use\");\n        // return;\n      }else\n        transactionLabel.push(data);\n    } else {\n      transactionLabel = [];\n      transactionLabel.push(data);\n    }\n    // transactionLabel.push(data);\n    localStorage.setItem(\n        data.userId+cookiesConstants.USER_TRASACTION_LABELS,\n      JSON.stringify(transactionLabel)\n    );\n    utility.apiSuccessToast(\"Transaction Added\");\n    onClose();\n    await props.getListOfTxnLabel();\n    await props.getTotalCountTxnLabel();\n    setTransactionsHash(\"\");\n    setPrivateNote(\"\");\n  }\n}\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Dialog\n        className={classes.dialog}\n        classes={{ paperWidthSm: classes.dialogBox }}\n        open={open}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <Row>\n          <div className={classes.heading} id=\"form-dialog-title\">\n            Add Transaction Label\n          </div>\n        </Row>\n        {errorEmptyField ? <div className={classes.error1}>{errorEmptyField}</div> : <></>}\n        <DialogContent>\n          <DialogContentText className={classes.subCategory}>\n            Transaction Hash\n          </DialogContentText>\n          <input\n            type=\"text\"\n            value={transactionsHash}\n            className={classes.input}\n            onChange={(e) => setTransactionsHash(e.target.value)}\n          ></input>\n          {error ? <div className={classes.error}>{error}</div> : <></>}\n        </DialogContent>\n        <DialogContent>\n          <DialogContentText className={classes.subCategory}>\n            Transaction Label/Note\n          </DialogContentText>\n          <textarea\n            type=\"text\"\n            className={classes.textarea}\n            value={privateNote}\n            onChange={(e) => setPrivateNote(e.target.value)}\n          ></textarea>\n        </DialogContent>\n        {privateNoteError ? (\n            <div className={classes.error1}>{privateNoteError}</div>\n          ) : (\n            <></>\n          )}\n        <DialogActions className={classes.buttons}>\n          <span style={{ color: \"white\" }}>\n            <button className={classes.cnlbtn} onClick={onClose}>\n              {\" \"}\n              Cancel\n            </button>\n          </span>\n          <span>\n            <button className={classes.addbtn} onClick={transactionLable}>\n              Add\n            </button>\n          </span>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n// import \"tippy.js/dist/tippy.css\";\nimport \"../../assets/styles/custom.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\nimport { useParams } from \"react-router\";\nimport { TransactionService, BlockService } from \"../../services\";\nimport Utils, { dispatchAction } from \"../../utility\";\nimport FooterComponent from \"../common/footerComponent\";\nimport moment from \"moment\";\nimport PrivateAddressTag from \"../../modules/common/dialog/privateAddressTag\";\nimport PrivateNote from \"../../modules/common/dialog/privateNote\";\nimport { sessionManager } from \"../../managers/sessionManager\";\nimport LoginDialog from \"../explorer/loginDialog\";\nimport format from \"format-number\";\nimport { connect, useSelector } from \"react-redux\";\nimport Utility from \"../../utility\";\nimport { cookiesConstants } from \"../../constants\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"75.125rem\",\n\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    marginBottom: \"-39px\",\n\n    width: \"100%\",\n    \"@media (min-width: 0px) and (max-width: 767px)\": {\n      maxWidth: \"22.563rem\",\n      paddingLeft: \"7px\",\n      paddingRight: \"7px\",\n    },\n    \"@media (min-width: 768px) and (max-width: 1240px)\": {\n      maxWidth: \"41.5rem\",\n    },\n  },\n  rowDiv: {\n    width: \"100%\",\n    alignItems: \"center\",\n    height: \"53px\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \"7px\",\n\n    justifyContent: \"space-between\",\n  },\n\n  mainContainer: {\n    width: \"100%\",\n  },\n  mainContainerDark: {\n    width: \"100%\",\n    backgroundColor: \"#091b4e\"\n  },\n}));\n\nfunction Transaction({ _handleChange,theme }) {\n  const classes = useStyles();\n  const { hash } = useParams();\n  const [transactions, setTransactions] = useState(false);\n  const [isPvtNote, setIsPvtNote] = useState(false);\n  const [privateNote, setPrivateNote] = useState(\"\");\n  const [addressTag, setAddressTag] = useState(\"\");\n  const [addressTagTo, setAddressTagTo] = useState(\"\");\n  const [isTag, setIsTag] = useState(false);\n  const [isTagTo, setIsTagTo] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [copiedText, setCopiedText] = useState(\"\");\n  const [fromAddress, setFromAddress] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n\n  function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = React.useState(\n    getWindowDimensions()\n  );\n\n  React.useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  const { width } = windowDimensions;\n\n  const [dialogPvtTagIsOpen, setDialogPvtTagIsOpen] = React.useState(false);\n  const [dialogValue, setDailogValue] = React.useState(0);\n  const [dialogValue2, setDailogValue2] = React.useState(0);\n  const [dialogPvtTagIsOpen2, setDialogPvtTagIsOpen2] = React.useState(false);\n  const [dialogPvtNoteIsOpen, setDialogPvtNoteIsOpen] = React.useState(false);\n  const [loginDialogIsOpen, setLoginDialogIsOpen] = React.useState(false);\n\n  const openDialogPvtTag = () => {\n    window.scrollTo(0, 0);\n    setDialogPvtTagIsOpen(true);\n    setDailogValue(1);\n  };\n  const closeDialogPvtTag = () => {\n    setDialogPvtTagIsOpen(false);\n    setDailogValue(0);\n  };\n  const openDialogPvtTag2 = () => {\n    window.scrollTo(0, 0);\n    setDialogPvtTagIsOpen2(true);\n    setDailogValue2(1);\n  };\n  const closeDialogPvtTag2 = () => {\n    setDialogPvtTagIsOpen2(false);\n    setDailogValue2(0);\n  };\n  const openDialogPvtNote = () => setDialogPvtNoteIsOpen(true);\n  const closeDialogPvtNote = () => setDialogPvtNoteIsOpen(false);\n  const openLoginDialog = () => setLoginDialogIsOpen(true);\n  const closeLoginDialog = () => setLoginDialogIsOpen(false);\n  const [isLoading, setLoading] = useState(true);\n  const [timeStamp, setTimeStamp] = useState();\n  const [price, setPrice] = useState(\"\");\n  const [latestBlock, setLatestBlock] = useState(0);\n  const [isSeeMore, setSeeMore] = useState(false);\n  useEffect(async () => {\n    await transactionDetail();\n    getLatestBlock();\n    privateNoteUsingHash();\n  }, []);\n\n  const transactionDetail = async () => {\n    let urlPath = `${hash}`;\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\n      TransactionService.getTransactionDetailsUsingHash(urlPath, {})\n    );\n    if (\n      !transactiondetailusinghash ||\n      transactiondetailusinghash.length === 0 ||\n      transactiondetailusinghash === undefined ||\n      transactiondetailusinghash === \"\" ||\n      transactiondetailusinghash === null\n    ) {\n      setLoading(false);\n    }\n    if (error || !transactiondetailusinghash) return;\n    setTransactions(transactiondetailusinghash);\n    setTimeStamp(transactiondetailusinghash?.timestamp);\n    setLoading(false);\n\n    tagUsingAddressFrom(transactiondetailusinghash);\n    tagUsingAddressTo(transactiondetailusinghash);\n    setFromAddress(transactiondetailusinghash.from);\n    setToAddress(transactiondetailusinghash.to);\n  };\n  const getLatestBlock = async () => {\n    let urlPath = \"?skip=0&limit=1\";\n    let [error, latestBlocks] = await Utils.parseResponse(\n      BlockService.getLatestBlock(urlPath, {})\n    );\n    if (error || !latestBlocks) return;\n\n    setLatestBlock(latestBlocks);\n  };\n  useEffect(() => {\n    let ts = parseInt(timeStamp);\n    getCoinMarketDetailForTransaction(ts);\n  }, [timeStamp]);\n  useEffect(() => {\n    let ts = parseInt(timeStamp);\n    getCoinMarketDetailForTransaction(ts);\n  }, [amount]);\n  const getCoinMarketDetailForTransaction = async (ts) => {\n    let urlPath = \"?transactionTime=\" + ts + \"&fiatValue=\" + CurrencyValue;\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\n      TransactionService.getCoinMarketDetailForTransaction(urlPath, {})\n    );\n    if (error || !transactiondetailusinghash) return;\n    setPrice(transactiondetailusinghash[0]?.price);\n  };\n\n  const userInfo = sessionManager.getDataFromCookies(\"userInfo\");\n\n  const privateNoteUsingHash = async () => {\n    const data = {\n      transactionHash: `${hash}`,\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n    };\n    let transactionLabel = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TRASACTION_LABELS\n    );\n    transactionLabel = JSON.parse(transactionLabel);\n    if (!transactionLabel || !transactionLabel.length) return;\n\n    const existingTransactionLabel = transactionLabel.find(\n      (item) =>\n        item.transactionHash == data.transactionHash &&\n        item.userId == data.userId\n    );\n    if (existingTransactionLabel) {\n      setPrivateNote(existingTransactionLabel);\n      setIsPvtNote(true);\n    }\n  };\n\n  const getListOfTxnLabel = () => {\n    privateNoteUsingHash();\n  };\n\n  const tagUsingAddressFrom = async (response) => {\n    const data = {\n      address: response.from,\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n    };\n    // let [errors, tagUsingAddressHashResponse] = await Utils.parseResponse(\n    //   TransactionService.getUserAddressTagUsingAddressHash(data)\n    // );\n    // if (errors || !tagUsingAddressHashResponse) return;\n    let taggedAddressFetched = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\n    );\n    let tags =\n      taggedAddressFetched && taggedAddressFetched.length > 0\n        ? JSON.parse(taggedAddressFetched)\n        : \"\";\n    const tagValue =\n      tags && tags.length > 0\n        ? tags?.filter(\n            (obj) => obj.address === data.address && obj.userId == data.userId\n          )\n        : \"\";\n    if (tagValue && tagValue.length) {\n      setAddressTag(tagValue[0]);\n      setIsTag(true);\n    }\n  };\n\n  const tagUsingAddressTo = async (response) => {\n    const data = {\n      address: response.to,\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n    };\n    // let [errors, tagUsingAddressHashResponse] = await Utils.parseResponse(\n    //     TransactionService.getUserAddressTagUsingAddressHash(data)\n    // );\n    // if (errors || !tagUsingAddressHashResponse) return;\n\n    let taggedAddressFetched = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\n    );\n    let tags =\n      taggedAddressFetched && taggedAddressFetched.length > 0\n        ? JSON.parse(taggedAddressFetched)\n        : \"\";\n    const tagValue =\n      tags && tags.length > 0\n        ? tags?.filter(\n            (obj) => obj.address === data.address && obj.userId == data.userId\n          )\n        : \"\";\n    if (tagValue && tagValue.length) {\n      setAddressTagTo(tagValue[0]);\n      setIsTagTo(true);\n    }\n  };\n\n  // ---------------------------------------> fetch from/to address tag (local-storage) <------------------------------------//\n  var addrTagFrom = fromAddress;\n  var addrTagTo = toAddress;\n\n  let taggedAddress = localStorage.getItem(\n    sessionManager.getDataFromCookies(\"userId\") +\n      cookiesConstants.USER_TAGGED_ADDRESS\n  );\n  let tags =\n    taggedAddress && taggedAddress.length > 0 ? JSON.parse(taggedAddress) : \"\";\n  var tagValueFrom =\n    tags && tags.length > 0\n      ? tags?.filter(\n          (obj) => obj.address === addrTagFrom && obj.userId === userInfo.sub\n        )\n      : \"\";\n  var tagValueTo =\n    tags && tags.length > 0\n      ? tags?.filter(\n          (obj) => obj.address === addrTagTo && obj.userId === userInfo.sub\n        )\n      : \"\";\n\n  // ---------------------------------------> fetch pvt note from (local-storage) <--------------------------------------------//\n\n  var pvtNotehash = `${hash}`;\n  let pvtNoteLocal = localStorage.getItem(\n    cookiesConstants.USER_TRASACTION_LABELS\n  );\n\n  let pvtNote =\n    pvtNoteLocal && pvtNoteLocal.length > 0 ? JSON.parse(pvtNoteLocal) : \"\";\n  var pvtNoteValue =\n    pvtNote && pvtNote.length > 0\n      ? pvtNote?.filter(\n          (obj) =>\n            obj.transactionHash === pvtNotehash && obj.userId === userInfo.sub\n        )\n      : \"\";\n\n  const handleSeeMore = () => {\n    setSeeMore(true);\n  };\n  const handleSeeLess = () => {\n    setSeeMore(false);\n  };\n  const hashid = `A transaction hash is a unique character identifier that is generated whenever the transaction is executed. `;\n  const blocknumber = ` The number of block in which transaction was recorded. Block confirmation indicate how many blocks since the transaction is mined.  `;\n  const timestamp = ` The date and time at which a transaction is mined. `;\n  const from = ` The sending party of the transaction(could be from a contact address)  `;\n  const to = ` The receiving party of the transaction(could be from a contact address) `;\n  const value = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\n  const txnfee = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\n  const gasprovided = `Maximum amount of gas provided for the transaction. For normal XDC transfers the value is 21,000. For contract this value is higher an bound by block gas limit. `;\n  const gasprice = ` Cost per unit of gas specified for the transaction, in XDC and Gwei. The higher the gas price the higher hance of getting included in a block `;\n  const gasused = ` The exact unit of gas that was used for the transactions. `;\n  const nounced = ` Sequential running number for an address, beginning with 0 for the first transaction. For example, if the nonce of a transaction is 10, it would be 11th transaction sent from the sender's address. `;\n  const input = `Additional information that is required for the transaction `;\n  const transferToken = `The value being transacted in XDC and fiat value. Note: You can click the fiat value (if available) to see historical value at the time of transaction.`;\n  const privatenote = `User can add a private note to the transaction. Private note is being saved in the local storage of the device.`;\n\n  function _handleChange(event) {\n    setAmount(event?.target?.value);\n    window.localStorage.setItem(\"currency\", event?.target?.value);\n  }\n\n  let CurrencyValue = window.localStorage.getItem(\"currency\");\n  const currencySymbol =\n    CurrencyValue === \"INR\" ? \"₹\" : CurrencyValue === \"USD\" ? \"$\" : \"€\";\n  const valueFetch =\n    CurrencyValue === \"INR\" ? price : CurrencyValue === \"USD\" ? price : price;\n  const txfee = !transactions\n    ? 0\n    : Utils.decimalDivison(transactions?.gasPrice * transactions?.gasUsed, 8);\n\n  const txnFee = parseFloat(txfee)?.toFixed(8).replace(/0+$/, \"\");\n\n  let txnFee1 = txnFee.toString().split(\".\")[0];\n  let txnFee2 = txnFee.toString().split(\".\")[1];\n\n  const transactionFetch =\n    CurrencyValue === \"INR\"\n      ? txfee * price\n      : CurrencyValue === \"USD\"\n      ? txfee * price\n      : txfee * price;\n  const fetchtxn = !transactionFetch\n    ? 0\n    : parseFloat(transactionFetch)?.toFixed(8);\n  let fetchtxn1 = fetchtxn.toString().split(\".\")[0];\n  let fetchtxn2 = fetchtxn.toString().split(\".\")[1];\n\n  const gasP = !transactions.gasPrice\n    ? 0\n    : Utils.decimalDivison(transactions.gasPrice, 12);\n  const gasPrice = parseFloat(gasP)?.toFixed(12).replace(/0+$/, \"\");\n  let gasPrice1 = gasPrice.toString().split(\".\")[0];\n  let gasPrice2 = gasPrice.toString().split(\".\")[1];\n  const avgTxnFeeConverted =\n    CurrencyValue === \"INR\"\n      ? gasP * price\n      : CurrencyValue === \"USD\"\n      ? gasP * price\n      : gasP * price;\n  const avgTxnFeeFetch = !avgTxnFeeConverted\n    ? 0\n    : parseFloat(avgTxnFeeConverted)?.toFixed(14);\n  let avgTxnFeeFetch1 = avgTxnFeeFetch.toString().split(\".\")[0];\n  let avgTxnFeeFetch2 = avgTxnFeeFetch.toString().split(\".\")[1];\n\n  let transactionValue =\n    transactions?.value <\n    1000000000000 /*there are some transactions which are not in gwei in ou DB*/\n      ? transactions?.value * 1000000000000000000\n      : transactions?.value;\n  const valueDiv =\n    transactions?.value > 0 && transactions?.value < 1\n      ? (valueFetch * transactionValue).toFixed(8)\n      : Utils.decimalDivison(valueFetch * transactionValue, 8);\n  let ValueMain =\n    transactions?.value > 0 && transactions?.value < 1\n      ? transactions?.value\n      : Utils.decimalDivison(transactionValue, 8);\n  let bx = latestBlock[0]?.number - transactions?.blockNumber;\n  const getHoursAgo = (date) => {\n    let today = Date.now();\n    let difference = today - date;\n    var daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    difference -= daysDifference * 1000 * 60 * 60 * 24;\n    var hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    difference -= hoursDifference * 1000 * 60 * 60;\n    var minutesDifference = Math.floor(difference / 1000 / 60);\n    difference -= minutesDifference * 1000 * 60;\n    var secondsDifference = Math.floor(difference / 1000);\n    if (\n      secondsDifference < 60 &&\n      minutesDifference === 0 &&\n      hoursDifference === 0 &&\n      daysDifference === 0\n    ) {\n      if (secondsDifference === 1) return secondsDifference + \" second ago \";\n      else return secondsDifference + \" seconds ago \";\n    }\n    if (\n      minutesDifference < 60 &&\n      hoursDifference === 0 &&\n      daysDifference === 0\n    ) {\n      if (minutesDifference === 1) return minutesDifference + \" minute ago \";\n      return minutesDifference + \" minutes ago\";\n    }\n    if (hoursDifference < 60 && daysDifference === 0) {\n      if (hoursDifference === 1) return hoursDifference + \" hour ago \";\n      return hoursDifference + \" hours ago\";\n    }\n    if (daysDifference < 30) {\n      if (hoursDifference === 1) return hoursDifference + \" day ago \";\n      return daysDifference + \" days ago\";\n    }\n  };\n  const timezone = useSelector((state) => state.timezone);\n\n  return (\n    <div className={theme.currentTheme === \"dark\" ? classes.mainContainerDark : classes.mainContainer}>\n      <Tokensearchbar theme={theme.currentTheme}/>\n\n      <div className={classes.root}>\n        <Grid>\n          <div className={isLoading == true ? \"cover-spin-2\" : \"\"}>\n            <div className={isLoading == true ? \"cover-spin\" : \"\"}>\n              <Container>\n                <Heading theme={theme.currentTheme}>Transaction Details</Heading>\n              </Container>\n\n              <Div theme={theme.currentTheme}>\n                {transactions ? (\n                  transactions.status == true ? (\n                    <StatusContainer theme={theme.currentTheme}>\n                      <StatusContainerInside>\n                        <StatusImgContainer>\n                          <StatusImg src=\"/images/success.svg\"></StatusImg>\n                        </StatusImgContainer>\n                        <StatusTextSuccess>Success</StatusTextSuccess>\n                      </StatusContainerInside>\n                    </StatusContainer>\n                  ) : (\n                    <StatusContainer>\n                      <StatusImgContainer>\n                        <StatusImg src=\"/images/failed.svg\"></StatusImg>\n                      </StatusImgContainer>\n                      <StatusTextFailed>Failed</StatusTextFailed>\n                    </StatusContainer>\n                  )\n                ) : null}\n                <TxnDetailsRightContainer>\n                  <TxnDetailsRightTopContainer>\n                    <Container>\n                      <Tooltip align=\"right\" title={hashid}>\n                        <ImageView src={\"/images/info.svg\"} />\n                      </Tooltip>\n\n                      <Hash theme={theme.currentTheme}>Transaction Hash</Hash>\n                    </Container>\n                    <DetailsMiddleContainer isTextArea={false}>\n                      <ContentHash theme={theme.currentTheme}>\n                        {hash}\n                        {/* {width > 1240\n                        ? hash\n                        : width <= 1240 && width >= 768\n                          ? Utils.shortenHashTab(hash)\n                          : hash} */}\n                      </ContentHash>\n                      <span\n                        className={\n                          width >= 768\n                            ? \"copyEditContainer2\"\n                            : \"copyEditContainerMobile\"\n                        }\n                      >\n                        <CopyToClipboard\n                          text={hash}\n                          onCopy={() => setCopiedText(hash)}\n                        >\n                          <Tooltip\n                            title={\n                              copiedText === hash\n                                ? \"Copied\"\n                                : \"Copy To Clipboard\"\n                            }\n                            placement=\"top\"\n                          >\n                            <button\n                              className={\n                                width > 1240\n                                  ? theme.currentTheme === \"dark\" ? \"copyToClipboardHashDark\" : \"copyToClipboardHash\"\n                                  : theme.currentTheme === \"dark\" ? \"copyToClipboardHashMobileDark\" : \"copyToClipboardHashMobile\"\n                              }\n                            >\n                              <img\n                                className={\n                                  width > 1240\n                                    ? \"copy-icon\"\n                                    : width < 768\n                                    ? \"copyIconHashMobile\"\n                                    : \"copyIconHash\"\n                                }\n                                src={\"/images/copy-grey.svg\"}\n                              />\n                            </button>\n                          </Tooltip>\n                        </CopyToClipboard>\n                        {userInfo ? ( privateNote ?<></>:\n                          <>\n                            {\n                              <PrivateNote\n                                open={dialogPvtNoteIsOpen}\n                                getListOfTxnLabel={getListOfTxnLabel}\n                                getTotalCountTxnLabel={() => {}}\n                                onClose={closeDialogPvtNote}\n                                hash={hash}\n                                pvtNote={privateNote[0]?.trxLable}\n                              />\n                            }\n                            {\n                              <Tooltip\n                                title=\"Add Transaction Label\"\n                                placement=\"top\"\n                              >\n                                <img\n                                  className={\n                                    width > 1240 ? \"edit-icon\" : \"editIconHash\"\n                                  }\n                                  onClick={openDialogPvtNote}\n                                  src={require(\"../../../src/assets/images/label.svg\")}\n                                />\n                              </Tooltip>\n                            }\n                          </>\n                        ) : (\n                          \"\"\n                        )}\n                      </span>\n                    </DetailsMiddleContainer>\n                  </TxnDetailsRightTopContainer>\n                  <TxnDetailsRightBottomContainer>\n                    <DetailsContainer>\n                      <Container>\n                        <Tooltip title={value}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n                        <Hash theme={theme.currentTheme}>Transaction Value</Hash>\n                      </Container>\n                      <Tooltip title={transactions?.value}>\n                        <DetailsMiddleContainer isTextArea={false} theme={theme.currentTheme}>\n                          {ValueMain}&nbsp;XDC{\" \"}\n                          {!valueDiv\n                            ? \" \"\n                            : \"(\" + (currencySymbol + valueDiv) + \")\"}\n                        </DetailsMiddleContainer>\n                      </Tooltip>\n                    </DetailsContainer>\n                    {/* ------------------------------------------------time stamp------------------------------------- */}\n                    <DetailsContainer className=\"mobileTimeStamp\">\n                      <Container>\n                        <Tooltip title={timestamp}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n\n                        <Hash theme={theme.currentTheme}>Transaction Timestamp</Hash>\n                      </Container>\n                      <DetailsMiddleContainer isTextArea={false} theme={theme.currentTheme}>\n                        {/*============================================= {\" \"}\n                        {moment(transactions.timestamp * 1000).format(\n                          \"MMMM Do YYYY, h:mm:ss a\"\n                        )}{\" \"}============================ */}\n                        {`${\n                          (transactions?.timestamp &&\n                            moment(transactions.timestamp * 1000)\n                              .tz(timezone)\n                              .format(\"MMM DD, YYYY, hh:mm A\")) ||\n                          \"\"\n                        } ${\n                          (timezone && Utility.getUtcOffset(timezone)) || \"\"\n                        }`}\n                        {/*============================================================================({getHoursAgo(transactions.timestamp * 1000)})==================================*/}\n                      </DetailsMiddleContainer>\n                    </DetailsContainer>\n                    {/* ------------------------------------------------------block-------------------------------  */}\n                    <DetailsContainer>\n                      <Container>\n                        <Tooltip title={blocknumber}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n\n                        <Hash theme={theme.currentTheme}>Block Number</Hash>\n                      </Container>\n                      <DetailsMiddleContainer isTextArea={false} theme={theme.currentTheme}>\n                        <Content >\n                          <a\n                            className=\"linkTableDetails-transaction\"\n                            href={\"/block-details/\" + transactions.blockNumber}\n                          >\n                            {\" \"}\n                            {transactions.blockNumber\n                              ? transactions.blockNumber\n                              : \"\"}\n                          </a>\n                          &nbsp;{\" \"}\n                          <BlockConfirmation theme={theme.currentTheme}>\n                            {bx} Blocks Confirmation\n                          </BlockConfirmation>\n                        </Content>\n                      </DetailsMiddleContainer>\n                    </DetailsContainer>\n                  </TxnDetailsRightBottomContainer>\n                </TxnDetailsRightContainer>\n              </Div>\n\n              <DivMiddleContainer>\n                {/* -----------------------------------------------from---------------------------- */}\n                <DivMiddle theme={theme.currentTheme}>\n                  <Container>\n                    <Tooltip title={from}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n\n                    <Hash theme={theme.currentTheme}>From</Hash>\n                  </Container>\n                  <DetailsMiddleContainer isTextArea={false}>\n                    <Content>\n                      {\" \"}\n                      <div style={{ display: width >= 768 ? \"flex\" : \"block\" }}>\n                        <a\n                          className={theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction-dark\" : \"linkTableDetails-transaction\"}\n                          href={\"/address-details/\" + transactions.from}\n                        >\n                          {transactions.from}\n                        </a>\n                        <div\n                          className={\n                            width < 768\n                              ? \"fromContainerMobile\"\n                              : \"fromContainer\"\n                          }\n                        >\n                          <CopyToClipboard\n                            text={transactions.from}\n                            onCopy={() => setCopiedText(transactions.from)}\n                          >\n                            <Tooltip\n                              title={\n                                copiedText === transactions.from\n                                  ? \"Copied\"\n                                  : \"Copy To Clipboard\"\n                              }\n                              placement=\"top\"\n                            >\n                              <button\n                                className={\n                                  width > 1240\n                                    ? theme.currentTheme === \"dark\" ? \"copyToClipboardHashDark\" : \"copyToClipboardHash\"\n                                    : theme.currentTheme === \"dark\" ? \"copyToClipboardHashMobileDark\" : \"copyToClipboardHashMobile\"\n                                }\n                              >\n                                <img\n                                  className={\n                                    width > 1240\n                                      ? \"copy-icon\"\n                                      : width < 768\n                                      ? \"copy-icon-from\"\n                                      : \"copy-icon-from-tab\"\n                                  }\n                                  src={\"/images/copy-grey.svg\"}\n                                />\n                              </button>\n                            </Tooltip>\n                          </CopyToClipboard>\n                        </div>\n                      </div>\n                    </Content>\n                    <TabTag>\n                      {width >= 768 && width <= 1240 ? (\n                        userInfo ? (\n                          <>\n                            {\n                              <PrivateAddressTag\n                                open={dialogPvtTagIsOpen}\n                                onClose={closeDialogPvtTag}\n                                fromAddr={transactions.from}\n                                value={dialogValue}\n                                hash={hash}\n                              />\n                            }\n\n                            {tagValueFrom && tagValueFrom?.length > 0 ? (\n                              <Tag>\n                                {\n                                  tagValueFrom[tagValueFrom?.length - 1]\n                                    ?.tagName\n                                }\n                              </Tag>\n                            ) : (\n                              <Tooltip\n                                title=\"Add a new Address Tag\"\n                                placement=\"top\"\n                              >\n                                {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                                <AddTagContainer onClick={openDialogPvtTag}>\n                                  <ImgAddTag>\n                                    <img src=\"/images/add-tag-white.svg\" />\n                                  </ImgAddTag>\n                                  <AddTagtext>Add Tag</AddTagtext>\n                                </AddTagContainer>\n                              </Tooltip>\n                            )}\n                          </>\n                        ) : (\n                          \"\"\n                        )\n                      ) : (\n                        \"\"\n                      )}\n                    </TabTag>\n                  </DetailsMiddleContainer>\n                  <MobileDesktopTag>\n                    {width < 768 || width > 1240 ? (\n                      userInfo ? (\n                        <>\n                          {\n                            <PrivateAddressTag\n                              open={dialogPvtTagIsOpen}\n                              onClose={closeDialogPvtTag}\n                              fromAddr={transactions.from}\n                              value={dialogValue}\n                              hash={hash}\n                            />\n                          }\n\n                          {tagValueFrom && tagValueFrom?.length ? (\n                            <Tag>\n                              {tagValueFrom[tagValueFrom?.length - 1]?.tagName}\n                            </Tag>\n                          ) : (\n                            <Tooltip\n                              title=\"Add a new Address Tag\"\n                              placement=\"top\"\n                            >\n                              {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                              <AddTagContainer onClick={openDialogPvtTag}>\n                                <ImgAddTag>\n                                  <img src=\"/images/add-tag-white.svg\" />\n                                </ImgAddTag>\n                                <AddTagtext>Add Tag</AddTagtext>\n                              </AddTagContainer>\n                            </Tooltip>\n                          )}\n                        </>\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </MobileDesktopTag>\n                </DivMiddle>\n                <DivCircle>\n                  <ImgNextArrow>\n                    <img src=\"/images/next-arrow.svg\" />\n                  </ImgNextArrow>\n                </DivCircle>\n                {/* --------------------------------------------------------------------to--------------------- */}\n                <DivMiddle theme={theme.currentTheme}>\n                  <Container>\n                    <Tooltip title={to}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n\n                    <Hash theme={theme.currentTheme}>To</Hash>\n                  </Container>\n                  <DetailsMiddleContainer isTextArea={false}>\n                    <Content>\n                      <span\n                        style={{ display: width >= 768 ? \"flex\" : \"block\" }}\n                      >\n                        <a\n                          className={theme.currentTheme === \"dark\" ? \"linkTableDetails-transaction-dark\" : \"linkTableDetails-transaction\"}\n                          href={\"/address-details/\" + transactions.to}\n                        >\n                          {transactions.to\n                            ? transactions.to\n                            : transactions.contractAddress}\n                        </a>\n                        <div\n                          className={\n                            width < 768\n                              ? \"fromContainerMobile\"\n                              : \"fromContainer\"\n                          }\n                        >\n                          <CopyToClipboard\n                            text={transactions.to}\n                            onCopy={() => setCopiedText(transactions.to)}\n                          >\n                            <Tooltip\n                              title={\n                                copiedText === transactions.to\n                                  ? \"Copied\"\n                                  : \"Copy To Clipboard\"\n                              }\n                              placement=\"top\"\n                            >\n                              <button\n                                className={\n                                  width > 1240\n                                    ? theme.currentTheme === \"dark\" ? \"copyToClipboardHashDark\" : \"copyToClipboardHash\"\n                                    : theme.currentTheme === \"dark\" ? \"copyToClipboardHashMobileDark\" : \"copyToClipboardHashMobile\"\n                                }\n                              >\n                                <img\n                                  className={\n                                    width > 1240\n                                      ? \"copy-icon\"\n                                      : width < 768\n                                      ? \"copy-icon-from\"\n                                      : \"copy-icon-from-tab\"\n                                  }\n                                  src={\"/images/copy-grey.svg\"}\n                                />\n                              </button>\n                            </Tooltip>\n                          </CopyToClipboard>\n                        </div>\n                      </span>\n                    </Content>\n                    <TabTag>\n                      {width >= 768 && width <= 1240 ? (\n                        userInfo ? (\n                          <>\n                            {\n                              <PrivateAddressTag\n                                open={dialogPvtTagIsOpen2}\n                                onClose={closeDialogPvtTag2}\n                                toAddr={transactions.to}\n                                value={dialogValue2}\n                                hash={hash}\n                              />\n                            }\n                            {tagValueTo && tagValueTo?.length ? (\n                              <Tag>\n                                {tagValueTo[tagValueTo?.length - 1]?.tagName}\n                              </Tag>\n                            ) : (\n                              <Tooltip\n                                title=\"Add a new Address Tag\"\n                                placement=\"top\"\n                              >\n                                {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag2}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                                <AddTagContainer onClick={openDialogPvtTag2}>\n                                  <ImgAddTag>\n                                    <img src=\"/images/add-tag-white.svg\" />\n                                  </ImgAddTag>\n                                  <AddTagtext>Add Tag</AddTagtext>\n                                </AddTagContainer>\n                              </Tooltip>\n                            )}\n                          </>\n                        ) : (\n                          \"\"\n                        )\n                      ) : (\n                        \"\"\n                      )}\n                    </TabTag>\n                  </DetailsMiddleContainer>\n                  <MobileDesktopTag>\n                    {width < 768 || width > 1240 ? (\n                      userInfo ? (\n                        <>\n                          {\n                            <PrivateAddressTag\n                              open={dialogPvtTagIsOpen2}\n                              onClose={closeDialogPvtTag2}\n                              toAddr={transactions.to}\n                              value={dialogValue2}\n                              hash={hash}\n                            />\n                          }\n                          {tagValueTo && tagValueTo?.length ? (\n                            <Tag>\n                              {tagValueTo[tagValueTo?.length - 1]?.tagName}\n                            </Tag>\n                          ) : (\n                            <Tooltip\n                              title=\"Add a new Address Tag\"\n                              placement=\"top\"\n                            >\n                              {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag2}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                              <AddTagContainer onClick={openDialogPvtTag2}>\n                                <ImgAddTag>\n                                  <img src=\"/images/add-tag-white.svg\" />\n                                </ImgAddTag>\n                                <AddTagtext>Add Tag</AddTagtext>\n                              </AddTagContainer>\n                            </Tooltip>\n                          )}\n                        </>\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </MobileDesktopTag>\n                </DivMiddle>\n              </DivMiddleContainer>\n\n              <Div__ theme={theme.currentTheme}>\n              <Spacing>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasprovided}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Token Transferred</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    <TokenTransferredMiddleContainer>\n                      <TokenTransferredContent>\n                    <BlackText>XRC-721</BlackText>\n                    <GreyText>Token ID</GreyText>\n                    <GreyText>[</GreyText>\n                    <BlueText>1256</BlueText>\n                    <GreyText>]</GreyText>\n                    <BlueText>CunningFox.. (CFX)</BlueText>\n                    </TokenTransferredContent>\n                    <ImgProfileIcon src=\"/images/xyz.svg\" />\n                    </TokenTransferredMiddleContainer>\n                  </MiddleContainer>\n                </Spacing>\n                <SpacingTxnAction>\n                  <ContainerTxnAction>\n                    <Tooltip align=\"right\" title={gasprovided}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Txn Action</Hash>\n                  </ContainerTxnAction>\n                  <MiddleContainer isTextArea={false}>\n                  <MainContainerTxnAction>\n                    <TxnActionNextRow>\n                      <div className=\"arrow_right_grey\">\n                        <BsCaretRightFill size={10}/>\n                      </div>\n                      <GreyText>Sale:</GreyText>\n                      <BlackText>1 NFT</BlackText>\n                      <GreyText>For</GreyText>\n                      <BlackText>2500.00 XDC</BlackText>\n                      <ImgNextRed src=\"/images/xyz.svg\" />\n                      <BlackText>FleekApp</BlackText>\n                    </TxnActionNextRow>\n                    <TxnActionNextRow>\n                      <Gap1 />\n                      <div className=\"arrow_right_grey\">\n                        <BsCaretRightFill size={10}/>\n                      </div>\n                      <BlackText>Transfer of</BlackText>\n                      <BlueText>CunningFox.. (CFX)</BlueText>\n                      <GreyText>from</GreyText>\n                      <BlueText>xdcc4e69958…5b9c</BlueText>\n                      <GreyText>to</GreyText>\n                      <BlueText>xdcc4e69958…9e9a</BlueText>\n                    </TxnActionNextRow>\n                    <TxnActionNextRow>\n                      <Gap2 />\n                      <div className=\"arrow_right_grey\">\n                        <BsCaretRightFill size={10}/>\n                      </div>\n                      <BlackText>1 of</BlackText>\n                      <GreyText>Token ID</GreyText>\n                      <GreyText>[</GreyText>\n                      <BlueText>1256</BlueText>\n                      <GreyText>]</GreyText>\n                    </TxnActionNextRow>  \n                  </MainContainerTxnAction>\n                  </MiddleContainer>\n                </SpacingTxnAction>\n                <SpacingInteractedWith>\n                  <ContainerInteractedWith>\n                    <Tooltip align=\"right\" title={gasprovided}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Interacted With (To)</Hash>\n                  </ContainerInteractedWith>\n                  <MiddleContainer isTextArea={false}>\n                  <MainContainerInteractedWith>\n                    <ContentInteractedWith>\n                      <div>Contract</div>\n                      &nbsp;\n                      <span><a className=\"linkTableDetails-transaction\" href={\"#\"}>\n                      xdcc4e699581116412965b5e7c71b8e2dd50ac341eb9a\n                      </a></span>\n                      &nbsp;&nbsp;\n                      (<div>FleekApp</div>)\n                      <ImgInteracted src=\"/images/success.svg\" />\n                      <ImgCopyGrey src=\"/images/copy-grey.svg\" />\n                    </ContentInteractedWith>\n                    <InteractedWithNextRow>\n                      <ImgNewLine src=\"/images/xyz.svg\" />\n                      <GreyText>TRANSFER</GreyText>\n                      <BlackText>0.000000006 XDC</BlackText>\n                      <GreyText>From</GreyText>\n                      <BlueText>Fleek: NFT App</BlueText>\n                      <GreyText>to</GreyText>\n                      <BlackText>Fleek:</BlackText>\n                      <BlueText>NFT App</BlueText>\n                    </InteractedWithNextRow>\n                    <InteractedWithNextRow>\n                      <ImgNewLine src=\"/images/xyz.svg\" />\n                      <GreyText>TRANSFER</GreyText>\n                      <BlackText>0.000000006 XDC</BlackText>\n                      <GreyText>From</GreyText>\n                      <BlueText>Fleek: NFT App</BlueText>\n                      <GreyText>to</GreyText>\n                      <BlueText>xdcc4e6995811141…eb9a</BlueText>\n                    </InteractedWithNextRow>\n                    </MainContainerInteractedWith>\n                  </MiddleContainer>\n                </SpacingInteractedWith>\n                {/* -------------------------------------------------------------txn fee----------------------- */}\n                <Spacing theme={theme.currentTheme}>\n                  <Container>\n                    <Tooltip title={txnfee}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n\n                    <Hash theme={theme.currentTheme}>Transaction Fee</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    <Content theme={theme.currentTheme}>\n                      {\" \"}\n                      {txnFee2 == 0 ? (\n                        <span>{txnFee1}</span>\n                      ) : (\n                        <span>\n                          {txnFee1}\n                          {\".\"}\n                          <span style={{ color: \"#9FA9BA\" }}>{txnFee2}</span>\n                        </span>\n                      )}\n                      &nbsp;XDC ({currencySymbol}\n                      {fetchtxn2 == null ? (\n                        <span>{fetchtxn1}</span>\n                      ) : (\n                        <span>\n                          {fetchtxn1}\n                          {\".\"}\n                          <span style={{ color: \"#9FA9BA\" }}>{fetchtxn2}</span>\n                        </span>\n                      )}\n                      )\n                    </Content>\n                  </MiddleContainer>\n                </Spacing>\n                <Spacing theme={theme.currentTheme}>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasprovided}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash theme={theme.currentTheme}>Gas Provided</Hash>\n                  </Container>\n                  <MiddleContainer theme={theme.currentTheme} isTextArea={false}>\n                    {format({})(transactions.gas)}\n                  </MiddleContainer>\n                </Spacing>\n                <Spacing theme={theme.currentTheme}>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasprice}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash theme={theme.currentTheme}>Avg Transaction Fee</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    <Content theme={theme.currentTheme}>\n                    {gasPrice2 == 0 ? (\n                      <span>{gasPrice1}</span>\n                    ) : (\n                      <span>\n                        {gasPrice1}\n                        {\".\"}\n                        <span style={{ color: \"#9FA9BA\" }}>{gasPrice2}</span>\n                      </span>\n                    )}\n                    &nbsp;XDC ({currencySymbol}\n                      {avgTxnFeeFetch2 == null ? (\n                        <span>{avgTxnFeeFetch1}</span>\n                      ) : (\n                        <span>\n                          {avgTxnFeeFetch1}\n                          {\".\"}\n                          <span style={{ color: \"#9FA9BA\" }}>{avgTxnFeeFetch2}</span>\n                        </span>\n                      )}\n                      )\n                      </Content>\n                    {/* <Content> {gasP}</Content> */}\n                  </MiddleContainer>\n                </Spacing>\n                <Spacing theme={theme.currentTheme}>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasused}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash theme={theme.currentTheme}>Gas Used</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    <Content theme={theme.currentTheme}>{format({})(transactions?.gasUsed)}</Content>\n                  </MiddleContainer>\n                </Spacing>\n                {!isSeeMore ? (\n                  <Spacing theme={theme.currentTheme}>\n                    <SeeMoreContainer onClick={handleSeeMore}>\n                      <SeeMoreText>See more</SeeMoreText>\n                      <ImgSeeMore src=\"/images/see-more.svg\"></ImgSeeMore>\n                    </SeeMoreContainer>\n                  </Spacing>\n                ) : (\n                  <>\n                    <Spacing theme={theme.currentTheme}>\n                      <Container>\n                        <Tooltip align=\"right\" title={nounced}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n                        <Hash theme={theme.currentTheme}>Nonce</Hash>\n                      </Container>\n                      <MiddleContainer isTextArea={false}>\n                        <Content theme={theme.currentTheme}> {transactions.nonce}</Content>\n                      </MiddleContainer>\n                    </Spacing>\n                    <SpacingInputData theme={theme.currentTheme}>\n                      <Container>\n                        <Tooltip align=\"right\" title={input}>\n                          <ImageViewInputData src={\"/images/info.svg\"} />\n                        </Tooltip>\n                        <HashInputData theme={theme.currentTheme}>Input Data</HashInputData>\n                      </Container>\n                      <MiddleContainerInputData isTextArea={true}>\n                        <div className=\"transaction-details-input-data\">\n                          <textarea\n                            className={theme.currentTheme === \"dark\" ? \"text-area-transaction-dark\" : \"text-area-transaction\"}\n                            readOnly\n                            value={transactions.input}\n                          />\n                        </div>\n                      </MiddleContainerInputData>\n                    </SpacingInputData>\n                    <Spacing theme={theme.currentTheme}>\n                      <SeeMoreContainer onClick={handleSeeLess}>\n                        <SeeMoreText>See Less</SeeMoreText>\n                        <ImgSeeLess src=\"/images/see-more.svg\"></ImgSeeLess>\n                      </SeeMoreContainer>\n                    </Spacing>\n                  </>\n                )}\n                <SpacingPrivateNode>\n                  <Container>\n                    <Tooltip align=\"right\" title={privatenote}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash theme={theme.currentTheme}>Private Note</Hash>\n                  </Container>\n                  <MiddleContainerPrivateNote theme={theme.currentTheme}>\n                    {!userInfo ? (\n                      <PrivateText>\n                        {\n                          <LoginDialog\n                            open={loginDialogIsOpen}\n                            onClose={closeLoginDialog}\n                            dataHashOrAddress={hash}\n                          />\n                        }\n                        To access the private note feature, you must be\n                        <a\n                          className=\"linkTableDetails-transaction\"\n                          style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\n                          onClick={openLoginDialog}\n                        >\n                          Logged In\n                        </a>\n                      </PrivateText>\n                    ) : privateNote ? (\n                      <span>{privateNote?.trxLable}</span>\n                    ) : (\n                      <AddLabel>\n                        <AddLabelText>\n                          Add private note by clicking on this icon\n                        </AddLabelText>\n                        {\n                          <PrivateNote\n                            open={dialogPvtNoteIsOpen}\n                            getListOfTxnLabel={getListOfTxnLabel}\n                            getTotalCountTxnLabel={() => {}}\n                            onClose={closeDialogPvtNote}\n                            hash={hash}\n                            pvtNote={\n                              pvtNoteValue[pvtNoteValue?.length - 1]?.trxLable\n                            }\n                          />\n                        }\n                        {\n                          <Tooltip\n                            title=\"Add Transaction Label\"\n                            placement=\"top\"\n                          >\n                            <img\n                              className={\n                                width > 1240 ? \"edit-icon1\" : \"editIconHash\"\n                              }\n                              onClick={openDialogPvtNote}\n                              src={require(\"../../../src/assets/images/label.svg\")}\n                            />\n                          </Tooltip>\n                        }\n                      </AddLabel>\n                    )}\n                  </MiddleContainerPrivateNote>\n                </SpacingPrivateNode>\n              </Div__>\n              <br />\n              <br />\n            </div>\n          </div>\n        </Grid>\n      </div>\n\n      <FooterComponent theme={theme.currentTheme} _handleChange={_handleChange} currency={amount} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { theme: state.theme };\n};\nexport default connect(mapStateToProps, { dispatchAction })(Transaction);\n\nconst Input = styled.input`\n  border-radius: 5px;\n  border: solid 1px #e3e7eb;\n  background-color: #fff;\n  font-family: Inter;\n  font-size: 14px;\n\n  text-align: left;\n  color: #2a2a2a;\n`;\nconst Content = styled.div`\n  font-family: Inter;\n  font-size: 0.935rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  line-height: 22px;\n  display: flex;\n  align-items: center;\n  ${({ theme }) => theme === \"dark\" && `\n     color: #b1c3e1;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    line-height: 18px !important;\n    word-break: break-all;\n    ${({ theme }) => theme === \"dark\" && `\n     color: #b1c3e1;\n  `}\n  }\n  @media (min-width: 768px) and (max-width: 1241px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    ${({ theme }) => theme === \"dark\" && `\n     color: #b1c3e1;\n  `}\n  }\n`;\nconst ContentHash = styled.div`\n  font-family: Inter;\n  font-size: 0.935rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  line-height: 22px;\n  display: flex;\n  align-items: center;\n  ${({ theme }) => theme === \"dark\" && `\n    color: #b1c3e1;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n    line-height: 18px !important;\n    word-break: break-all;\n    ${({ theme }) => theme === \"dark\" && `\n    color: #b1c3e1;\n    `}\n  }\n  @media (min-width: 768px) and (max-width: 1241px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    width: 33rem;\n    ${({ theme }) => theme === \"dark\" && `\n    color: #b1c3e1;\n    `}\n  }\n`;\nconst TextArea = styled.textarea`\n  opacity: 0.33;\n  border-radius: 4px;\n  border: solid 1px #9fa9ba;\n  background-color: #dee0e3;\n  width: 100%;\n  font-family: Inter;\n  font-size: 14px;\n  float: left;\n  padding: 14px;\n  overflow-y: auto;\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 110%;\n  }\n`;\nconst PrivateText = styled.p`\n  display: contents;\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: contents;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    display: block;\n    margin-bottom: -5px;\n  }\n`;\nconst Div__ = styled.div`\n  width: 75.125rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  padding: 0.563rem;\n  padding-left: 27px;\n  padding-right: 25px;\n  margin-top: 35px;\n  ${({ theme }) => theme === \"dark\" && `\n     background-color: #192a59;\n     margin-bottom: 35px;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    max-width: 22.563rem;\n    width: 100%;\n    // height: 61rem;\n    padding-left: 10px;\n    padding-right: 10px;\n    margin-bottom: 35px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 41.5rem;\n    height: unset;\n    margin-bottom: 54px;\n  }\n`;\nconst MiddleContainerPrivateNote = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  border-radius: 4px;\n  border: solid 1px #9fa9ba;\n  height: auto;\n  padding: 1px 9px 1px 18px;\n  ${({ theme }) => theme === \"dark\" && `\n     color: #ffffff;\n     border: 1px solid #9fa9ba;\n     background-color: #9fa9ba;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    margin-top: 10px;\n    font-size: 0.875rem;\n    text-align: left;\n\n    opacity: 1;\n    word-break: break-all;\n    margin-left: unset;\n    line-height: 1.5;\n    height: auto;\n    padding: 1px 6px 1px 6px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    text-align: left;\n\n    opacity: 1;\n    margin-left: 100px;\n  }\n`;\nconst MiddleContainerInputData = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    text-align: left;\n\n    opacity: 1;\n    word-break: break-all;\n    margin-left: unset;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    opacity: 1;\n    margin-left: 100px;\n  }\n`;\n\nconst MiddleContainer = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  ${({ theme }) => theme === \"dark\" && `\n     color: #b1c3e1;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    word-break: break-all;\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\n    margin-left: unset;\n    margin-top: 10px;\n    ${({ theme }) => theme === \"dark\" && `\n     color: #b1c3e1;\n  `}\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    margin-left: 100px;\n    ${({ theme }) => theme === \"dark\" && `\n     color: #b1c3e1;\n  `}\n  }\n`;\n\nconst MiddleContainer1 = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    word-break: break-all;\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\n    margin-left: unset;\n    margin-top: 10px;\n    display: block;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    // word-break: break-all;\n    // text-align: left;\n    //\n    // color: #3a3a3a;\n    // opacity: 1;\n    // display: block;\n    margin-left: 64px;\n  }\n`;\n\nconst HashInputData = styled.span`\n  color: var(--unnamed-color-2a2a2a);\n  white-space: nowrap;\n  font-family: \"Inter\", sans-serif;\n  font-weight: 600;\n  font-size: 15px;\n\n  color: #2a2a2a;\n  padding-bottom: 30px;\n  ${({ theme }) => theme === \"dark\" && `\n     color: #ffffff;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.75rem;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n    padding-bottom: 20px;\n    ${({ theme }) => theme === \"dark\" && `\n     color: #ffffff;\n  `}\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n    ${({ theme }) => theme === \"dark\" && `\n     color: #ffffff;\n  `}\n  }\n`;\n\nconst Hash = styled.span`\n  white-space: nowrap;\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 15px;\n\n  color: #252525;\n  ${({ theme }) => theme === \"dark\" && `\n    color: #ffffff;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.75rem;\n    text-align: left;\n\n    color: #252525;\n    opacity: 1;\n    ${({ theme }) => theme === \"dark\" && `\n    color: #ffffff;\n  `}\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n  }\n`;\nconst SpacingInputData = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  padding: 13px 0 8px 0;\n  ${({ theme }) => theme === \"dark\" && `\n     border-bottom: solid 1px #4a5d94;\n  `}\n  @media (max-width: 767px) {\n    display: block;\n    padding: 11px 6px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    // height: 6.25rem;\n  }\n`;\nconst SpacingPrivateNode = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  // border-bottom: solid 1px #e3e7eb;\n  padding: 15px 0 6px 0;\n\n  @media (max-width: 767px) {\n    display: block;\n    padding: 11px 6px;\n    border-bottom: none;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n  }\n`;\nconst Spacing = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  height: 4.063rem;\n  ${({ theme }) => theme === \"dark\" && `\n     border-bottom: solid 1px #4a5d94;\n  `}\n  @media (max-width: 767px) {\n    display: block;\n    height: auto;\n    padding: 12px 0 17px 0;\n  }\n`;\nconst SpacingHash = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  height: 4.063rem;\n\n  @media (max-width: 767px) {\n    display: block;\n    padding: 11px 6px;\n    height: auto;\n  }\n`;\nconst HashDiv = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  padding: 16px 33px;\n\n  @media (max-width: 767px) {\n    display: block;\n    padding-left: 10px;\n    // padding-right: 85px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    padding: 14px 30px;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n\n  width: 100%;\n  align-items: center;\n  max-width: 165px;\n`;\nconst SecondContainer = styled.div`\n  display: flex;\n  align-items: center;\n  @media (max-width: 767px) {\n  }\n`;\n\nconst Div = styled.div`\n  display: flex;\n  width: 75.125rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  margin-bottom: 15px;\n  ${({ theme }) => theme === \"dark\" && `\n     background-color: #192a59;\n  `}\n  // @media (min-width: 0px) and (max-width: 767px) {\n  //   width: 22.563rem;\n  //   height: 6.813rem;\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    max-width: 41.5rem;\n    width: 100%;\n    display: block;\n  }\n`;\nconst DivMiddleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 35px;\n  margin-bottom: 36px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    margin-top: 25px;\n    margin-bottom: 25px;\n  }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    display: block;\n  }\n`;\nconst DivMiddle = styled.div`\n  max-width: 35.625rem;\n  width: 100%;\n  padding: 15px 25px;\n  border-radius: 12px;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  // margin-bottom: 15px;\n  ${({ theme }) => theme === \"dark\" && `\n    background-color: #192a59;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    padding: 10px;\n  }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    max-width: 41.5rem;\n    width: 100%;\n  }\n`;\n\nconst Heading = styled.span`\n  white-space: nowrap;\n  color: #2a2a2a;\n  box-shadow: none;\n  font-family: \"Inter\", sans-serif;\n  font-weight: 600;\n  font-size: 1.5rem;\n  margin-top: 46px;\n  margin-bottom: 12px;\n  ${({ theme }) => theme === \"dark\" && `\n    color: #ffffff;\n  `}\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-family: Inter;\n    font-size: 14px;\n    text-align: left;\n    color: #252525;\n    margin-top: 12px;\n    margin-bottom: 17px;\n    ${({ theme }) => theme === \"dark\" && `\n    color: #ffffff;\n  `}\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-family: Inter;\n    font-size: 18px;\n    text-align: left;\n    color: #2a2a2a;\n    margin-top: 19px;\n    margin-bottom: 28px;\n    ${({ theme }) => theme === \"dark\" && `\n    color: #ffffff;\n  `}\n  }\n`;\nconst ImageViewInputData = styled.img`\n  width: 22px;\n  margin-right: 15px;\n  padding-bottom: 30px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    width: 22px;\n    padding-bottom: 17px;\n    margin-left: -4px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 22px;\n  }\n`;\nconst ImageView = styled.img`\n  width: 22px;\n  margin-right: 15px;\n  cursor: pointer;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  // @media (min-width: 768px) and (max-width: 1240px) {\n  //   width: 0.875rem;\n  //   height: 0.875rem;\n  // }\n`;\nconst StatusContainer = styled.div`\n  max-width: 10.75rem;\n  width: 100%;\n  border-right: 1px solid #e3e7eb;\n  ${({ theme }) => theme === \"dark\" && `\n    border-right: 1px solid #4a5d94;\n  `}\n  // @media (min-width: 0px) and (max-width: 767px) {\n  //   width: 14px;\n  //   height: 14px;\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    max-width: 41.5rem;\n    width: 100%;\n    border-right: none;\n    border-bottom: 1px solid #4a5d94;\n    padding-bottom: 30px;\n    ${({ theme }) => theme === \"dark\" && `\n    border-right: 1px solid #091b4e;\n  `}\n  }\n`;\nconst StatusImgContainer = styled.div`\n  width: 58px;\n  margin: 44px auto 10px auto;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    margin: 21px auto 10px auto;\n  }\n`;\nconst StatusContainerInside = styled.div`\n  width: 100px;\n  margin: auto;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    padding-top: 1px;\n  }\n`;\nconst StatusImg = styled.img`\n  width: 58px;\n  align-items: center;\n`;\nconst StatusTextSuccess = styled.div`\n  font-family: Inter;\n  font-size: 14px;\n\n  text-align: center;\n  color: #03be46;\n`;\nconst StatusTextFailed = styled.div`\n  font-family: Inter;\n  font-size: 14px;\n\n  text-align: center;\n  color: red;\n`;\nconst SeeMoreContainer = styled.div`\n  display: flex;\n  cursor: pointer;\n`;\nconst SeeMoreText = styled.div`\n  font-family: Inter;\n  font-size: 15px;\n  font-weight: 600;\n\n  color: #4878ff;\n  margin-left: 4px;\n  margin-right: 5px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 13px;\n  }\n`;\nconst ImgSeeMore = styled.img`\n  display: flex;\n  @media (min-width: 0px) and (max-width: 767px) {\n    height: 15px;\n    margin-top: 2px;\n  }\n`;\nconst ImgSeeLess = styled.img`\n  display: flex;\n  transform: rotate(180deg);\n  @media (min-width: 0px) and (max-width: 767px) {\n    height: 15px;\n    margin-top: 2px;\n  }\n`;\nconst TxnDetailsRightContainer = styled.div`\n  width: 100%;\n  padding-left: 21px;\n  padding-right: 25px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`;\nconst TxnDetailsRightBottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  padding-top: 32px;\n  padding-bottom: 25px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    flex-flow: row wrap;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    flex-flow: row wrap;\n    padding-top: 0px;\n    justify-content: flex-start;\n  }\n`;\nconst TxnDetailsRightTopContainer = styled.div`\n  width: 100%;\n  justify-content: space-between;\n  padding-top: 22px;\n`;\nconst DetailsContainer = styled.div`\n  display: block;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    padding-top: 29px;\n  }\n`;\nconst DetailsMiddleContainer = styled.div`\n  margin-left: 4px;\n  display: flex;\n  font-family: Inter;\n  font-size: 15px;\n\n  color: #3a3a3a;\n  ${({ theme }) => theme === \"dark\" && `\n    color: #b1c3e1;\n  `}\n  @media (min-width: 768px) and (max-width: 1240px) {\n    justify-content: space-between;\n    padding-top: 10px;\n    margin-right: 22px;\n  }\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: block;\n    padding-top: 10px;\n    color: #2a2a2a;\n    padding-right: 15px;\n    ${({ theme }) => theme === \"dark\" && `\n    color: #b1c3e1;\n  `}\n  }\n`;\nconst BlockConfirmation = styled.div`\n  margin-left: 4px;\n  display: flex;\n  font-family: Inter;\n  font-size: 13px;\n\n  color: #2149b9;\n  background-color: #e2eaff;\n  padding-left: 8px;\n  padding-right: 10px;\n  border-radius: 4px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  ${({ theme }) => theme === \"dark\" && `\n    background-color: #091b4e;\n    border: solid 1px #3552a5;\n  `}\n`;\n\nconst DivCircle = styled.div`\n  max-width: 36px;\n  height: 36px;\n  width: 100%;\n  border-radius: 50%;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  margin: auto;\n\n  @media (min-width: 0px) and (max-width: 767px) {\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-top: 34px;\n    margin-bottom: 33px;\n  }\n`;\n\nconst ImgNextArrow = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 12px;\n  @media (min-width: 0px) and (max-width: 1240px) {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: 0px;\n    transform: rotate(90deg);\n    padding-left: 17px;\n  }\n`;\nconst AddTagContainer = styled.div`\n  background-color: #4878ff;\n  display: flex;\n  width: 95px;\n  padding: 3px 0 2px 6px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  margin-top: 2px;\n  margin-left: 4px;\n  cursor: pointer;\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\nconst ImgAddTag = styled.div`\n  margin-right: 4px;\n`;\nconst AddTagtext = styled.div`\n  color: #ffffff;\n`;\n\nconst Tag = styled.div`\n  padding: 2px 5px 3px 5px;\n  border-radius: 4px;\n  border: solid 1px #d2deff;\n  background-color: #eaf0ff;\n  font-size: 14px;\n  font-weight: 500;\n\n  text-align: center;\n  color: #4878ff;\n  width: fit-content;\n  margin-top: 2px;\n  margin-left: 4px;\n`;\nconst TabTag = styled.div`\n  width: 180px;\n`;\nconst MobileDesktopTag = styled.div`\n  padding-top: 10px;\n`;\nconst AddLabel = styled.div`\n  display: flex;\n  flex-flow: wrap;\n`;\nconst AddLabelText = styled.div`\n  margin-right: 8px;\n  white-space: nowrap;\n`;\nconst MainContainerInteractedWith = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst MainContainerTxnAction = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ContentInteractedWith = styled.div`\n  font-family: Inter;\n  font-size: 0.935rem;\n  text-align: left;\n  color: #3a3a3a;\n  line-height: 22px;\n  display: flex;\n  align-items: center;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    text-align: left;\n    color: #3a3a3a;\n    opacity: 1;\n    line-height: 7px !important;\n    flex-direction: column;\n    align-items: flex-start;\n    padding-right: 10px;\n    padding-top: 5px;\n  }\n  @media (min-width: 768px) and (max-width: 1241px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n  }\n`;\nconst InteractedWithNextRow = styled.div`\n  display: flex;\n`;\nconst TxnActionNextRow = styled.div`\n  display: flex;\n`;\nconst TokenTransferredMiddleContainer = styled.div`\n  display: flex;\n`;\nconst TokenTransferredContent = styled.div`\n  display: flex;\n  margin-top: 5px;\n  margin-right: 12px;\n`;\n\nconst ImgInteracted = styled.img`\n  width: 19px;\n  margin-left: 13px;\n  margin-right: 9px;\n`;\n\nconst ImgProfileIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst ImgCopyGrey = styled.img`\n  width: 25px;\n`;\n\nconst ImgNextArrowLine = styled.img`\n  width: 18px;\n`;\nconst ImgNextRed = styled.img`\n  width: 18px;\n  margin-left: 10px;\n  margin-right: 20px;\n`;\nconst ImgNewLine = styled.img`\n  width: 25px;\n`;\n\nconst GreyText = styled.span`\n  color: #9fa9ba;\n  margin-left: 2px;\n`;\n\nconst BlackText = styled.span`\n  color: #2a2a2a;\n  margin-left: 2px;\n`;\n\nconst BlueText = styled.span`\n  color: #2149b9;\n  margin-left: 2px;\n`;\n\nconst Gap1 = styled.span`\n  margin-left: 15px;\n`;\nconst Gap2 = styled.span`\n  margin-left: 30px;\n`;\nconst SpacingInteractedWith = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  height: 7rem;\n\n  @media (max-width: 767px) {\n    display: block;\n    height: auto;\n    padding: 12px 0 17px 0;\n  }\n`;\nconst SpacingTxnAction = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  height: 7rem;\n\n  @media (max-width: 767px) {\n    display: block;\n    height: auto;\n    padding: 12px 0 17px 0;\n  }\n`;\n\n\nconst ContainerInteractedWith = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  max-width: 165px;\n  margin-top: -40px;\n`;\nconst ContainerTxnAction = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  max-width: 165px;\n  margin-top: -40px;\n`;\n"],"sourceRoot":""}