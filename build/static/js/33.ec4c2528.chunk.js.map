{"version":3,"sources":["modules/explorer/AvatarUpload.js","modules/explorer/editProfileResponsive.js"],"names":["Button","styled","span","CenteredContent","MuiCloudUpload","spacing","div","useStyles","makeStyles","theme","root","display","margin","large","width","height","avtar","marginTop","BigAvatar","MuiAvatar","grey","AvatarUpload","props","classes","useState","image","_setImage","inputFileRef","createRef","setImage","newImage","URL","revokeObjectURL","current","value","useEffect","profilePicture","className","$withBorder","alt","src","ref","accept","hidden","id","type","onChange","event","target","files","createObjectURL","filedata","htmlFor","onClick","acceptStyle","borderColor","rejectStyle","thumb","borderRadius","border","marginBottom","marginRight","padding","boxSizing","add","marginLeft","maxWidth","backButtonMobile","position","cursor","error","color","btn","cross","fontWeight","dialog","paper","maxHeight","alignSelf","input","backgroundColor","addbtn","subCategory","fontFamily","fontSize","outline","forgotpass","createaccount","fontfamily","fontsize","icon","xdc","heading","fontweight","username","activeStyle","baseStyle","background","Wrapper","Title","img","ProfilePicContainer","Cut","FormDialog","setOpen","React","userName","setUserName","userNameError","setUserNameError","emailError","setEmailError","isLoading","setLoading","isEditPicture","setIsEditPicture","uploadFile","setUploadFile","setProfilePicture","email","setEmail","regExAlphaNum","mailformat","updateUser","url","a","userInfo","sessionManager","getDataFromCookies","reqObj","name","userId","profilePic","match","authObject","AuthService","Utility","parseResponse","authResponse","length","utility","apiFailureToast","apiSuccessToast","autoClose","setDataInCookies","history","push","handleClose","uploadFileToS3","formdata","FormData","append","awsObject","AwsService","awsResponse","cookiesConstants","USER_PICTURE","setTimeout","setUsernameEnable","setEmailEnable","getUserName","getEmail","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","map","file","Object","assign","preview","isDragActive","getRootProps","getInputProps","isDragAccept","isDragReject","open","useMemo","style","key","forEach","path","size","usernameEnable","emailEnable","profileUrl","response","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","paddingLeft","e"],"mappings":"kPAOMA,EAASC,UAAOC,KAAV,gJAWNC,GAFaF,kBAAOG,IAAPH,CAAuBI,KAElBJ,UAAOK,IAAV,sEAKfC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACT,QAAS,CACPC,OAAQH,EAAMJ,QAAQ,KAG1BQ,MAAO,CACLC,MAAO,QACPC,OAAQ,SAEV,mDAAoD,CAClDC,MAAM,CACJC,UAAW,OACXF,OAAQ,cASRG,EAAYjB,kBAAOkB,IAAPlB,CAAH,kKAIOmB,IAAK,KACDA,IAAK,KAAyBA,IAAK,MAmE9CC,IAhEM,SAACC,GAEpB,IAAMC,EAAUhB,IAEhB,EAA2BiB,mBAAS,MAApC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAeC,oBAAU,MAOzBC,EAAW,SAACC,GACZL,IALJM,IAAIC,gBAAgBP,GACpBE,EAAaM,QAAQC,MAAQ,MAO7BR,EAAUI,IAWZK,qBAAU,WACRT,EAAUJ,EAAMc,kBACf,IAYH,OACE,kBAACjC,EAAD,CAAiBkC,UAAWd,EAAQP,OAClC,kBAACE,EAAD,CACEmB,UAAWd,EAAQV,MACnByB,aAAW,EACXC,IAAI,SACJC,IAAKf,IAEP,2BACEgB,IAAKd,EACLe,OAAO,UACPC,QAAM,EACNC,GAAG,sBACHC,KAAK,OACLC,SApCiB,SAACC,GAAW,IAAD,IAC1BjB,EAAQ,UAAGiB,EAAMC,cAAT,iBAAG,EAAcC,aAAjB,aAAG,EAAsB,GAEnCnB,IACFD,EAASE,IAAImB,gBAAgBpB,IAC7BR,EAAM6B,SAASrB,OAiCf,2BAAOsB,QAAQ,uBACb,kBAACpD,EAAD,CAAQqC,UAAU,SAASgB,QAxBb,SAACN,MAwBmC,oB,gRCjGpDO,EAAc,CAClBC,YAAa,WAGTC,EAAc,CAClBD,YAAa,WAGTE,EAAQ,CACZ9C,QAAS,cACT+C,aAAc,EACdC,OAAQ,oBACRC,aAAc,EACdC,YAAa,EACb/C,MAAO,OACPC,OAAQ,IACR+C,QAAS,EACTC,UAAW,cAGPxD,EAAYC,aAAW,SAACC,GAAD,oBAC3BuD,IAAK,CAEHC,WAAY,QAEd,mDAAoD,CAClDhD,UAAW,WACXiD,SAAU,WACVJ,QAAS,qBAEXK,iBAAmB,CACjBF,WAAa,OACbG,SAAU,WACVC,OAAQ,UACR1D,QAAS,SAEX,4BAA4B,CAC1BwD,iBAAmB,CACjBxD,QAAS,SAGb2D,MAAO,CACLC,MAAO,MACPN,WAAY,MACZL,aAAc,SAEhBY,IAAK,GACLtC,MAAO,CACLpB,MAAO,oBAET2D,MAAO,CACLxD,UAAW,OACXgD,WAAY,OACZS,WAAY,MACZL,OAAQ,WAEVM,OAAQ,CACNV,WAAY,MACZhD,UAAW,MACXH,MAAO,iBACPC,OAAQ,iBACR2C,aAAc,mBAEhBkB,MAAO,CACL9D,MAAO,YACP+D,UAAW,YACX9D,OAAQ,OACR+D,UAAW,aACXlE,OAAQ,aACR8C,aAAc,QAEhBqB,MAAO,CACLjE,MAAO,QACPC,OAAQ,OACR4C,OAAQ,oBACRqB,gBAAiB,UACjBtB,aAAc,MACdI,QAAS,QAEXmB,OAAQ,CACNnE,MAAO,OACPC,OAAQ,OACR2C,aAAc,MACdsB,gBAAiB,UAEjBpE,OAAQ,qBACR2D,MAAO,SAETW,YAAa,CACXjE,UAAW,MACX2C,aAAc,MACduB,WAAY,QACZC,SAAU,OACVV,WAAY,MACZf,OAAQ,kBACR0B,QAAS,OACTd,MAAO,WAETe,WAAY,CACVf,MAAO,UACPN,WAAY,SAEdsB,cAAe,CACbhB,MAAO,UACPN,WAAY,OACZuB,WAAY,QACZC,SAAU,QAEZC,KAAM,CACJzB,WAAY,SAEd0B,IAAK,CACHpB,MAAO,UACPN,WAAY,OACZuB,WAAY,QACZC,SAAU,OAEZG,QAAS,CACP3B,WAAY,OACZuB,WAAY,QACZK,WAAY,OAEd7E,MAAO,CACLD,OAAQ,oBAvGiB,mDAyGyB,CAClD+E,SAAU,CACR/E,OAAQ,aAIRgF,EAAc,CAClBxC,YAAa,WAETyC,EAAY,CAChBtC,aAAc,EAEd3C,OAAQ,QACRD,MAAO,QACPmF,WAAY,sCACZ1B,MAAO,UAEPZ,OAAQ,wCAGJuC,EAAUjG,UAAOK,IAAV,+HAwBP6F,GATQlG,UAAOmG,IAAV,2HASGnG,UAAOK,IAAV,uRAaL+F,EAAsBpG,UAAOK,IAAV,oJAQnBgG,EAAMrG,UAAOK,IAAV,iJAaM,SAASiG,EAAWjF,GACjC,IAAMC,EAAUhB,IAChB,EAAyBiB,oBAAS,GAAlC,mBAAcgF,GAAd,WAEA,EAAgCC,IAAMjF,SAAS,IAA/C,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,IAAMjF,SAAS,IAAzD,mBAAOoF,EAAP,KAAsBC,EAAtB,KACA,EAAoCJ,IAAMjF,SAAS,IAAnD,mBAAOsF,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,IAAMjF,UAAS,GAA/C,mBAAOwF,EAAP,KAAkBC,EAAlB,KACA,EAA0CR,IAAMjF,UAAS,GAAzD,mBAAO0F,EAAP,KAAsBC,EAAtB,KACA,EAAoCV,IAAMjF,SAAS,IAAnD,mBAAO4F,EAAP,KAAmBC,GAAnB,KACA,GAA4CZ,IAAMjF,SAAS,IAA3D,qBAAOY,GAAP,MAAuBkF,GAAvB,MACA,GAA0Bb,IAAMjF,SAAS,IAAzC,qBAAO+F,GAAP,MAAcC,GAAd,MAUIC,GAAgB,iBAChBC,GAAa,gDAEXC,GAAU,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,yDACbC,EAAWC,IAAeC,mBAAmB,UACjDf,GAAW,GAELgB,EAAS,CACbC,KAAMxB,EACNyB,OAAQL,EACRP,MAAOA,GACPa,WAAYR,GAAYxF,IAGrBsE,EAAS2B,MAAMZ,IAXH,uBAYfZ,EAAiB,wBACjBI,GAAW,GAbI,6BAeLM,GAAMc,MAAMX,IAfP,iBAgBfX,EAAc,qBACdE,GAAW,GAjBI,+BAmBTqB,EAAa,IAAIC,IAnBR,UAoBmBC,IAAQC,cACxCH,EAAWX,WAAWM,IArBT,uCAoBV3D,EApBU,MAuBC,QAHJoE,EApBG,YAuBC,IAAZA,OAAA,EAAAA,EAAcnB,MAAMoB,QAAS,GAC/B1B,GAAW,IAET3C,GAAUoE,EA1BC,iBA2BbE,IAAQC,gBAAgB,eACxB5B,GAAW,GA5BE,+BA8Bb2B,IAAQE,gBAAgB,gCAAiC,CACvDC,UAAW,MAEbhB,IAAeiB,iBAAiBN,EAAc,YAC9CX,IAAeiB,kBAAiB,EAAM,cACtCjB,IAAeiB,iBAAiBN,EAAaP,OAAQ,UACrDc,IAAQC,KAAK,iBACbC,KArCa,kBAuCNT,GAvCM,4CAAH,sDA4CVU,GAAc,uCAAG,sCAAAvB,EAAA,6DACrBZ,GAAW,IACPoC,EAAW,IAAIC,UACVC,OAAO,OAAQnC,GACxBiC,EAASE,OAAO,OAAQ,cAClBC,EAAY,IAAIC,IALD,SAMYjB,IAAQC,cACvCe,EAAU7B,WAAW0B,IAPF,sCAMhB/E,EANgB,MAMToF,EANS,MASL,GAAG9B,IAAIe,OAAS,GAC9B1B,GAAW,IAET3C,GAAUoF,EAZO,wBAanBd,IAAQC,gBAAgB,kBAbL,mBAcZ,GAdY,eAiBnBd,IAAeiB,iBACbU,EAAY,GAAG9B,IACf+B,IAAiBC,cAEnBtC,GAAkBoC,EAAY,GAAG9B,KArBd,kBAsBZ8B,GAtBY,4CAAH,qDA8BdP,GAAc,WAClB3C,GAAQ,GACRyC,IAAQC,KAAK,iBACbrC,EAAiB,IACjBE,EAAc,IACd8C,YAAW,WACTC,IAAkB,GAClBC,IAAe,GACfpD,EAAYqD,IACZxC,GAASyC,MACR,MAQL,GAA0BzI,mBAAS,IAAnC,qBAAOyB,GAAP,MAAciH,GAAd,MACA,GAQIC,YAAY,CACdzH,OAAQ,UACR0H,SAAS,EACTC,YAAY,EACZC,OAAQ,SAACC,GACPL,GACEK,EAAcC,KAAI,SAACC,GAAD,OAChBC,OAAOC,OAAOF,EAAM,CAClBG,QAAS7I,IAAImB,gBAAgBuH,YAbrCI,IAHF,GACEC,aADF,GAEEC,cAFF,GAGEF,cACAG,GAJF,GAIEA,aACAC,GALF,GAKEA,aACAV,GANF,GAMEA,cANF,GAOEW,KAwBYC,mBACZ,8BAAC,uCACInF,GACC6E,GAAe9E,EAAc,IAC7BiF,GAAe1H,EAAc,IAC7B2H,GAAezH,EAAc,MAEnC,CAACqH,GAAcI,KAGFhI,GAAMuH,KAAI,SAACC,GAAD,OAAU,yBAAKW,MAAO3H,EAAO4H,IAAKZ,EAAKvC,UAEhE/F,qBACE,kBAAM,WAEJc,GAAMqI,SAAQ,SAACb,GAAD,OAAU1I,IAAIC,gBAAgByI,EAAKG,eAEnD,CAAC3H,KAGcsH,GAAcC,KAAI,SAACC,GAAD,OACjC,wBAAIY,IAAKZ,EAAKc,MACXd,EAAKc,KADR,MACiBd,EAAKe,KADtB,aADF,IAMA,GAA0C/E,IAAMjF,UAAS,GAAzD,qBAKA,IALA,YAK4CiF,IAAMjF,UAAS,IAA3D,qBAAOiK,GAAP,MAAuB3B,GAAvB,MACA,GAAsCrD,IAAMjF,UAAS,GAArD,qBAAOkK,GAAP,MAAoB3B,GAApB,MAEM4B,GAAU,uCAAG,8BAAA9D,EAAA,yDACb+D,EAAW,IACX1E,EAFa,gCAGEkC,KAHF,UAGfwC,EAHe,wDAKftE,GAAkBsE,EAAS,GAAGhE,KALf,wBAQMD,GAAU,UAACiE,EAAS,UAAV,aAAC,EAAahE,KAR9B,2DAAH,qDAUVoC,GAAc,WAGlB,OAFWjC,IAAeC,mBAAmB,YACzBE,MAIhB+B,GAAW,WAGf,OAFWlC,IAAeC,mBAAmB,YACzBT,OAatB,SAASsE,KACP,MAAmDC,OAEnD,MAAO,CACLhL,MAHF,EAAQiL,WAKNhL,OALF,EAA2BiL,aAX7B7J,qBAAU,WACR,IAAI2F,EAAWC,IAAeC,mBAAmB,YAC7CF,IACFnB,EAAYmB,EAASI,MACrBV,GAASM,EAASP,OAClBD,GACES,IAAeC,mBAAmB2B,IAAiBC,kBAGtD,IAUH,OAAgDnD,IAAMjF,SACpDqK,MADF,qBAAOI,GAAP,MAAyBC,GAAzB,MAgBA,OAbAzF,IAAMtE,WAAU,WACd,SAASgK,IACPD,GAAoBL,MAItB,OAFAC,OAAOM,iBAAiB,SAAUD,GAE3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACjD,IAEeF,GAAVnL,OACK,KACXmI,IAAQC,KAAK,iBAGb,6BACE,kBAAC,IAAD,MAEA,yBAAK7G,UAAWd,EAAQyC,KACtB,kBAACqC,EAAD,KACE,yBAAKhE,UAAwB,GAAb2E,EAAoB,yBAA2B,IAC7D,kBAACd,EAAD,KACE,kBAACC,EAAD,qBACA,yBAAK9C,QAAS8F,GAAa9G,UAAWd,EAAQ4C,kBAChD,yBAAK3B,IAAI,4BAEP,kBAAC8D,EAAD,CAAKjD,QAAS8F,IACX,IACD,yBACE9G,UAAU,aACVG,IAAK,0BACJ,MAGP,kBAAC,IAAD,CACEW,SAvPK,SAACJ,GAChBoE,GAAiB,GACjBE,GAActE,IAsPJqG,eAAgBA,GAChBhH,eAAgBA,GAChBC,UAAWd,EAAQP,QAGrB,yBACEoK,MAAO,CAAEtH,QAAS,WAAYF,aAAc,QAC5CvB,UAAWd,EAAQuE,UAEnB,uBAAGzD,UAAWd,EAAQ2D,aAAtB,YACEuG,GAUA,2BACEpJ,UAAU,WACV+I,MAAO,CAAEzH,OAAQ,oBAAqB2I,YAAa,QACnDzJ,KAAK,OACLD,GAAG,WACHV,MAAOwE,EACP5D,SAAU,SAACyJ,GAEP5F,EAAY4F,EAAEvJ,OAAOd,OACrB2E,EAAiB,OAlBvB,0BAAMxE,UAAU,eACd,0BAAMA,UAAU,oBAAoBqE,GACpC,yBACErE,UAAU,SACVG,IAAK,mBACLa,QAAS,kBAAMyG,IAAkB,OAkBvC,yBAAKzH,UAAWd,EAAQ+C,OAAQsC,IAGlC,yBACEwE,MAAO,CAAEtH,QAAS,WAAYF,aAAc,QAC5CvB,UAAWd,EAAQuE,UAEnB,uBAAGzD,UAAWd,EAAQ2D,aAAtB,SACEwG,GAUA,2BACErJ,UAAU,WACV+I,MAAO,CAAEzH,OAAQ,oBAAqB2I,YAAa,QACnDzJ,KAAK,OACLD,GAAG,QACHV,MAAOqF,GACPzE,SAAU,SAACyJ,GAEP/E,GAAS+E,EAAEvJ,OAAOd,OAClB6E,EAAc,OAlBpB,0BAAM1E,UAAU,eACd,0BAAMA,UAAU,oBAAoBkF,IACpC,yBACElF,UAAU,SACVG,IAAK,mBACLa,QAAS,kBAAM0G,IAAe,OAkBnCjD,EACC,yBAAKzE,UAAWd,EAAQ+C,OAAQwC,GAEhC,sCAIJ,kBAAC,IAAD,KACE,4BACEzE,UAAWd,EAAQ0D,OACnB5B,QAAS,WACPsI,OAHJ,iBAMiB,MAInB,yBAAKtJ,UAAWd,EAAQW","file":"static/js/33.ec4c2528.chunk.js","sourcesContent":["import {Avatar as MuiAvatar, makeStyles,} from \"@material-ui/core\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport {CloudUpload as MuiCloudUpload,} from \"@material-ui/icons\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport React, {createRef, useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.span`\r\n  width: 91px;\r\n  height: 17px;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #2149b9;\r\n`;\r\n\r\nconst UploadIcon = styled(MuiCloudUpload)(spacing);\r\n\r\nconst CenteredContent = styled.div`\r\n  text-align: center;\r\n  height: 200px;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  large: {\r\n    width: \"108px\",\r\n    height: \"108px\",\r\n  },\r\n  \"@media (min-width: 300px) and (max-width: 767px)\": {\r\n    avtar:{\r\n      marginTop: \"20px\",\r\n      height: \"160px\"\r\n      \r\n    }\r\n    \r\n   \r\n  },\r\n  \r\n}));\r\n\r\nconst BigAvatar = styled(MuiAvatar)`\r\n  width: 300x;\r\n  height: 300px;\r\n  margin: 0 auto 16px;\r\n  border: 1px solid ${grey[500]};\r\n  box-shadow: 0 0 1px 0 ${grey[500]} inset, 0 0 1px 0 ${grey[500]};\r\n`;\r\n\r\nconst AvatarUpload = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [image, _setImage] = useState(null);\r\n  const inputFileRef = createRef(null);\r\n\r\n  const cleanup = () => {\r\n    URL.revokeObjectURL(image);\r\n    inputFileRef.current.value = null;\r\n  };\r\n\r\n  const setImage = (newImage) => {\r\n    if (image) {\r\n      cleanup();\r\n    }\r\n    _setImage(newImage);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    const newImage = event.target?.files?.[0];\r\n\r\n    if (newImage) {\r\n      setImage(URL.createObjectURL(newImage));\r\n      props.filedata(newImage)\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    _setImage(props.profilePicture);\r\n  }, []);\r\n  /**\r\n   *\r\n   * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n   */\r\n  const handleClick = (event) => {\r\n    if (image) {\r\n      // event.preventDefault();\r\n      // setImage(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CenteredContent className={classes.avtar}>\r\n      <BigAvatar\r\n        className={classes.large}\r\n        $withBorder\r\n        alt=\"Avatar\"\r\n        src={image}\r\n      />\r\n      <input\r\n        ref={inputFileRef}\r\n        accept=\"image/*\"\r\n        hidden\r\n        id=\"avatar-image-upload\"\r\n        type=\"file\"\r\n        onChange={handleOnChange}\r\n      />\r\n      <label htmlFor=\"avatar-image-upload\">\r\n        <Button className=\"imgcss\" onClick={handleClick}>{\"Upload Photo\"}</Button>\r\n      </label>\r\n    </CenteredContent>\r\n  );\r\n};\r\n\r\nexport default AvatarUpload;\r\n","import utility from \"../../utility\";\r\nimport Utility from \"../../utility\";\r\nimport { sessionManager } from \"../../managers/sessionManager\";\r\nimport AuthService from \"../../services/userLogin\";\r\nimport AwsService from \"../../services/awsService\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport React, { useMemo, useEffect, useState } from \"react\";\r\nimport AvatarUpload from \"./AvatarUpload\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { history } from \"../../managers/history\";\r\nimport styled from \"styled-components\";\r\nimport { cookiesConstants } from \"../../constants\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nconst thumb = {\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: \"auto\",\r\n  height: 200,\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  add: {\r\n    // backgroundColor: \"#2149b9\",\r\n    marginLeft: \"-6px\",\r\n  },\r\n  \"@media (min-width: 300px) and (max-width: 767px)\": {\r\n    marginTop: \"6.800rem\",\r\n    maxWidth: \"31.25rem\",\r\n    padding: \"0 0.5rem 0 0.5rem\",\r\n  },\r\n  backButtonMobile : {\r\n    marginLeft : \"18px\",\r\n    position: \"absolute\",\r\n    cursor: \"pointer\",\r\n    display: \"block\",\r\n  },\r\n  \"@media (min-width: 740px)\":{\r\n    backButtonMobile : {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    marginLeft: \"2px\",\r\n    marginBottom: \"-10px\",\r\n  },\r\n  btn: {},\r\n  value: {\r\n    width: \"400px !important\",\r\n  },\r\n  cross: {\r\n    marginTop: \"25px\",\r\n    marginLeft: \"40px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n  },\r\n  dialog: {\r\n    marginLeft: \"10%\",\r\n    marginTop: \"2px\",\r\n    width: \"80% !important\",\r\n    height: \"80% !important\",\r\n    borderRadius: \"50px !important\",\r\n  },\r\n  paper: {\r\n    width: \"31.438rem\",\r\n    maxHeight: \"35.063rem\",\r\n    height: \"100%\",\r\n    alignSelf: \"flex-start\",\r\n    margin: \"100px auto\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  input: {\r\n    width: \"340px\",\r\n    height: \"40px\",\r\n    border: \"solid 1px #c6c8ce\",\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"7px\",\r\n    padding: \"20px\",\r\n  },\r\n  addbtn: {\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#3763dd\",\r\n    //backgroundColor: \"red\",\r\n    margin: \"0px 26px 35px 26px\",\r\n    color: \"white\",\r\n  },\r\n  subCategory: {\r\n    marginTop: \"4px\",\r\n    marginBottom: \"4px\",\r\n    fontFamily: \"Inter\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n    border: \"none !important\",\r\n    outline: \"none\",\r\n    color: \"#2a2a2a\",\r\n  },\r\n  forgotpass: {\r\n    color: \"#2149b9\",\r\n    marginLeft: \"123px\",\r\n  },\r\n  createaccount: {\r\n    color: \"#2149b9\",\r\n    marginLeft: \"32px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"14px\",\r\n  },\r\n  icon: {\r\n    marginLeft: \"-30px\",\r\n  },\r\n  xdc: {\r\n    color: \"#2a2a2a\",\r\n    marginLeft: \"30px\",\r\n    fontfamily: \"Inter\",\r\n    fontsize: \"5px\",\r\n  },\r\n  heading: {\r\n    marginLeft: \"60px\",\r\n    fontfamily: \"Inter\",\r\n    fontweight: \"600\",\r\n  },\r\n  avtar: {\r\n    height: \"19px !important\",\r\n  },\r\n  \"@media (min-width: 300px) and (max-width: 767px)\": {\r\n    username: {\r\n      height: \"60px\",\r\n    },\r\n  },\r\n}));\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\nconst baseStyle = {\r\n  borderRadius: 5,\r\n\r\n  height: \"104px\",\r\n  width: \"400px\",\r\n  background: \"#FFFFFF 0% 0% no-repeat padding-box\",\r\n  color: \"#ACACAC\",\r\n  // border: \"0.3px dashed var(--unnamed-color-acacac)\",\r\n  border: \"0.30000001192092896px dashed #ACACAC\",\r\n  // marginTop: 5,\r\n};\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding-top: 20px;\r\n`;\r\n// const Upload = styled.div`\r\n//   display: block;\r\n//   cursor: pointer;\r\n//   padding-left: 11.2rem;\r\n//   font-family: Inter;\r\n//   font-size: 14px;\r\n//   font-weight: 500;\r\n//   color: #2149b9;\r\n// `;\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 145px;\r\n  border-radius: 4px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: Inter;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: #2a2a2a;\r\n  @media (min-width: 300px) and (max-width: 767px) {\r\n    height: 20px;\r\n    font-size: 16px;\r\n    text-align: center;\r\n    margin: auto;\r\n  }\r\n`;\r\nconst ProfilePicContainer = styled.div`\r\n  @media (min-width: 300px) and (max-width: 767px) {\r\n    max-width: 503px;\r\n    width: 100%;\r\n    height: 102px;\r\n  }\r\n`;\r\n\r\nconst Cut = styled.div`\r\n  padding-right: 25px;\r\n  padding-top: 7px;\r\n\r\n  // display: flex;\r\n  // align-content: flex-end;\r\n  display: none;\r\n`;\r\n// const Input = styled.div`\r\n//   display: flex;\r\n//   flex-flow: row nowrap;\r\n// `;\r\n\r\nexport default function FormDialog(props) {\r\n  const classes = useStyles();\r\n  const [opens, setOpen] = useState(false);\r\n  // const [color, setColor] = useState(\"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [userNameError, setUserNameError] = React.useState(\"\");\r\n  const [emailError, setEmailError] = React.useState(\"\");\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [isEditPicture, setIsEditPicture] = React.useState(false);\r\n  const [uploadFile, setUploadFile] = React.useState(\"\");\r\n  const [profilePicture, setProfilePicture] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const fileData = (event) => {\r\n    setIsEditPicture(true);\r\n    setUploadFile(event);\r\n  };\r\n  // const changeColor =async()=>{\r\n\r\n  //   setColor({backgroundColor:\"red\"})\r\n\r\n  // }\r\n  var regExAlphaNum = /^[0-9a-zA-Z]+$/;\r\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n  const updateUser = async (url) => {\r\n    let userInfo = sessionManager.getDataFromCookies(\"userId\");\r\n    setLoading(true);\r\n\r\n    const reqObj = {\r\n      name: userName,\r\n      userId: userInfo,\r\n      email: email,\r\n      profilePic: url ? url : profilePicture,\r\n    };\r\n\r\n    if (!userName.match(regExAlphaNum)) {\r\n      setUserNameError(\"Enter valid Username\");\r\n      setLoading(false);\r\n      return;\r\n    } else if (!email.match(mailformat)) {\r\n      setEmailError(\"Enter valid Email\");\r\n      setLoading(false);\r\n    } else {\r\n      const authObject = new AuthService();\r\n      let [error, authResponse] = await Utility.parseResponse(\r\n        authObject.updateUser(reqObj)\r\n      );\r\n      if (authResponse?.email.length > 2) {\r\n        setLoading(false);\r\n      }\r\n      if (error || !authResponse) {\r\n        utility.apiFailureToast(\"User Exists\");\r\n        setLoading(false);\r\n      } else {\r\n        utility.apiSuccessToast(\"Profile upadated successfully\", {\r\n          autoClose: 10000,\r\n        });\r\n        sessionManager.setDataInCookies(authResponse, \"userInfo\");\r\n        sessionManager.setDataInCookies(true, \"isLoggedIn\");\r\n        sessionManager.setDataInCookies(authResponse.userId, \"userId\");\r\n        history.push(\"/loginprofile\");\r\n        handleClose();\r\n        // window.location.href = \"loginprofile\";\r\n        return authResponse;\r\n      }\r\n    }\r\n  };\r\n\r\n  const uploadFileToS3 = async () => {\r\n    setLoading(true);\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", uploadFile);\r\n    formdata.append(\"path\", \"profilePic\");\r\n    const awsObject = new AwsService();\r\n    let [error, awsResponse] = await Utility.parseResponse(\r\n      awsObject.updateUser(formdata)\r\n    );\r\n    if (awsResponse[0].url.length > 2) {\r\n      setLoading(false);\r\n    }\r\n    if (error || !awsResponse) {\r\n      utility.apiFailureToast(\" Upload failed\");\r\n      return false;\r\n    } else {\r\n      // utility.apiSuccessToast(\"Pic uploaded successfully\");\r\n      sessionManager.setDataInCookies(\r\n        awsResponse[0].url,\r\n        cookiesConstants.USER_PICTURE\r\n      );\r\n      setProfilePicture(awsResponse[0].url);\r\n      return awsResponse;\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push(\"/loginprofile\");\r\n    setUserNameError(\"\");\r\n    setEmailError(\"\");\r\n    setTimeout(() => {\r\n      setUsernameEnable(false);\r\n      setEmailEnable(false);\r\n      setUserName(getUserName);\r\n      setEmail(getEmail);\r\n    }, 500);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    history.push(\"/loginprofile\");\r\n    // window.location(\"/loginprofile\")\r\n  };\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    open,\r\n  } = useDropzone({\r\n    accept: \"image/*\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleUpload = (event) => {\r\n    setFiles(event.target.files[0]);\r\n  };\r\n\r\n  const ImageThumb = ({ image }) => {\r\n    return <Image src={URL.createObjectURL(image)} alt={image.name} />;\r\n  };\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject]\r\n  );\r\n\r\n  const thumbs = files.map((file) => <div style={thumb} key={file.name}></div>);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const filepath = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const [passwordShown, setPasswordShown] = React.useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n    // {passwordShown ?<VisibilityIcon/>:<VisibilityOff/>}\r\n  };\r\n  const [usernameEnable, setUsernameEnable] = React.useState(false);\r\n  const [emailEnable, setEmailEnable] = React.useState(false);\r\n\r\n  const profileUrl = async () => {\r\n    let response = {};\r\n    if (isEditPicture) {\r\n      response = await uploadFileToS3();\r\n      if (!response) return;\r\n      setProfilePicture(response[0].url);\r\n    }\r\n\r\n    let upadteUser = await updateUser(response[0]?.url);\r\n  };\r\n  const getUserName = () => {\r\n    let name = sessionManager.getDataFromCookies(\"userInfo\");\r\n    let userName = name.name;\r\n    return userName;\r\n  };\r\n\r\n  const getEmail = () => {\r\n    let name = sessionManager.getDataFromCookies(\"userInfo\");\r\n    let userName = name.email;\r\n    return userName;\r\n  };\r\n  useEffect(() => {\r\n    let userInfo = sessionManager.getDataFromCookies(\"userInfo\");\r\n    if (userInfo) {\r\n      setUserName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setProfilePicture(\r\n        sessionManager.getDataFromCookies(cookiesConstants.USER_PICTURE)\r\n      );\r\n    }\r\n  }, []);\r\n  function getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n\r\n    return {\r\n      width,\r\n\r\n      height,\r\n    };\r\n  }\r\n  const [windowDimensions, setWindowDimensions] = React.useState(\r\n    getWindowDimensions()\r\n  );\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const { width } = windowDimensions;\r\n  if (width >= 760) {\r\n    history.push(\"/loginprofile\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Tokensearchbar />\r\n\r\n      <div className={classes.add}>\r\n        <ProfilePicContainer>\r\n          <div className={isLoading == true ? \"cover-spin-loginDialog\" : \"\"}>\r\n            <Wrapper>\r\n              <Title>Edit Profile</Title>\r\n              <div onClick={handleClose} className={classes.backButtonMobile}>\r\n            <img src=\"/images/backButton.svg\" />\r\n          </div>\r\n              <Cut onClick={handleClose}>\r\n                {\" \"}\r\n                <img\r\n                  className=\"cross-icon\"\r\n                  src={\"/images/XDC-Cross.svg\"}\r\n                />{\" \"}\r\n              </Cut>\r\n            </Wrapper>\r\n            <AvatarUpload\r\n              filedata={fileData}\r\n              uploadFileToS3={uploadFileToS3}\r\n              profilePicture={profilePicture}\r\n              className={classes.avtar}\r\n            />\r\n\r\n            <div\r\n              style={{ padding: \"8px 35px\", marginBottom: \"14px\" }}\r\n              className={classes.username}\r\n            >\r\n              <p className={classes.subCategory}>Username</p>\r\n              {!usernameEnable ? (\r\n                <span className=\"beforeInput\">\r\n                  <span className=\"beforeInputValue\">{userName}</span>\r\n                  <img\r\n                    className=\"imgcss\"\r\n                    src={\"/images/edit.svg\"}\r\n                    onClick={() => setUsernameEnable(true)}\r\n                  />\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  className=\"inputcss\"\r\n                  style={{ border: \"solid 1px #9fa9ba\", paddingLeft: \"10px\" }}\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  value={userName}\r\n                  onChange={(e) => {\r\n                    {\r\n                      setUserName(e.target.value);\r\n                      setUserNameError(\"\");\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n              <div className={classes.error}>{userNameError}</div>\r\n            </div>\r\n\r\n            <div\r\n              style={{ padding: \"8px 35px\", marginBottom: \"25px\" }}\r\n              className={classes.username}\r\n            >\r\n              <p className={classes.subCategory}>Email</p>\r\n              {!emailEnable ? (\r\n                <span className=\"beforeInput\">\r\n                  <span className=\"beforeInputValue\">{email}</span>\r\n                  <img\r\n                    className=\"imgcss\"\r\n                    src={\"/images/edit.svg\"}\r\n                    onClick={() => setEmailEnable(true)}\r\n                  />\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  className=\"inputcss\"\r\n                  style={{ border: \"solid 1px #9fa9ba\", paddingLeft: \"14px\" }}\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    {\r\n                      setEmail(e.target.value);\r\n                      setEmailError(\"\");\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n              {emailError ? (\r\n                <div className={classes.error}>{emailError}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n\r\n            <DialogActions>\r\n              <button\r\n                className={classes.addbtn}\r\n                onClick={() => {\r\n                  profileUrl();\r\n                }}\r\n              >\r\n                Update Profile{\" \"}\r\n              </button>\r\n            </DialogActions>\r\n\r\n            <div className={classes.value}></div>\r\n          </div>\r\n        </ProfilePicContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}