{"version":3,"sources":["modules/explorer/AvatarUpload.js","modules/explorer/editProfileResponsive.js"],"names":["Button","styled","span","CenteredContent","MuiCloudUpload","spacing","div","useStyles","makeStyles","theme","root","display","margin","large","width","height","avtar","marginTop","BigAvatar","MuiAvatar","grey","AvatarUpload","props","classes","useState","image","_setImage","inputFileRef","createRef","setImage","newImage","URL","revokeObjectURL","current","value","useEffect","profilePicture","className","$withBorder","alt","src","ref","accept","hidden","id","type","onChange","event","target","files","createObjectURL","filedata","htmlFor","onClick","acceptStyle","borderColor","rejectStyle","thumb","borderRadius","border","marginBottom","marginRight","padding","boxSizing","add","marginLeft","maxWidth","backButtonMobile","position","cursor","error","color","btn","cross","fontWeight","dialog","paper","maxHeight","alignSelf","input","backgroundColor","addbtn","subCategory","fontFamily","fontSize","outline","forgotpass","createaccount","fontfamily","fontsize","icon","xdc","heading","fontweight","username","activeStyle","baseStyle","background","Wrapper","Title","img","ProfilePicContainer","Cut","FormDialog","setOpen","React","userName","setUserName","userNameError","setUserNameError","emailError","setEmailError","isLoading","setLoading","isEditPicture","setIsEditPicture","uploadFile","setUploadFile","setProfilePicture","email","setEmail","regExAlphaNum","mailformat","updateUser","url","a","userInfo","sessionManager","getDataFromCookies","reqObj","name","userId","profilePic","match","authObject","AuthService","Utility","parseResponse","authResponse","length","utility","apiFailureToast","apiSuccessToast","autoClose","setDataInCookies","history","push","handleClose","uploadFileToS3","formdata","FormData","append","awsObject","AwsService","awsResponse","cookiesConstants","USER_PICTURE","setTimeout","setUsernameEnable","setEmailEnable","getUserName","getEmail","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","map","file","Object","assign","preview","isDragActive","getRootProps","getInputProps","isDragAccept","isDragReject","open","useMemo","style","key","forEach","path","size","usernameEnable","emailEnable","profileUrl","response","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","paddingLeft","e"],"mappings":"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","file":"static/js/36.320b5976.chunk.js","sourcesContent":["import {Avatar as MuiAvatar, makeStyles,} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport {CloudUpload as MuiCloudUpload,} from \"@material-ui/icons\";\nimport {spacing} from \"@material-ui/system\";\nimport React, {createRef, useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.span`\n  width: 91px;\n  height: 17px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 500;\n  color: #2149b9;\n`;\n\nconst UploadIcon = styled(MuiCloudUpload)(spacing);\n\nconst CenteredContent = styled.div`\n  text-align: center;\n  height: 200px;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  large: {\n    width: \"108px\",\n    height: \"108px\",\n  },\n  \"@media (min-width: 300px) and (max-width: 767px)\": {\n    avtar:{\n      marginTop: \"20px\",\n      height: \"160px\"\n      \n    }\n    \n   \n  },\n  \n}));\n\nconst BigAvatar = styled(MuiAvatar)`\n  width: 300x;\n  height: 300px;\n  margin: 0 auto 16px;\n  border: 1px solid ${grey[500]};\n  box-shadow: 0 0 1px 0 ${grey[500]} inset, 0 0 1px 0 ${grey[500]};\n`;\n\nconst AvatarUpload = (props) => {\n\n  const classes = useStyles();\n\n  const [image, _setImage] = useState(null);\n  const inputFileRef = createRef(null);\n\n  const cleanup = () => {\n    URL.revokeObjectURL(image);\n    inputFileRef.current.value = null;\n  };\n\n  const setImage = (newImage) => {\n    if (image) {\n      cleanup();\n    }\n    _setImage(newImage);\n  };\n\n  const handleOnChange = (event) => {\n    const newImage = event.target?.files?.[0];\n\n    if (newImage) {\n      setImage(URL.createObjectURL(newImage));\n      props.filedata(newImage)\n    }\n  };\n  useEffect(() => {\n    _setImage(props.profilePicture);\n  }, []);\n  /**\n   *\n   * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\n   */\n  const handleClick = (event) => {\n    if (image) {\n      // event.preventDefault();\n      // setImage(null);\n    }\n  };\n\n  return (\n    <CenteredContent className={classes.avtar}>\n      <BigAvatar\n        className={classes.large}\n        $withBorder\n        alt=\"Avatar\"\n        src={image}\n      />\n      <input\n        ref={inputFileRef}\n        accept=\"image/*\"\n        hidden\n        id=\"avatar-image-upload\"\n        type=\"file\"\n        onChange={handleOnChange}\n      />\n      <label htmlFor=\"avatar-image-upload\">\n        <Button className=\"imgcss\" onClick={handleClick}>{\"Upload Photo\"}</Button>\n      </label>\n    </CenteredContent>\n  );\n};\n\nexport default AvatarUpload;\n","import utility from \"../../utility\";\nimport Utility from \"../../utility\";\nimport { sessionManager } from \"../../managers/sessionManager\";\nimport AuthService from \"../../services/userLogin\";\nimport AwsService from \"../../services/awsService\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport AvatarUpload from \"./AvatarUpload\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useDropzone } from \"react-dropzone\";\nimport { history } from \"../../managers/history\";\nimport styled from \"styled-components\";\nimport { cookiesConstants } from \"../../constants\";\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: \"auto\",\n  height: 200,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  add: {\n    // backgroundColor: \"#2149b9\",\n    marginLeft: \"-6px\",\n  },\n  \"@media (min-width: 300px) and (max-width: 767px)\": {\n    marginTop: \"6.800rem\",\n    maxWidth: \"31.25rem\",\n    padding: \"0 0.5rem 0 0.5rem\",\n  },\n  backButtonMobile : {\n    marginLeft : \"18px\",\n    position: \"absolute\",\n    cursor: \"pointer\"\n  },\n  \"@media (min-width: 740px)\":{\n    backButtonMobile : {\n      display: \"none\"\n    }\n  },\n  error: {\n    color: \"red\",\n    marginLeft: \"2px\",\n    marginBottom: \"-10px\",\n  },\n  btn: {},\n  value: {\n    width: \"400px !important\",\n  },\n  cross: {\n    marginTop: \"25px\",\n    marginLeft: \"40px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n  },\n  dialog: {\n    marginLeft: \"10%\",\n    marginTop: \"2px\",\n    width: \"80% !important\",\n    height: \"80% !important\",\n    borderRadius: \"50px !important\",\n  },\n  paper: {\n    width: \"31.438rem\",\n    maxHeight: \"35.063rem\",\n    height: \"100%\",\n    alignSelf: \"flex-start\",\n    margin: \"100px auto\",\n    borderRadius: \"12px\",\n  },\n  input: {\n    width: \"340px\",\n    height: \"40px\",\n    border: \"solid 1px #c6c8ce\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"7px\",\n    padding: \"20px\",\n  },\n  addbtn: {\n    width: \"100%\",\n    height: \"40px\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#3763dd\",\n    //backgroundColor: \"red\",\n    margin: \"0px 26px 35px 26px\",\n    color: \"white\",\n  },\n  subCategory: {\n    marginTop: \"4px\",\n    marginBottom: \"4px\",\n    fontFamily: \"Inter\",\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    border: \"none !important\",\n    outline: \"none\",\n    color: \"#2a2a2a\",\n  },\n  forgotpass: {\n    color: \"#2149b9\",\n    marginLeft: \"123px\",\n  },\n  createaccount: {\n    color: \"#2149b9\",\n    marginLeft: \"32px\",\n    fontfamily: \"Inter\",\n    fontsize: \"14px\",\n  },\n  icon: {\n    marginLeft: \"-30px\",\n  },\n  xdc: {\n    color: \"#2a2a2a\",\n    marginLeft: \"30px\",\n    fontfamily: \"Inter\",\n    fontsize: \"5px\",\n  },\n  heading: {\n    marginLeft: \"60px\",\n    fontfamily: \"Inter\",\n    fontweight: \"600\",\n  },\n  avtar: {\n    height: \"19px !important\",\n  },\n  \"@media (min-width: 300px) and (max-width: 767px)\": {\n    username: {\n      height: \"60px\",\n    },\n  },\n}));\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\nconst baseStyle = {\n  borderRadius: 5,\n\n  height: \"104px\",\n  width: \"400px\",\n  background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n  color: \"#ACACAC\",\n  // border: \"0.3px dashed var(--unnamed-color-acacac)\",\n  border: \"0.30000001192092896px dashed #ACACAC\",\n  // marginTop: 5,\n};\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding-top: 20px;\n`;\n// const Upload = styled.div`\n//   display: block;\n//   cursor: pointer;\n//   padding-left: 11.2rem;\n//   font-family: Inter;\n//   font-size: 14px;\n//   font-weight: 500;\n//   color: #2149b9;\n// `;\nconst Image = styled.img`\n  width: 100%;\n  height: 145px;\n  border-radius: 4px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Title = styled.div`\n  font-family: Inter;\n  font-size: 22px;\n  font-weight: 600;\n  text-align: center;\n  color: #2a2a2a;\n  @media (min-width: 300px) and (max-width: 767px) {\n    height: 20px;\n    font-size: 16px;\n    text-align: center;\n    margin: auto;\n  }\n`;\nconst ProfilePicContainer = styled.div`\n  @media (min-width: 300px) and (max-width: 767px) {\n    max-width: 503px;\n    width: 100%;\n    height: 102px;\n  }\n`;\n\nconst Cut = styled.div`\n  padding-right: 25px;\n  padding-top: 7px;\n\n  // display: flex;\n  // align-content: flex-end;\n  display: none;\n`;\n// const Input = styled.div`\n//   display: flex;\n//   flex-flow: row nowrap;\n// `;\n\nexport default function FormDialog(props) {\n  const classes = useStyles();\n  const [opens, setOpen] = useState(false);\n  // const [color, setColor] = useState(\"\");\n  const [userName, setUserName] = React.useState(\"\");\n  const [userNameError, setUserNameError] = React.useState(\"\");\n  const [emailError, setEmailError] = React.useState(\"\");\n  const [isLoading, setLoading] = React.useState(false);\n  const [isEditPicture, setIsEditPicture] = React.useState(false);\n  const [uploadFile, setUploadFile] = React.useState(\"\");\n  const [profilePicture, setProfilePicture] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const fileData = (event) => {\n    setIsEditPicture(true);\n    setUploadFile(event);\n  };\n  // const changeColor =async()=>{\n\n  //   setColor({backgroundColor:\"red\"})\n\n  // }\n  var regExAlphaNum = /^[0-9a-zA-Z]+$/;\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  const updateUser = async (url) => {\n    let userInfo = sessionManager.getDataFromCookies(\"userId\");\n    setLoading(true);\n\n    const reqObj = {\n      name: userName,\n      userId: userInfo,\n      email: email,\n      profilePic: url ? url : profilePicture,\n    };\n\n    if (!userName.match(regExAlphaNum)) {\n      setUserNameError(\"Enter valid Username\");\n      setLoading(false);\n      return;\n    } else if (!email.match(mailformat)) {\n      setEmailError(\"Enter valid Email\");\n      setLoading(false);\n    } else {\n      const authObject = new AuthService();\n      let [error, authResponse] = await Utility.parseResponse(\n        authObject.updateUser(reqObj)\n      );\n      if (authResponse?.email.length > 2) {\n        setLoading(false);\n      }\n      if (error || !authResponse) {\n        utility.apiFailureToast(\"User Exists\");\n        setLoading(false);\n      } else {\n        utility.apiSuccessToast(\"Profile upadated successfully\", {\n          autoClose: 10000,\n        });\n        sessionManager.setDataInCookies(authResponse, \"userInfo\");\n        sessionManager.setDataInCookies(true, \"isLoggedIn\");\n        sessionManager.setDataInCookies(authResponse.userId, \"userId\");\n        history.push(\"/loginprofile\");\n        handleClose();\n        // window.location.href = \"loginprofile\";\n        return authResponse;\n      }\n    }\n  };\n\n  const uploadFileToS3 = async () => {\n    setLoading(true);\n    let formdata = new FormData();\n    formdata.append(\"file\", uploadFile);\n    formdata.append(\"path\", \"profilePic\");\n    const awsObject = new AwsService();\n    let [error, awsResponse] = await Utility.parseResponse(\n      awsObject.updateUser(formdata)\n    );\n    if (awsResponse[0].url.length > 2) {\n      setLoading(false);\n    }\n    if (error || !awsResponse) {\n      utility.apiFailureToast(\" Upload failed\");\n      return false;\n    } else {\n      // utility.apiSuccessToast(\"Pic uploaded successfully\");\n      sessionManager.setDataInCookies(\n        awsResponse[0].url,\n        cookiesConstants.USER_PICTURE\n      );\n      setProfilePicture(awsResponse[0].url);\n      return awsResponse;\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    history.push(\"/loginprofile\");\n    setUserNameError(\"\");\n    setEmailError(\"\");\n    setTimeout(() => {\n      setUsernameEnable(false);\n      setEmailEnable(false);\n      setUserName(getUserName);\n      setEmail(getEmail);\n    }, 500);\n  };\n\n  const handleLogin = () => {\n    history.push(\"/loginprofile\");\n    // window.location(\"/loginprofile\")\n  };\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    open,\n  } = useDropzone({\n    accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  const handleUpload = (event) => {\n    setFiles(event.target.files[0]);\n  };\n\n  const ImageThumb = ({ image }) => {\n    return <Image src={URL.createObjectURL(image)} alt={image.name} />;\n  };\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject]\n  );\n\n  const thumbs = files.map((file) => <div style={thumb} key={file.name}></div>);\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  const filepath = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const [passwordShown, setPasswordShown] = React.useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n    // {passwordShown ?<VisibilityIcon/>:<VisibilityOff/>}\n  };\n  const [usernameEnable, setUsernameEnable] = React.useState(false);\n  const [emailEnable, setEmailEnable] = React.useState(false);\n\n  const profileUrl = async () => {\n    let response = {};\n    if (isEditPicture) {\n      response = await uploadFileToS3();\n      if (!response) return;\n      setProfilePicture(response[0].url);\n    }\n\n    let upadteUser = await updateUser(response[0]?.url);\n  };\n  const getUserName = () => {\n    let name = sessionManager.getDataFromCookies(\"userInfo\");\n    let userName = name.name;\n    return userName;\n  };\n\n  const getEmail = () => {\n    let name = sessionManager.getDataFromCookies(\"userInfo\");\n    let userName = name.email;\n    return userName;\n  };\n  useEffect(() => {\n    let userInfo = sessionManager.getDataFromCookies(\"userInfo\");\n    if (userInfo) {\n      setUserName(userInfo.name);\n      setEmail(userInfo.email);\n      setProfilePicture(\n        sessionManager.getDataFromCookies(cookiesConstants.USER_PICTURE)\n      );\n    }\n  }, []);\n  function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n\n    return {\n      width,\n\n      height,\n    };\n  }\n  const [windowDimensions, setWindowDimensions] = React.useState(\n    getWindowDimensions()\n  );\n  React.useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const { width } = windowDimensions;\n  if (width >= 760) {\n    history.push(\"/loginprofile\");\n  }\n  return (\n    <div>\n      <Tokensearchbar />\n\n      <div className={classes.add}>\n        <ProfilePicContainer>\n          <div className={isLoading == true ? \"cover-spin-loginDialog\" : \"\"}>\n            <Wrapper>\n              <Title>Edit Profile</Title>\n              <div onClick={handleClose} className={classes.backButtonMobile}>\n            <img src=\"images/backbutton.svg\" />\n          </div>\n              <Cut onClick={handleClose}>\n                {\" \"}\n                <img\n                  className=\"cross-icon\"\n                  src={\"/images/XDC-Cross.svg\"}\n                />{\" \"}\n              </Cut>\n            </Wrapper>\n            <AvatarUpload\n              filedata={fileData}\n              uploadFileToS3={uploadFileToS3}\n              profilePicture={profilePicture}\n              className={classes.avtar}\n            />\n\n            <div\n              style={{ padding: \"8px 35px\", marginBottom: \"14px\" }}\n              className={classes.username}\n            >\n              <p className={classes.subCategory}>Username</p>\n              {!usernameEnable ? (\n                <span className=\"beforeInput\">\n                  <span className=\"beforeInputValue\">{userName}</span>\n                  <img\n                    className=\"imgcss\"\n                    src={\"/images/edit.svg\"}\n                    onClick={() => setUsernameEnable(true)}\n                  />\n                </span>\n              ) : (\n                <input\n                  className=\"inputcss\"\n                  style={{ border: \"solid 1px #9fa9ba\", paddingLeft: \"10px\" }}\n                  type=\"text\"\n                  id=\"username\"\n                  value={userName}\n                  onChange={(e) => {\n                    {\n                      setUserName(e.target.value);\n                      setUserNameError(\"\");\n                    }\n                  }}\n                />\n              )}\n              <div className={classes.error}>{userNameError}</div>\n            </div>\n\n            <div\n              style={{ padding: \"8px 35px\", marginBottom: \"25px\" }}\n              className={classes.username}\n            >\n              <p className={classes.subCategory}>Email</p>\n              {!emailEnable ? (\n                <span className=\"beforeInput\">\n                  <span className=\"beforeInputValue\">{email}</span>\n                  <img\n                    className=\"imgcss\"\n                    src={\"/images/edit.svg\"}\n                    onClick={() => setEmailEnable(true)}\n                  />\n                </span>\n              ) : (\n                <input\n                  className=\"inputcss\"\n                  style={{ border: \"solid 1px #9fa9ba\", paddingLeft: \"14px\" }}\n                  type=\"text\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => {\n                    {\n                      setEmail(e.target.value);\n                      setEmailError(\"\");\n                    }\n                  }}\n                />\n              )}\n              {emailError ? (\n                <div className={classes.error}>{emailError}</div>\n              ) : (\n                <></>\n              )}\n            </div>\n\n            <DialogActions>\n              <button\n                className={classes.addbtn}\n                onClick={() => {\n                  profileUrl();\n                }}\n              >\n                Update Profile{\" \"}\n              </button>\n            </DialogActions>\n\n            <div className={classes.value}></div>\n          </div>\n        </ProfilePicContainer>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}