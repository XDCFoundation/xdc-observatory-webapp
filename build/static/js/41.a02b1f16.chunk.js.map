{"version":3,"sources":["modules/explorer/newblockDetail.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","width","maxWidth","rowDiv","alignItems","height","background","borderRadius","line","marginTop","marginBottom","mainContainer","mainContainerDark","backgroundColor","customTooltip","fontSize","customTooltipDarkMode","color","connect","state","dispatchAction","props","classes","useState","setHeight","count","setcount","copiedText","setCopiedText","blockNumber","useParams","isLoading","setLoading","parsed","queryString","parse","useLocation","search","getLatestaccount","hash","a","urlPath","Utils","parseResponse","BlockService","getDetailsOfBlock","error","blockDetailsUsingHeight","length","decrement","updatedCount","Number","window","history","pushState","getWindowDimensions","innerWidth","innerHeight","React","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","hashid","blockheight","transactionT","timestamp","parenthash","sha3uncles","diffi","tdiffi","gasU","gasL","nonc","extrad","td","parseInt","totalDifficulty","difficulty","timezone","useSelector","hashTT","setHashTT","blockHeightTT","setBlockHeightTT","transactionTT","setTransactionTT","timeStampTT","setTimeStampTT","parentHashTT","setParentHashTT","sha3UnclesTT","setSha3UnclesTT","difficultyTT","setDifficultyTT","totalDifficultyTT","setTotalDifficultyTT","gasUsedTT","setGasUsedTT","gasLimitTT","setGasLimitTT","nonceTT","setNonceTT","extraDataTT","setExtraDataTT","currentTheme","className","item","xs","Spacing","style","borderBottom","Container","Heading","Div","HashDiv","align","placement","title","tooltip","ImageView","src","open","onOpen","onClose","onClick","Hash","MiddleContainerHash","Content","shortenHashTab","text","onCopy","ImgView","Div__","MiddleContainer","marginRight","padding","paddingLeft","border","lineHeight","verticalAlign","marginLeft","transactions","date","difference","Date","now","daysDifference","Math","floor","hoursDifference","minutesDifference","secondsDifference","getHoursAgo","moment","tz","format","Utility","getUtcOffset","cursor","parentHash","sha3Uncles","gasUsed","gasLimit","nonce","lastBorder","readOnly","value","extraData","styled","input","span","textarea","div","img"],"mappings":"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","file":"static/js/41.a02b1f16.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport Tokensearchbar from \"./tokensearchBar\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Utils from \"../../utility\";\r\nimport { useParams } from \"react-router\";\r\nimport { BlockService } from \"../../services\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport moment from \"moment-timezone\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport queryString from \"query-string\";\r\nimport utility, { dispatchAction } from \"../../utility\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport Utility from \"../../utility\";\r\nimport format from \"format-number\";\r\nimport { transparent } from \"material-ui/styles/colors\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    // marginTop: \"100px\",\r\n    width: \"75.125rem\",\r\n    \"@media (min-width: 0px) and (max-width: 767px)\": {\r\n      // marginTop: \"130px\",\r\n      maxWidth: \"21rem\",\r\n    },\r\n    \"@media (min-width: 768px) and (max-width: 1239px)\": {\r\n      // marginTop: \"130px\",\r\n      maxWidth: \"41.5rem\",\r\n    },\r\n  },\r\n  rowDiv: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    height: \"53px\",\r\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\r\n    borderRadius: \"7px\",\r\n\r\n    justifyContent: \"space-between\",\r\n  },\r\n  line: {\r\n    width: \"100%\",\r\n    marginTop: \"0px\",\r\n    marginBottom: \"0px\",\r\n  },\r\n  mainContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  mainContainerDark: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#091b4e\",\r\n  },\r\n  customTooltip: {\r\n    fontSize: \"13px\",\r\n  },\r\n  customTooltipDarkMode: {\r\n    background: \"#051440\",\r\n    color: \"#adc4e4\",\r\n    fontSize: \"13px\",\r\n  },\r\n}));\r\n\r\nfunction BlockDetails(props) {\r\n  const classes = useStyles();\r\n  const [height, setHeight] = useState([]);\r\n  const [count, setcount] = useState(0);\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n  const { blockNumber } = useParams();\r\n  const [isLoading, setLoading] = useState(true);\r\n  const parsed = queryString.parse(useLocation().search);\r\n  let hashKey = parsed?.hash;\r\n\r\n  // useEffect(() => {\r\n  //   getLatestaccount(blockNumber);\r\n  //   setcount(blockNumber);\r\n  // }, []);\r\n\r\n  const getLatestaccount = async (blockNumber) => {\r\n    let urlPath = `${blockNumber}`;\r\n\r\n    let [error, blockDetailsUsingHeight] = await Utils.parseResponse(\r\n      BlockService.getDetailsOfBlock(urlPath, {})\r\n    );\r\n\r\n    if (\r\n      !blockDetailsUsingHeight ||\r\n      blockDetailsUsingHeight.length === 0 ||\r\n      blockDetailsUsingHeight === \"\" ||\r\n      blockDetailsUsingHeight === null\r\n    ) {\r\n      setLoading(false);\r\n    }\r\n    if (error || !blockDetailsUsingHeight) return;\r\n    setHeight(blockDetailsUsingHeight);\r\n    setLoading(false);\r\n  };\r\n  function increment() {\r\n    setLoading(true);\r\n    let updatedCount = Number(count) + 1;\r\n    setcount(updatedCount);\r\n    window.history.pushState(\"\", \"\", `/block-details/${updatedCount}`);\r\n    getLatestaccount(updatedCount);\r\n  }\r\n\r\n  function decrement() {\r\n    setLoading(true);\r\n    let updatedCount = Number(count) - 1;\r\n    setcount(updatedCount);\r\n    window.history.pushState(\"\", \"\", `/block-details/${updatedCount}`);\r\n    getLatestaccount(updatedCount);\r\n  }\r\n\r\n  //--------------------->\r\n  function getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n  const [windowDimensions, setWindowDimensions] = React.useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    getLatestaccount(blockNumber);\r\n    setcount(blockNumber);\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  const { width } = windowDimensions;\r\n\r\n  const hashid = `Hash of the block header from the previous block`;\r\n  const blockheight = `Also known as Block Number. The block height, which indicates the length of the blockchain, increases after the addition of the new block.`;\r\n  const transactionT = `Number of transactions associated with a particular block`;\r\n  const timestamp = `The date and time at which a transaction is mined.`;\r\n  const parenthash = `The hash of the block from which this block was generated, also known as its parent block`;\r\n  const sha3uncles = `The mechanism which Ethereum Javascript RLP encodes an empty string`;\r\n  const diffi = `  The amount of effort required to mine a new block. The difficulty algorithm may adjust according to time`;\r\n  const tdiffi = `Total difficulty of the chain until this block`;\r\n  const gasU = `The total gas used in the block and  its percentage of gas filled in the block`;\r\n  const gasL = `Total gas limit provided by all transactions in the block`;\r\n  const nonc = `Block nonce is a value used during mining to demonstrate proof of work for a block.`;\r\n  const extrad = `Any data that can be included by the miner in the block.`;\r\n\r\n  const truncate = (input) => {\r\n    if (input.length > 40) {\r\n      return input.substring(0, 38) + \"...\";\r\n    }\r\n    return input;\r\n  };\r\n  let td = parseInt(height?.totalDifficulty);\r\n\r\n  let difficulty = parseInt(height?.difficulty);\r\n\r\n  const getHoursAgo = (date) => {\r\n    let today = Date.now();\r\n    let difference = today - date;\r\n    var daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\r\n    difference -= daysDifference * 1000 * 60 * 60 * 24;\r\n    var hoursDifference = Math.floor(difference / 1000 / 60 / 60);\r\n    difference -= hoursDifference * 1000 * 60 * 60;\r\n    var minutesDifference = Math.floor(difference / 1000 / 60);\r\n    difference -= minutesDifference * 1000 * 60;\r\n    var secondsDifference = Math.floor(difference / 1000);\r\n    if (\r\n      secondsDifference < 60 &&\r\n      minutesDifference === 0 &&\r\n      hoursDifference === 0 &&\r\n      daysDifference === 0\r\n    ) {\r\n      if (secondsDifference === 1) return secondsDifference + \" second ago \";\r\n      else return secondsDifference + \" seconds ago \";\r\n    }\r\n    if (\r\n      minutesDifference < 60 &&\r\n      hoursDifference === 0 &&\r\n      daysDifference === 0\r\n    ) {\r\n      if (minutesDifference === 1) return minutesDifference + \" minute ago \";\r\n      return minutesDifference + \" minutes ago\";\r\n    }\r\n    if (hoursDifference < 60 && daysDifference === 0) {\r\n      if (hoursDifference === 1) return hoursDifference + \" hour ago \";\r\n      return hoursDifference + \" hours ago\";\r\n    }\r\n    if (daysDifference < 30) {\r\n      if (hoursDifference === 1) return hoursDifference + \" day ago \";\r\n      return daysDifference + \" days ago\";\r\n    }\r\n  };\r\n  const timezone = useSelector((state) => state.timezone);\r\n  const [hashTT, setHashTT] = useState(false);\r\n  const [blockHeightTT, setBlockHeightTT] = useState(false);\r\n  const [transactionTT, setTransactionTT] = useState(false);\r\n  const [timeStampTT, setTimeStampTT] = useState(false);\r\n  const [parentHashTT, setParentHashTT] = useState(false);\r\n  const [sha3UnclesTT, setSha3UnclesTT] = useState(false);\r\n  const [difficultyTT, setDifficultyTT] = useState(false);\r\n  const [totalDifficultyTT, setTotalDifficultyTT] = useState(false);\r\n  const [gasUsedTT, setGasUsedTT] = useState(false);\r\n  const [gasLimitTT, setGasLimitTT] = useState(false);\r\n  const [nonceTT, setNonceTT] = useState(false);\r\n  const [extraDataTT, setExtraDataTT] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Tokensearchbar theme={props.theme.currentTheme} />\r\n      <div\r\n        className={\r\n          props.theme.currentTheme === \"dark\"\r\n            ? classes.mainContainerDark\r\n            : classes.mainContainer\r\n        }\r\n      >\r\n        <div className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <div className={isLoading == true ? \"cover-spin-2\" : \"\"}>\r\n              <div className={isLoading == true ? \"cover-spin\" : \"\"}>\r\n                <Spacing style={{ borderBottom: \"none\" }}>\r\n                  <Container>\r\n                    <Heading theme={props.theme.currentTheme}>\r\n                      Block Details\r\n                    </Heading>\r\n                  </Container>\r\n                </Spacing>\r\n\r\n                <Div theme={props.theme.currentTheme}>\r\n                  <HashDiv>\r\n                    <Container className=\"pad-left-6 pad-left-7\">\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          placement=\"top\"\r\n                          title={hashid}\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={hashTT}\r\n                          onOpen={() => setHashTT(true)}\r\n                          onClose={() => setHashTT(false)}\r\n                          align=\"right\"\r\n                          title={hashid}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setHashTT(!hashTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Hash ID</Hash>\r\n                    </Container>\r\n\r\n                    <MiddleContainerHash>\r\n                      <Content theme={props.theme.currentTheme}>\r\n                        {/* {height.hash} */}\r\n                        {width > 1240\r\n                          ? height.hash\r\n                          : width <= 1240 && width >= 768\r\n                          ? Utils.shortenHashTab(height.hash)\r\n                          : height.hash}\r\n                        <CopyToClipboard\r\n                          text={height.hash}\r\n                          onCopy={() => setCopiedText(height.hash)}\r\n                        >\r\n                          <Tooltip\r\n                            title={\r\n                              copiedText === height.hash\r\n                                ? \"Copied\"\r\n                                : \"Copy To Clipboard\"\r\n                            }\r\n                            placement=\"top\"\r\n                            classes={{\r\n                              tooltip:\r\n                                props.theme.currentTheme === \"dark\"\r\n                                  ? classes.customTooltipDarkMode\r\n                                  : classes.customTooltip,\r\n                            }}\r\n                          >\r\n                            <button\r\n                              className={\r\n                                props.theme.currentTheme === \"dark\"\r\n                                  ? \"copy-icon-block-details-dark\"\r\n                                  : \"copy-icon-block-details\"\r\n                              }\r\n                            >\r\n                              <ImgView src=\"/images/copy-grey.svg\" />\r\n                            </button>\r\n                          </Tooltip>\r\n                        </CopyToClipboard>\r\n                      </Content>\r\n                    </MiddleContainerHash>\r\n                  </HashDiv>\r\n                </Div>\r\n                <Div__ theme={props.theme.currentTheme}>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={blockheight}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={blockHeightTT}\r\n                          onOpen={() => setBlockHeightTT(true)}\r\n                          onClose={() => setBlockHeightTT(false)}\r\n                          align=\"right\"\r\n                          title={blockheight}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setBlockHeightTT(!blockHeightTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                      <Hash theme={props.theme.currentTheme}>Block Height</Hash>\r\n                    </Container>\r\n                    <MiddleContainer>\r\n                      <Content theme={props.theme.currentTheme}>\r\n                        <ArrowBackIosIcon\r\n                          style={{\r\n                            marginRight: \"10px\",\r\n                            color: \"white\",\r\n                            backgroundColor: \"#2149b9\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            padding: \"3px\",\r\n                            paddingLeft: \"6px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px #2149b9\",\r\n                            lineHeight: \"1rem\",\r\n                            verticalAlign: \"bottom\",\r\n                          }}\r\n                          onClick={decrement}\r\n                        />\r\n                        {count}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            marginLeft: \"10px\",\r\n                            color: \"white\",\r\n                            backgroundColor: \"#2149b9\",\r\n                            width: \"20px\",\r\n                            height: \"20px\",\r\n                            padding: \"3px\",\r\n                            paddingLeft: \"6px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px #2149b9\",\r\n                            lineHeight: \"1rem\",\r\n                            verticalAlign: \"bottom\",\r\n                          }}\r\n                          onClick={increment}\r\n                        />\r\n                      </Content>\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={transactionT}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={transactionTT}\r\n                          onOpen={() => setTransactionTT(true)}\r\n                          onClose={() => setTransactionTT(false)}\r\n                          align=\"right\"\r\n                          title={transactionT}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setTransactionTT(!transactionTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Transaction</Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {height.transactions && height.transactions.length\r\n                        ? height.transactions.length\r\n                        : 0}\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={timestamp}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={timeStampTT}\r\n                          onOpen={() => setTimeStampTT(true)}\r\n                          onClose={() => setTimeStampTT(false)}\r\n                          align=\"right\"\r\n                          title={timestamp}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setTimeStampTT(!timeStampTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Time Stamp</Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {height?.timestamp &&\r\n                        getHoursAgo(height.timestamp * 1000)}\r\n                      (\r\n                      {`${\r\n                        (height?.timestamp &&\r\n                          moment(height.timestamp * 1000)\r\n                            .tz(timezone)\r\n                            .format(\"MMM DD, YYYY, hh:mm A\")) ||\r\n                        \"\"\r\n                      } ${(timezone && Utility.getUtcOffset(timezone)) || \"\"}`}\r\n                      )\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={parenthash}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={parentHashTT}\r\n                          onOpen={() => setParentHashTT(true)}\r\n                          onClose={() => setParentHashTT(false)}\r\n                          align=\"right\"\r\n                          title={parenthash}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setParentHashTT(!parentHashTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Parent Hash</Hash>\r\n                    </Container>\r\n                    <MiddleContainer>\r\n                      <Content theme={props.theme.currentTheme}>\r\n                        <a\r\n                          onClick={decrement}\r\n                          className={\r\n                            props.theme.currentTheme === \"dark\"\r\n                              ? \"parent_hash_dark\"\r\n                              : \"parent_hash\"\r\n                          }\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          {/* {height.parentHash} */}\r\n                          {width > 1240\r\n                            ? height.parentHash\r\n                            : width <= 1240 && width >= 768\r\n                            ? Utils.shortenHashTab(height.parentHash)\r\n                            : height.parentHash}\r\n                        </a>\r\n                        <CopyToClipboard\r\n                          text={height.parentHash}\r\n                          onCopy={() => setCopiedText(height.parentHash)}\r\n                        >\r\n                          <Tooltip\r\n                            title={\r\n                              copiedText === height.parentHash\r\n                                ? \"Copied\"\r\n                                : \"Copy To Clipboard\"\r\n                            }\r\n                            placement=\"top\"\r\n                            classes={{\r\n                              tooltip:\r\n                                props.theme.currentTheme === \"dark\"\r\n                                  ? classes.customTooltipDarkMode\r\n                                  : classes.customTooltip,\r\n                            }}\r\n                          >\r\n                            <button\r\n                              style={\r\n                                props.theme.currentTheme === \"dark\"\r\n                                  ? {\r\n                                      color: \"blue\",\r\n                                      fontSize: 14,\r\n                                      background: \"transparent\",\r\n                                    }\r\n                                  : {\r\n                                      color: \"blue\",\r\n                                      backgroundColor: \"white\",\r\n                                      fontSize: 14,\r\n                                    }\r\n                              }\r\n                            >\r\n                              <ImgView src=\"/images/copy-grey.svg\" />\r\n                            </button>\r\n                          </Tooltip>\r\n                        </CopyToClipboard>\r\n                      </Content>\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={sha3uncles}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={sha3UnclesTT}\r\n                          onOpen={() => setSha3UnclesTT(true)}\r\n                          onClose={() => setSha3UnclesTT(false)}\r\n                          align=\"right\"\r\n                          title={sha3uncles}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setSha3UnclesTT(!sha3UnclesTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Sha3Uncles</Hash>\r\n                    </Container>\r\n                    <MiddleContainer>\r\n                      <Content theme={props.theme.currentTheme}>\r\n                        {/* {height.sha3Uncles} */}\r\n                        {width > 1240\r\n                          ? height.sha3Uncles\r\n                          : width <= 1240 && width >= 768\r\n                          ? Utils.shortenHashTab(height.sha3Uncles)\r\n                          : height.sha3Uncles}\r\n                        <CopyToClipboard\r\n                          text={height.sha3Uncles}\r\n                          onCopy={() => setCopiedText(height.sha3Uncles)}\r\n                        >\r\n                          <Tooltip\r\n                            title={\r\n                              copiedText === height.sha3Uncles\r\n                                ? \"Copied\"\r\n                                : \"Copy To Clipboard\"\r\n                            }\r\n                            placement=\"top\"\r\n                            classes={{\r\n                              tooltip:\r\n                                props.theme.currentTheme === \"dark\"\r\n                                  ? classes.customTooltipDarkMode\r\n                                  : classes.customTooltip,\r\n                            }}\r\n                          >\r\n                            <button\r\n                              style={\r\n                                props.theme.currentTheme === \"dark\"\r\n                                  ? {\r\n                                      color: \"blue\",\r\n                                      fontSize: 14,\r\n                                      background: \"transparent\",\r\n                                    }\r\n                                  : {\r\n                                      color: \"blue\",\r\n                                      backgroundColor: \"white\",\r\n                                      fontSize: 14,\r\n                                    }\r\n                              }\r\n                            >\r\n                              <ImgView src=\"/images/copy-grey.svg\" />\r\n                            </button>\r\n                          </Tooltip>\r\n                        </CopyToClipboard>\r\n                      </Content>\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={diffi}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={difficultyTT}\r\n                          onOpen={() => setDifficultyTT(true)}\r\n                          onClose={() => setDifficultyTT(false)}\r\n                          align=\"right\"\r\n                          title={diffi}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setDifficultyTT(!difficultyTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Difficulty</Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {format({})(difficulty)}\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={tdiffi}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={totalDifficultyTT}\r\n                          onOpen={() => setTotalDifficultyTT(true)}\r\n                          onClose={() => setTotalDifficultyTT(false)}\r\n                          align=\"right\"\r\n                          title={tdiffi}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() =>\r\n                              setTotalDifficultyTT(!totalDifficultyTT)\r\n                            }\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>\r\n                        Total Difficulty\r\n                      </Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {format({})(td)}\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={gasU}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={gasUsedTT}\r\n                          onOpen={() => setGasUsedTT(true)}\r\n                          onClose={() => setGasUsedTT(false)}\r\n                          align=\"right\"\r\n                          title={gasU}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setGasUsedTT(!gasUsedTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Gas Used</Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {format({})(parseInt(height?.gasUsed))}\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={gasL}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={gasLimitTT}\r\n                          onOpen={() => setGasLimitTT(true)}\r\n                          onClose={() => setGasLimitTT(false)}\r\n                          align=\"right\"\r\n                          title={gasL}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setGasLimitTT(!gasLimitTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Gas Limit</Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {format({})(parseInt(height?.gasLimit))}\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing theme={props.theme.currentTheme}>\r\n                    <Container>\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={nonc}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={nonceTT}\r\n                          onOpen={() => setNonceTT(true)}\r\n                          onClose={() => setNonceTT(false)}\r\n                          align=\"right\"\r\n                          title={nonc}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setNonceTT(!nonceTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Nonce</Hash>\r\n                    </Container>\r\n                    <MiddleContainer theme={props.theme.currentTheme}>\r\n                      {height.nonce}\r\n                    </MiddleContainer>\r\n                  </Spacing>\r\n                  <Spacing\r\n                    lastBorder={true}\r\n                    theme={props.theme.currentTheme}\r\n                    style={{ height: \"unset\" }}\r\n                  >\r\n                    <Container className=\"pad-bottom-34\">\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={extrad}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView src=\"/images/info.svg\" />\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={extraDataTT}\r\n                          onOpen={() => setExtraDataTT(true)}\r\n                          onClose={() => setExtraDataTT(false)}\r\n                          align=\"right\"\r\n                          title={extrad}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme.currentTheme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <ImageView\r\n                            onClick={() => setExtraDataTT(!extraDataTT)}\r\n                            src=\"/images/info.svg\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                      <Hash theme={props.theme.currentTheme}>Extra Data</Hash>\r\n                    </Container>\r\n                    <div className=\"block-details-extraData\">\r\n                      <textarea\r\n                        className={\r\n                          props.theme.currentTheme === \"dark\"\r\n                            ? \"text-area-dark\"\r\n                            : \"text-area\"\r\n                        }\r\n                        readOnly\r\n                        value={height.extraData}\r\n                      />\r\n                    </div>\r\n                  </Spacing>\r\n                </Div__>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { theme: state.theme };\r\n};\r\nexport default connect(mapStateToProps, { dispatchAction })(BlockDetails);\r\n\r\nconst Input = styled.input`\r\n  border-radius: 5px;\r\n  border: solid 1px #e3e7eb;\r\n  background-color: #fff;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: left;\r\n  color: #2a2a2a;\r\n`;\r\nconst Content = styled.span`\r\n  font-family: Inter;\r\n  font-size: 13px;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  word-break: break-all;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    color: #b1c3e1;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 1241px) {\r\n    height: 1.125rem;\r\n    font-family: Inter;\r\n    font-size: 0.938rem;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n\r\n    text-align: left;\r\n    color: #3a3a3a;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n`;\r\nconst TextArea = styled.textarea`\r\n  opacity: 0.33;\r\n  border-radius: 4px;\r\n  border: solid 1px #9fa9ba;\r\n  background-color: #dee0e3;\r\n  width: 100%;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  height: 85px;\r\n  float: left;\r\n\r\n  overflow-y: auto;\r\n`;\r\nconst Digits = styled.span`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n\r\n  text-align: left;\r\n  color: #4878ff;\r\n`;\r\nconst Blocks = styled.span`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: left;\r\n`;\r\nconst Div__ = styled.div`\r\n  height: auto;\r\n  border-radius: 7px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px;\r\n  background-color: #fff;\r\n  padding: 0rem 2.188rem 0rem 2.188rem;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    background-color: #192a59;\r\n    margin-bottom: 60px;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    margin-bottom: 23px;\r\n  }\r\n  @media (min-width: 767px) and (max-width: 1240px) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst MiddleContainer = styled.div`\r\n  font-family: Inter;\r\n  font-size: 13px;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    color: #b1c3e1;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-left: unset;\r\n    margin-top: 8px;\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n  @media (min-width: 1241px) {\r\n    height: 1.125rem;\r\n    font-family: Inter;\r\n    font-size: 0.938rem;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n\r\n    text-align: left;\r\n    color: #3a3a3a;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #b1c3e1;\r\n    `}\r\n  }\r\n`;\r\nconst MiddleContainerHash = styled.div`\r\n  font-family: Inter;\r\n  font-size: 13px;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 105px;\r\n  width: 100%;\r\n  @media (min-width: 300px) and (max-width: 767px) {\r\n    margin-left: unset;\r\n    margin-top: 8px;\r\n    padding-right: 53px;\r\n  }\r\n`;\r\nconst Hash = styled.span`\r\n  color: var(--unnamed-color-2a2a2a);\r\n  white-space: nowrap;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n\r\n  color: #2a2a2a;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    color: #ffffff;\r\n  `}\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.75rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #ffffff;\r\n    `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #ffffff;\r\n    `}\r\n  }\r\n  @media (min-width: 1241px) {\r\n    height: 1.125rem;\r\n    font-family: Inter;\r\n    font-size: 0.938rem;\r\n    font-weight: 600;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n\r\n    text-align: left;\r\n    color: #2a2a2a;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n      color: #ffffff;\r\n    `}\r\n  }\r\n`;\r\nconst Spacing = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  padding: 11px 6px 11px 0px;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 4.063rem;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    border-bottom: solid 1px #4a5d94;\r\n  `}\r\n  ${({ lastBorder, theme }) =>\r\n    theme === \"dark\" &&\r\n    lastBorder === true &&\r\n    `\r\n    border-bottom: none;\r\n  `}\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: block;\r\n    height: unset;\r\n    padding: 11px 6px;\r\n  }\r\n`;\r\nconst HashDiv = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  padding: 15px 24px;\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: block;\r\n    padding-left: 10px;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  word-break: break-all;\r\n  width: 100%;\r\n  align-items: center;\r\n  max-width: 84px;\r\n`;\r\nconst SecondContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media (min-width: 300px) and (max-width: 767px) {\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  height: auto;\r\n  border-radius: 7px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  border: solid 1px #e3e7eb;\r\n  background-color: #fff;\r\n  margin-bottom: 15px;\r\n  padding: 5px;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    background-color: #192a59;\r\n    border: none;\r\n  `}\r\n`;\r\n\r\nconst Heading = styled.span`\r\n  white-space: nowrap;\r\n  color: #2a2a2a;\r\n  box-shadow: none;\r\n  color: var(--unnamed-color-2a2a2a);\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  ${({ theme }) =>\r\n    theme === \"dark\" &&\r\n    `\r\n    color: #ffffff;\r\n  `}\r\n\r\n  @media (min-width: 1241px) {\r\n    height: 1.813rem;\r\n    font-family: Inter;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n\r\n    text-align: left;\r\n    color: #2a2a2a;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n    color: #ffffff;\r\n  `}\r\n  }\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    height: 1rem;\r\n    font-family: Inter;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n\r\n    text-align: left;\r\n    color: #2a2a2a;\r\n    margin-top: 15px;\r\n    margin-bottom: 10px;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n    color: #ffffff;\r\n  `}\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    height: 1rem;\r\n    font-family: Inter;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: normal;\r\n\r\n    text-align: left;\r\n    color: #2a2a2a;\r\n    ${({ theme }) =>\r\n      theme === \"dark\" &&\r\n      `\r\n    color: #ffffff;\r\n  `}\r\n  }\r\n`;\r\n\r\nconst ImageView = styled.img`\r\n  width: 22px;\r\n  margin-right: 12px;\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 22px;\r\n    // height: 14px;\r\n    margin-right: 6px;\r\n    margin-left: -4px;\r\n  }\r\n\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 22px;\r\n    // height: 0.875rem;\r\n  }\r\n`;\r\nconst ImgView = styled.img`\r\n  width: 20px;\r\n`;\r\n"],"sourceRoot":""}