{"version":3,"sources":["modules/resp_transaction/resTransaction.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","marginRight","marginLeft","marginBottom","width","paddingLeft","paddingRight","rowDiv","alignItems","height","background","borderRadius","justifyContent","mainContainer","Transaction","_handleChange","classes","hash","useParams","useState","transactions","setTransactions","setIsPvtNote","privateNote","setPrivateNote","setAddressTag","setAddressTagTo","setIsTag","setIsTagTo","amount","setAmount","copiedText","setCopiedText","fromAddress","setFromAddress","toAddress","setToAddress","getWindowDimensions","window","innerWidth","innerHeight","React","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","dialogPvtTagIsOpen","setDialogPvtTagIsOpen","dialogValue","setDailogValue","dialogValue2","setDailogValue2","dialogPvtTagIsOpen2","setDialogPvtTagIsOpen2","dialogPvtNoteIsOpen","setDialogPvtNoteIsOpen","loginDialogIsOpen","setLoginDialogIsOpen","openDialogPvtTag","scrollTo","closeDialogPvtTag","openDialogPvtTag2","closeDialogPvtTag2","openDialogPvtNote","closeDialogPvtNote","isLoading","setLoading","timeStamp","setTimeStamp","price","setPrice","latestBlock","setLatestBlock","isSeeMore","setSeeMore","a","transactionDetail","getLatestBlock","privateNoteUsingHash","urlPath","Utils","parseResponse","TransactionService","getTransactionDetailsUsingHash","error","transactiondetailusinghash","length","undefined","timestamp","tagUsingAddressFrom","tagUsingAddressTo","from","to","BlockService","latestBlocks","ts","parseInt","getCoinMarketDetailForTransaction","CurrencyValue","userInfo","sessionManager","getDataFromCookies","data","transactionHash","userId","transactionLabel","localStorage","getItem","cookiesConstants","USER_TRASACTION_LABELS","JSON","parse","existingTransactionLabel","find","item","getListOfTxnLabel","response","address","taggedAddressFetched","USER_TAGGED_ADDRESS","tags","tagValue","filter","obj","addrTagFrom","addrTagTo","taggedAddress","tagValueFrom","sub","tagValueTo","pvtNotehash","pvtNoteLocal","pvtNote","pvtNoteValue","currencySymbol","valueFetch","txfee","decimalDivison","gasPrice","gasUsed","txnFee","parseFloat","toFixed","replace","txnFee1","toString","split","txnFee2","transactionFetch","fetchtxn","fetchtxn1","fetchtxn2","gasP","gasPrice1","gasPrice2","transactionValue","value","valueDiv","ValueMain","bx","number","blockNumber","timezone","useSelector","state","className","Container","Heading","Div","status","StatusContainer","StatusContainerInside","StatusImgContainer","StatusImg","src","StatusTextSuccess","StatusTextFailed","TxnDetailsRightContainer","TxnDetailsRightTopContainer","align","title","ImageView","Hash","DetailsMiddleContainer","isTextArea","ContentHash","text","onCopy","placement","open","getTotalCountTxnLabel","onClose","trxLable","onClick","require","TxnDetailsRightBottomContainer","DetailsContainer","moment","tz","format","Utility","getUtcOffset","Content","href","BlockConfirmation","DivMiddleContainer","DivMiddle","style","display","TabTag","fromAddr","Tag","tagName","AddTagContainer","ImgAddTag","AddTagtext","MobileDesktopTag","DivCircle","ImgNextArrow","contractAddress","toAddr","Div__","Spacing","MiddleContainer","color","gas","nonce","SpacingInputData","ImageViewInputData","HashInputData","MiddleContainerInputData","readOnly","input","SeeMoreContainer","SeeMoreText","ImgSeeLess","ImgSeeMore","SpacingPrivateNode","MiddleContainerPrivateNote","AddLabel","AddLabelText","PrivateText","dataHashOrAddress","cursor","event","target","setItem","currency","styled","div","textarea","p","props","span","img"],"mappings":"6jBAuBMA,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,YAEVC,YAAa,OACbC,WAAY,OACZC,aAAc,QAEdC,MAAO,OACP,iDAAkD,CAChDJ,SAAU,YACVK,YAAa,MACbC,aAAc,OAEhB,oDAAqD,CACnDN,SAAU,YAGdO,OAAQ,CACNH,MAAO,OACPI,WAAY,SACZC,OAAQ,OACRC,WAAY,sCACZC,aAAc,MAEdC,eAAgB,iBAGlBC,cAAe,CACbT,MAAO,YAII,SAASU,GAAT,KAAuBC,cAAvB,mBAAyC,IAAD,oBAC/CC,EAAUpB,KACRqB,EAASC,eAATD,KACR,EAAwCE,qBAAS,GAAjD,oBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,qBAAS,GAA3C,oBAAkBG,GAAlB,WACA,EAAsCH,oBAAS,IAA/C,oBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAoCL,oBAAS,IAA7C,oBAAmBM,GAAnB,WACA,EAAwCN,oBAAS,IAAjD,oBAAqBO,GAArB,WACA,EAA0BP,qBAAS,GAAnC,oBAAcQ,GAAd,WACA,EAA8BR,qBAAS,GAAvC,oBAAgBS,GAAhB,WACA,EAA4BT,oBAAS,IAArC,oBAAOU,EAAP,KAAeC,EAAf,KACA,EAAoCX,oBAAS,IAA7C,oBAAOY,EAAP,KAAmBC,EAAnB,KACA,EAAsCb,oBAAS,IAA/C,oBAAOc,EAAP,KAAoBC,EAApB,KACA,EAAkCf,oBAAS,IAA3C,oBAAOgB,EAAP,KAAkBC,EAAlB,KAEA,SAASC,IACP,MAAmDC,OACnD,MAAO,CACLlC,MAFF,EAAQmC,WAGN9B,OAHF,EAA2B+B,aAO7B,OAAgDC,KAAMtB,SACpDkB,KADF,sBAAOK,GAAP,MAAyBC,GAAzB,MAIAF,KAAMG,WAAU,WACd,SAASC,IACPF,GAAoBN,KAItB,OADAC,OAAOQ,iBAAiB,SAAUD,GAC3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IACH,IAAQzC,GAAUsC,GAAVtC,MAER,GAAoDqC,KAAMtB,UAAS,GAAnE,sBAAO6B,GAAP,MAA2BC,GAA3B,MACA,GAAsCR,KAAMtB,SAAS,GAArD,sBAAO+B,GAAP,MAAoBC,GAApB,MACA,GAAwCV,KAAMtB,SAAS,GAAvD,sBAAOiC,GAAP,MAAqBC,GAArB,MACA,GAAsDZ,KAAMtB,UAAS,GAArE,sBAAOmC,GAAP,MAA4BC,GAA5B,MACA,GAAsDd,KAAMtB,UAAS,GAArE,sBAAOqC,GAAP,MAA4BC,GAA5B,MACA,GAAkDhB,KAAMtB,UAAS,GAAjE,sBAAOuC,GAAP,MAA0BC,GAA1B,MAEMC,GAAmB,WACvBtB,OAAOuB,SAAS,EAAG,GACnBZ,IAAsB,GACtBE,GAAe,IAEXW,GAAoB,WACxBb,IAAsB,GACtBE,GAAe,IAEXY,GAAoB,WACxBzB,OAAOuB,SAAS,EAAG,GACnBN,IAAuB,GACvBF,GAAgB,IAEZW,GAAqB,WACzBT,IAAuB,GACvBF,GAAgB,IAEZY,GAAoB,kBAAMR,IAAuB,IACjDS,GAAqB,kBAAMT,IAAuB,IAGxD,GAAgCtC,qBAAS,GAAzC,sBAAOgD,GAAP,MAAkBC,GAAlB,MACA,GAAkCjD,sBAAlC,sBAAOkD,GAAP,MAAkBC,GAAlB,MACA,GAA0BnD,oBAAS,IAAnC,sBAAOoD,GAAP,MAAcC,GAAd,MACA,GAAsCrD,oBAAS,GAA/C,sBAAOsD,GAAP,MAAoBC,GAApB,MACA,GAAgCvD,qBAAS,GAAzC,sBAAOwD,GAAP,MAAkBC,GAAlB,MACAhC,qBAAS,wBAAC,uBAAAiC,EAAA,sEACFC,KADE,OAERC,KACAC,KAHQ,2CAIP,IAEH,IAAMF,GAAiB,yCAAG,qCAAAD,EAAA,6DACpBI,EADoB,UACPhE,GADO,SAEwBiE,KAAMC,cACpDC,KAAmBC,+BAA+BJ,EAAS,KAHrC,uCAEnBK,EAFmB,MAEZC,EAFY,OAOgB,IAAtCA,EAA2BC,aACIC,IAA/BF,GAC+B,KAA/BA,GAC+B,OAA/BA,GAEAnB,IAAW,IAETkB,GAAUC,EAdU,mDAexBlE,EAAgBkE,GAChBjB,GAAY,OAACiB,QAAD,IAACA,OAAD,EAACA,EAA4BG,WACzCtB,IAAW,GAEXuB,GAAoBJ,GACpBK,GAAkBL,GAClBrD,EAAeqD,EAA2BM,MAC1CzD,EAAamD,EAA2BO,IAtBhB,4CAAH,qDAwBjBf,GAAc,yCAAG,mCAAAF,EAAA,4DACP,kBADO,SAEaK,KAAMC,cACtCY,KAAahB,eAFD,kBAEyB,KAHlB,uCAEhBO,EAFgB,KAETU,EAFS,MAKjBV,GAAUU,EALO,iDAOrBtB,GAAesB,GAPM,4CAAH,qDASpBpD,sBAAU,WACR,IAAIqD,EAAKC,SAAS7B,IAClB8B,GAAkCF,KACjC,CAAC5B,KACJzB,sBAAU,WACR,IAAIqD,EAAKC,SAAS7B,IAClB8B,GAAkCF,KACjC,CAACpE,IACJ,IAAMsE,GAAiC,yCAAG,WAAOF,GAAP,0BAAApB,EAAA,6DACpCI,EAAU,oBAAsBgB,EAAK,cAAgBG,GADjB,SAEQlB,KAAMC,cACpDC,KAAmBe,kCAAkClB,EAAS,KAHxB,uCAEnCK,EAFmC,KAE5BC,EAF4B,MAKpCD,GAAUC,EAL0B,iDAMxCf,GAAQ,UAACe,EAA2B,UAA5B,aAAC,EAA+BhB,OANA,4CAAH,sDASjC8B,GAAWC,KAAeC,mBAAmB,YAE7CvB,GAAoB,yCAAG,iCAAAH,EAAA,yDACrB2B,EAAO,CACXC,gBAAgB,GAAD,OAAKxF,GACpByF,OAAQJ,KAAeC,mBAAmB,WAExCI,EAAmBC,aAAaC,QAClCL,EAAKE,OAASI,KAAiBC,yBAEjCJ,EAAmBK,KAAKC,MAAMN,KACJA,EAAiBnB,OAThB,kDAWrB0B,EAA2BP,EAAiBQ,MAChD,SAACC,GAAD,OACEA,EAAKX,iBAAmBD,EAAKC,iBAC7BW,EAAKV,QAAUF,EAAKE,aAGtBlF,EAAe0F,GACf5F,GAAa,IAlBY,2CAAH,qDAsBpB+F,GAAoB,WACxBrC,MAGIW,GAAmB,yCAAG,WAAO2B,GAAP,sBAAAzC,EAAA,sDACpB2B,EAAO,CACXe,QAASD,EAASzB,KAClBa,OAAQJ,KAAeC,mBAAmB,WAMxCiB,EAAuBZ,aAAaC,QACtCL,EAAKE,OAASI,KAAiBW,qBAE7BC,EACFF,GAAwBA,EAAqBhC,OAAS,EAClDwB,KAAKC,MAAMO,GACX,IACAG,EACJD,GAAQA,EAAKlC,OAAS,EAAtB,OACIkC,QADJ,IACIA,OADJ,EACIA,EAAME,QACJ,SAACC,GAAD,OAASA,EAAIN,UAAYf,EAAKe,SAAWM,EAAInB,QAAUF,EAAKE,UAE9D,KACUiB,EAASnC,SACvB/D,EAAckG,EAAS,IACvBhG,GAAS,IAxBe,2CAAH,sDA4BnBiE,GAAiB,yCAAG,WAAO0B,GAAP,sBAAAzC,EAAA,sDAClB2B,EAAO,CACXe,QAASD,EAASxB,GAClBY,OAAQJ,KAAeC,mBAAmB,WAOxCiB,EAAuBZ,aAAaC,QACtCL,EAAKE,OAASI,KAAiBW,qBAE7BC,EACFF,GAAwBA,EAAqBhC,OAAS,EAClDwB,KAAKC,MAAMO,GACX,IACAG,EACJD,GAAQA,EAAKlC,OAAS,EAAtB,OACIkC,QADJ,IACIA,OADJ,EACIA,EAAME,QACJ,SAACC,GAAD,OAASA,EAAIN,UAAYf,EAAKe,SAAWM,EAAInB,QAAUF,EAAKE,UAE9D,KACUiB,EAASnC,SACvB9D,EAAgBiG,EAAS,IACzB/F,GAAW,IAzBW,2CAAH,sDA8BnBkG,GAAc7F,EACd8F,GAAY5F,EAEZ6F,GAAgBpB,aAAaC,QAC/BP,KAAeC,mBAAmB,UAChCO,KAAiBW,qBAEjBC,GACFM,IAAiBA,GAAcxC,OAAS,EAAIwB,KAAKC,MAAMe,IAAiB,GACtEC,GACFP,IAAQA,GAAKlC,OAAS,EAAtB,OACIkC,SADJ,IACIA,QADJ,EACIA,GAAME,QACJ,SAACC,GAAD,OAASA,EAAIN,UAAYO,IAAeD,EAAInB,SAAWL,GAAS6B,OAElE,GACFC,GACFT,IAAQA,GAAKlC,OAAS,EAAtB,OACIkC,SADJ,IACIA,QADJ,EACIA,GAAME,QACJ,SAACC,GAAD,OAASA,EAAIN,UAAYQ,IAAaF,EAAInB,SAAWL,GAAS6B,OAEhE,GAIFE,GAAW,UAAMnH,GACjBoH,GAAezB,aAAaC,QAC9BC,KAAiBC,wBAGfuB,GACFD,IAAgBA,GAAa7C,OAAS,EAAIwB,KAAKC,MAAMoB,IAAgB,GACnEE,GACFD,IAAWA,GAAQ9C,OAAS,EAA5B,OACI8C,SADJ,IACIA,QADJ,EACIA,GAASV,QACP,SAACC,GAAD,OACEA,EAAIpB,kBAAoB2B,IAAeP,EAAInB,SAAWL,GAAS6B,OAEnE,GA4BN,IAAI9B,GAAgB9D,OAAOsE,aAAaC,QAAQ,YAC1C2B,GACc,QAAlBpC,GAA0B,SAAwB,QAAlBA,GAA0B,IAAM,SAC5DqC,GACsBlE,GACtBmE,GAAStH,EAEX8D,KAAMyD,gBAA2B,OAAZvH,QAAY,IAAZA,OAAA,EAAAA,EAAcwH,WAAd,OAAyBxH,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAcyH,SAAS,GADrE,EAGEC,GAAM,UAAGC,WAAWL,WAAd,aAAG,EAAmBM,QAAQ,GAAGC,QAAQ,MAAO,IAExDC,GAAUJ,GAAOK,WAAWC,MAAM,KAAK,GACvCC,GAAUP,GAAOK,WAAWC,MAAM,KAAK,GAErCE,GAEAZ,GAAQnE,GAIRgF,GAAYD,GAAD,UAEbP,WAAWO,WAFE,aAEb,EAA8BN,QAAQ,GADtC,EAEAQ,GAAYD,GAASJ,WAAWC,MAAM,KAAK,GAC3CK,GAAYF,GAASJ,WAAWC,MAAM,KAAK,GAEzCM,GAAQtI,EAAawH,SAEvB1D,KAAMyD,eAAevH,EAAawH,SAAU,IAD5C,EAEEA,GAAQ,UAAGG,WAAWW,WAAd,aAAG,EAAkBV,QAAQ,IAAIC,QAAQ,MAAO,IAC1DU,GAAYf,GAASO,WAAWC,MAAM,KAAK,GAC3CQ,GAAYhB,GAASO,WAAWC,MAAM,KAAK,GAC3CS,IACU,OAAZzI,QAAY,IAAZA,OAAA,EAAAA,EAAc0I,OACd,KAC0B,MAAV,OAAZ1I,QAAY,IAAZA,OAAA,EAAAA,EAAc0I,OAFlB,OAGI1I,QAHJ,IAGIA,OAHJ,EAGIA,EAAc0I,MAEdC,IACQ,OAAZ3I,QAAY,IAAZA,OAAA,EAAAA,EAAc0I,OAAQ,IAAiB,OAAZ1I,QAAY,IAAZA,OAAA,EAAAA,EAAc0I,OAAQ,GAC5CrB,GAAaoB,IAAkBb,QAAQ,GACxC9D,KAAMyD,eAAeF,GAAaoB,GAAkB,GACtDG,IACU,OAAZ5I,QAAY,IAAZA,OAAA,EAAAA,EAAc0I,OAAQ,IAAiB,OAAZ1I,QAAY,IAAZA,OAAA,EAAAA,EAAc0I,OAAQ,EAAjD,OACI1I,QADJ,IACIA,OADJ,EACIA,EAAc0I,MACd5E,KAAMyD,eAAekB,GAAkB,GACzCI,IAAK,UAAAxF,GAAY,UAAZ,eAAgByF,SAAhB,OAAyB9I,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAc+I,aAqC1CC,GAAWC,cAAY,SAACC,GAAD,OAAWA,EAAMF,YAE9C,OACE,0BAAKG,UAAWvJ,EAAQH,eACtB,mBAAC,KAAD,MAEA,0BAAK0J,UAAWvJ,EAAQjB,MACtB,mBAAC,KAAD,KACE,0BAAKwK,UAAwB,GAAbpG,GAAoB,eAAiB,IACnD,0BAAKoG,UAAwB,GAAbpG,GAAoB,aAAe,IACjD,mBAACqG,GAAD,KACE,mBAACC,GAAD,6BAGF,mBAACC,GAAD,KACGtJ,EACwB,GAAvBA,EAAauJ,OACX,mBAACC,GAAD,KACE,mBAACC,GAAD,KACE,mBAACC,GAAD,KACE,mBAACC,GAAD,CAAWC,IAAI,yBAEjB,mBAACC,GAAD,kBAIJ,mBAACL,GAAD,KACE,mBAACE,GAAD,KACE,mBAACC,GAAD,CAAWC,IAAI,wBAEjB,mBAACE,GAAD,gBAGF,KACJ,mBAACC,GAAD,KACE,mBAACC,GAAD,KACE,mBAACZ,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MA5I/B,gHA6IU,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,0BAEF,mBAACC,GAAD,CAAwBC,YAAY,GAClC,mBAACC,GAAD,KACG1K,GAOH,2BACEsJ,UACEnK,IAAS,IACL,qBACA,2BAGN,mBAAC,mBAAD,CACEwL,KAAM3K,EACN4K,OAAQ,kBAAM7J,EAAcf,KAE5B,mBAAC,KAAD,CACEqK,MACEvJ,IAAed,EACX,SACA,oBAEN6K,UAAU,OAEV,6BACEvB,UACEnK,GAAQ,KACJ,sBACA,6BAGN,0BACEmK,UACEnK,GAAQ,KACJ,YACAA,GAAQ,IACR,qBACA,eAEN4K,IAAK,6BAKZ3E,GACC,sCAEI,mBAAC,KAAD,CACE0F,KAAMvI,GACN6D,kBAAmBA,GACnB2E,sBAAuB,aACvBC,QAAS/H,GACTjD,KAAMA,EACNqH,QAAO,UAAE/G,EAAY,UAAd,aAAE,EAAgB2K,WAI3B,mBAAC,KAAD,CACEZ,MAAM,wBACNQ,UAAU,OAEV,0BACEvB,UACEnK,GAAQ,KAAO,YAAc,eAE/B+L,QAASlI,GACT+G,IAAKoB,EAAQ,UAMrB,MAKR,mBAACC,GAAD,KACE,mBAACC,GAAD,KACE,mBAAC9B,GAAD,KACE,mBAAC,KAAD,CAASc,MAjOpB,2JAkOa,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,2BAEF,mBAAC,KAAD,CAASF,MAAK,OAAElK,QAAF,IAAEA,OAAF,EAAEA,EAAc0I,OAC5B,mBAAC2B,GAAD,CAAwBC,YAAY,GACjC1B,GADH,UACuB,IACnBD,GAEE,KAAOvB,GAAiBuB,IAAY,IADpC,OAMV,mBAACuC,GAAD,CAAkB/B,UAAU,mBAC1B,mBAACC,GAAD,KACE,mBAAC,KAAD,CAASc,MArPhB,wDAsPS,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,+BAEF,mBAACC,GAAD,CAAwBC,YAAY,GAApC,WAMiB,OAAZtK,QAAY,IAAZA,OAAA,EAAAA,EAAcsE,YACb6G,KAAgC,IAAzBnL,EAAasE,WACjB8G,GAAGpC,IACHqC,OAAO,0BACZ,GAVJ,YAYKrC,IAAYsC,KAAQC,aAAavC,KAAc,MAMtD,mBAACkC,GAAD,KACE,mBAAC9B,GAAD,KACE,mBAAC,KAAD,CAASc,MAhRd,yIAiRO,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,sBAEF,mBAACC,GAAD,CAAwBC,YAAY,GAClC,mBAACkB,GAAD,KACE,wBACErC,UAAU,+BACVsC,KAAM,kBAAoBzL,EAAa+I,aAEtC,IACA/I,EAAa+I,YACV/I,EAAa+I,YACb,IARR,OAUS,IACP,mBAAC2C,GAAD,KACG7C,GADH,8BAUZ,mBAAC8C,GAAD,KAEE,mBAACC,GAAD,KACE,mBAACxC,GAAD,KACE,mBAAC,KAAD,CAASc,MA9SjB,4EA+SU,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,cAEF,mBAACC,GAAD,CAAwBC,YAAY,GAClC,mBAACkB,GAAD,KACG,IACD,0BAAKK,MAAO,CAAEC,QAAS9M,IAAS,IAAM,OAAS,UAC7C,wBACEmK,UAAU,+BACVsC,KAAM,oBAAsBzL,EAAayE,MAExCzE,EAAayE,MAEhB,0BACE0E,UACEnK,GAAQ,IACJ,sBACA,iBAGN,mBAAC,mBAAD,CACEwL,KAAMxK,EAAayE,KACnBgG,OAAQ,kBAAM7J,EAAcZ,EAAayE,QAEzC,mBAAC,KAAD,CACEyF,MACEvJ,IAAeX,EAAayE,KACxB,SACA,oBAENiG,UAAU,OAEV,6BACEvB,UACEnK,GAAQ,KACJ,sBACA,6BAGN,0BACEmK,UACEnK,GAAQ,KACJ,YACAA,GAAQ,IACR,iBACA,qBAEN4K,IAAK,gCAQnB,mBAACmC,GAAD,KACG/M,IAAS,KAAOA,IAAS,MACxBiG,GACE,sCAEI,mBAAC,KAAD,CACE0F,KAAM/I,GACNiJ,QAASnI,GACTsJ,SAAUhM,EAAayE,KACvBiE,MAAO5G,GACPjC,KAAMA,IAITgH,KAA4B,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAczC,QAAS,EACtC,mBAAC6H,GAAD,eAEIpF,IAAyB,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAczC,QAAS,UAFxC,aAEI,EACI8H,SAIR,mBAAC,KAAD,CACEhC,MAAM,wBACNQ,UAAU,OAWV,mBAACyB,GAAD,CAAiBpB,QAASvI,IACxB,mBAAC4J,GAAD,KACE,0BAAKxC,IAAI,+BAEX,mBAACyC,GAAD,mBASV,KAIN,mBAACC,GAAD,MACGtN,GAAQ,KAAOA,GAAQ,OACtBiG,GACE,sCAEI,mBAAC,KAAD,CACE0F,KAAM/I,GACNiJ,QAASnI,GACTsJ,SAAUhM,EAAayE,KACvBiE,MAAO5G,GACPjC,KAAMA,IAITgH,KAAY,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAczC,QAC7B,mBAAC6H,GAAD,eACGpF,IAAyB,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAczC,QAAS,UADvC,aACG,EAAwC8H,SAG3C,mBAAC,KAAD,CACEhC,MAAM,wBACNQ,UAAU,OAWV,mBAACyB,GAAD,CAAiBpB,QAASvI,IACxB,mBAAC4J,GAAD,KACE,0BAAKxC,IAAI,+BAEX,mBAACyC,GAAD,mBASV,KAIN,mBAACE,GAAD,KACE,mBAACC,GAAD,KACE,0BAAK5C,IAAI,6BAIb,mBAACgC,GAAD,KACE,mBAACxC,GAAD,KACE,mBAAC,KAAD,CAASc,MApdnB,6EAqdY,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,YAEF,mBAACC,GAAD,CAAwBC,YAAY,GAClC,mBAACkB,GAAD,KACE,2BACEK,MAAO,CAAEC,QAAS9M,IAAS,IAAM,OAAS,UAE1C,wBACEmK,UAAU,+BACVsC,KAAM,oBAAsBzL,EAAa0E,IAExC1E,EAAa0E,GACV1E,EAAa0E,GACb1E,EAAayM,iBAEnB,0BACEtD,UACEnK,GAAQ,IACJ,sBACA,iBAGN,mBAAC,mBAAD,CACEwL,KAAMxK,EAAa0E,GACnB+F,OAAQ,kBAAM7J,EAAcZ,EAAa0E,MAEzC,mBAAC,KAAD,CACEwF,MACEvJ,IAAeX,EAAa0E,GACxB,SACA,oBAENgG,UAAU,OAEV,6BACEvB,UACEnK,GAAQ,KACJ,sBACA,6BAGN,0BACEmK,UACEnK,GAAQ,KACJ,YACAA,GAAQ,IACR,iBACA,qBAEN4K,IAAK,gCAQnB,mBAACmC,GAAD,KACG/M,IAAS,KAAOA,IAAS,MACxBiG,GACE,sCAEI,mBAAC,KAAD,CACE0F,KAAMzI,GACN2I,QAASjI,GACT8J,OAAQ1M,EAAa0E,GACrBgE,MAAO1G,GACPnC,KAAMA,IAGTkH,KAAU,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAY3C,QACzB,mBAAC6H,GAAD,eACGlF,IAAqB,OAAVA,SAAU,IAAVA,QAAA,EAAAA,GAAY3C,QAAS,UADnC,aACG,EAAoC8H,SAGvC,mBAAC,KAAD,CACEhC,MAAM,wBACNQ,UAAU,OAWV,mBAACyB,GAAD,CAAiBpB,QAASpI,IACxB,mBAACyJ,GAAD,KACE,0BAAKxC,IAAI,+BAEX,mBAACyC,GAAD,mBASV,KAIN,mBAACC,GAAD,MACGtN,GAAQ,KAAOA,GAAQ,OACtBiG,GACE,sCAEI,mBAAC,KAAD,CACE0F,KAAMzI,GACN2I,QAASjI,GACT8J,OAAQ1M,EAAa0E,GACrBgE,MAAO1G,GACPnC,KAAMA,IAGTkH,KAAU,OAAIA,SAAJ,IAAIA,QAAJ,EAAIA,GAAY3C,QACzB,mBAAC6H,GAAD,eACGlF,IAAqB,OAAVA,SAAU,IAAVA,QAAA,EAAAA,GAAY3C,QAAS,UADnC,aACG,EAAoC8H,SAGvC,mBAAC,KAAD,CACEhC,MAAM,wBACNQ,UAAU,OAWV,mBAACyB,GAAD,CAAiBpB,QAASpI,IACxB,mBAACyJ,GAAD,KACE,0BAAKxC,IAAI,+BAEX,mBAACyC,GAAD,mBASV,MAMR,mBAACM,GAAD,KAEE,mBAACC,GAAD,KACE,mBAACxD,GAAD,KACE,mBAAC,KAAD,CAASc,MArnBf,2JAsnBQ,mBAACC,GAAD,CAAWP,IAAK,sBAGlB,mBAACQ,GAAD,yBAEF,mBAACyC,GAAD,CAAiBvC,YAAY,GAC3B,mBAACkB,GAAD,KACG,IACW,GAAXvD,GACC,+BAAOH,IAEP,+BACGA,GACA,IACD,2BAAM+D,MAAO,CAAEiB,MAAO,YAAc7E,KAR1C,YAWcb,GACE,MAAbiB,GACC,+BAAOD,IAEP,+BACGA,GACA,IACD,2BAAMyD,MAAO,CAAEiB,MAAO,YAAczE,KAlB1C,OAyBJ,mBAACuE,GAAD,KACE,mBAACxD,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAtpBxB,qKAupBG,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,sBAEF,mBAACyC,GAAD,CAAiBvC,YAAY,GAC1Be,KAAO,GAAPA,CAAWrL,EAAa+M,OAG7B,mBAACH,GAAD,KACE,mBAACxD,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAhqB3B,mJAiqBM,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,6BAEF,mBAACyC,GAAD,CAAiBvC,YAAY,GACb,GAAb9B,GACC,+BAAOD,IAEP,+BACGA,GACA,IACD,2BAAMsD,MAAO,CAAEiB,MAAO,YAActE,OAM5C,mBAACoE,GAAD,KACE,mBAACxD,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAnrB5B,+DAorBO,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,kBAEF,mBAACyC,GAAD,CAAiBvC,YAAY,GAC3B,mBAACkB,GAAD,KAAUH,KAAO,GAAPA,CAAA,OAAWrL,QAAX,IAAWA,OAAX,EAAWA,EAAcyH,YAGrClE,GAQA,sCACE,mBAACqJ,GAAD,KACE,mBAACxD,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAtsBhC,0MAusBW,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,eAEF,mBAACyC,GAAD,CAAiBvC,YAAY,GAC3B,mBAACkB,GAAD,SAAWxL,EAAagN,SAG5B,mBAACC,GAAD,KACE,mBAAC7D,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAhtBlC,gEAitBa,mBAACgD,GAAD,CAAoBtD,IAAK,sBAE3B,mBAACuD,GAAD,oBAEF,mBAACC,GAAD,CAA0B9C,YAAY,GACpC,0BAAKnB,UAAU,kCACb,+BACEA,UAAU,wBACVkE,UAAQ,EACR3E,MAAO1I,EAAasN,WAK5B,mBAACV,GAAD,KACE,mBAACW,GAAD,CAAkBxC,QA9uBhB,WACpBvH,IAAW,KA8uBS,mBAACgK,GAAD,iBACA,mBAACC,GAAD,CAAY7D,IAAI,4BAvCtB,mBAACgD,GAAD,KACE,mBAACW,GAAD,CAAkBxC,QA7sBd,WACpBvH,IAAW,KA6sBO,mBAACgK,GAAD,iBACA,mBAACE,GAAD,CAAY9D,IAAI,2BAyCtB,mBAAC+D,GAAD,KACE,mBAACvE,GAAD,KACE,mBAAC,KAAD,CAASa,MAAM,QAAQC,MAvuBxB,mHAwuBG,mBAACC,GAAD,CAAWP,IAAK,sBAElB,mBAACQ,GAAD,sBAEF,mBAACwD,GAAD,KACI3I,GAkBE9E,EACF,sCAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAa2K,UAEpB,mBAAC+C,GAAD,KACE,mBAACC,GAAD,kDAIE,mBAAC,KAAD,CACEnD,KAAMvI,GACN6D,kBAAmBA,GACnB2E,sBAAuB,aACvBC,QAAS/H,GACTjD,KAAMA,EACNqH,QAAO,UACLC,IAAyB,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAc/C,QAAS,UAD/B,aACL,EAAwC0G,WAK5C,mBAAC,KAAD,CACEZ,MAAM,wBACNQ,UAAU,OAEV,0BACEvB,UACEnK,GAAQ,KAAO,aAAe,eAEhC+L,QAASlI,GACT+G,IAAKoB,EAAQ,UA9CrB,mBAAC+C,GAAD,KAEI,mBAAC,KAAD,CACEpD,KAAMrI,GACNuI,QAh8BD,kBAAMtI,IAAqB,IAi8B1ByL,kBAAmBnO,IALzB,kDASE,wBACEsJ,UAAU,+BACV0C,MAAO,CAAE/M,WAAY,MAAOmP,OAAQ,WACpClD,QAz8BA,kBAAMxI,IAAqB,KAs8B7B,iBA8CV,8BACA,kCAMR,mBAAC,KAAD,CAAiB5C,cA1yBrB,SAAuBuO,GAAQ,IAAD,IAC5BxN,EAAS,OAACwN,QAAD,IAACA,GAAD,UAACA,EAAOC,cAAR,aAAC,EAAezF,OACzBxH,OAAOsE,aAAa4I,QAAQ,WAA5B,OAAwCF,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAOC,cAA/C,aAAwC,EAAezF,QAwyBN2F,SAAU5N,KA3jChD,GA+jCD6N,WAAOhB,MAAV,kMAAX,IAUM9B,GAAU8C,WAAOC,IAAV,olBA4BPhE,GAAc+D,WAAOC,IAAV,umBA4CXR,IAfWO,WAAOE,SAAV,kUAeMF,WAAOG,EAAV,gPAUX9B,GAAQ2B,WAAOC,IAAV,wjBAuBLX,GAA6BU,WAAOC,IAAV,4qBAgC1BnB,GAA2BkB,WAAOC,IAAV,ogBA0BxB1B,GAAkByB,WAAOC,IAAV,wqBAkBP,SAACG,GAAD,OAAYA,EAAMpE,WAAN,mBAkDpB6C,IAnCmBmB,WAAOC,IAAV,suBAkBR,SAACG,GAAD,OAAYA,EAAMpE,WAAN,mBAiBJgE,WAAOK,KAAV,spBA8BbvE,GAAOkE,WAAOK,KAAV,4iBA0BJ1B,GAAmBqB,WAAOC,IAAV,uWAgBhBZ,GAAqBW,WAAOC,IAAV,6WAiBlB3B,GAAU0B,WAAOC,IAAV,sRA+CPnF,IAjCckF,WAAOC,IAAV,kSAeDD,WAAOC,IAAV,kYAkBKD,WAAOC,IAAV,+GAcTjF,IAPkBgF,WAAOC,IAAV,2GAOTD,WAAOC,IAAV,6aAiBH5C,GAAqB2C,WAAOC,IAAV,wTAalB3C,GAAY0C,WAAOC,IAAV,6YAiBTlF,GAAUiF,WAAOK,KAAV,umBA0BPzB,GAAqBoB,WAAOM,IAAV,ySAalBzE,GAAYmE,WAAOM,IAAV,8QAYTpF,GAAkB8E,WAAOC,IAAV,mZAgBf7E,GAAqB4E,WAAOC,IAAV,0OAUlB9E,GAAwB6E,WAAOC,IAAV,iNAUrB5E,GAAY2E,WAAOM,IAAV,oEAIT/E,GAAoByE,WAAOC,IAAV,oHAOjBzE,GAAmBwE,WAAOC,IAAV,gHAOhBhB,GAAmBe,WAAOC,IAAV,mEAIhBf,GAAcc,WAAOC,IAAV,4OAYXb,GAAaY,WAAOM,IAAV,iJAOVnB,GAAaa,WAAOM,IAAV,+KAQV7E,GAA2BuE,WAAOC,IAAV,wMASxBtD,GAAiCqD,WAAOC,IAAV,mXAe9BvE,GAA8BsE,WAAOC,IAAV,sGAK3BrD,GAAmBoD,WAAOC,IAAV,mMAShBlE,GAAyBiE,WAAOC,IAAV,2aAmBtB7C,GAAoB4C,WAAOC,IAAV,oRAejBhC,GAAY+B,WAAOC,IAAV,8ZAmBT/B,GAAe8B,WAAOC,IAAV,2UAcZpC,GAAkBmC,WAAOC,IAAV,kWAgBfnC,GAAYkC,WAAOC,IAAV,mDAGTlC,GAAaiC,WAAOC,IAAV,gDAIVtC,GAAMqC,WAAOC,IAAV,kSAcHxC,GAASuC,WAAOC,IAAV,8CAGNjC,GAAmBgC,WAAOC,IAAV,mDAGhBV,GAAWS,WAAOC,IAAV,+CAGRT,GAAeQ,WAAOC,IAAV","file":"static/js/41.d06d4a67.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n// import \"tippy.js/dist/tippy.css\";\nimport \"../../assets/styles/custom.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\nimport { useParams } from \"react-router\";\nimport { TransactionService, BlockService } from \"../../services\";\nimport Utils from \"../../utility\";\nimport FooterComponent from \"../common/footerComponent\";\nimport moment from \"moment\";\nimport PrivateAddressTag from \"../../modules/common/dialog/privateAddressTag\";\nimport PrivateNote from \"../../modules/common/dialog/privateNote\";\nimport { sessionManager } from \"../../managers/sessionManager\";\nimport LoginDialog from \"../explorer/loginDialog\";\nimport format from \"format-number\";\nimport { useSelector } from \"react-redux\";\nimport Utility from \"../../utility\";\nimport { cookiesConstants } from \"../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"75.125rem\",\n\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    marginBottom: \"-39px\",\n\n    width: \"100%\",\n    \"@media (min-width: 0px) and (max-width: 767px)\": {\n      maxWidth: \"22.563rem\",\n      paddingLeft: \"7px\",\n      paddingRight: \"7px\",\n    },\n    \"@media (min-width: 768px) and (max-width: 1240px)\": {\n      maxWidth: \"41.5rem\",\n    },\n  },\n  rowDiv: {\n    width: \"100%\",\n    alignItems: \"center\",\n    height: \"53px\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \"7px\",\n\n    justifyContent: \"space-between\",\n  },\n\n  mainContainer: {\n    width: \"100%\",\n  },\n}));\n\nexport default function Transaction({ _handleChange }) {\n  const classes = useStyles();\n  const { hash } = useParams();\n  const [transactions, setTransactions] = useState(false);\n  const [isPvtNote, setIsPvtNote] = useState(false);\n  const [privateNote, setPrivateNote] = useState(\"\");\n  const [addressTag, setAddressTag] = useState(\"\");\n  const [addressTagTo, setAddressTagTo] = useState(\"\");\n  const [isTag, setIsTag] = useState(false);\n  const [isTagTo, setIsTagTo] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [copiedText, setCopiedText] = useState(\"\");\n  const [fromAddress, setFromAddress] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n\n  function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = React.useState(\n    getWindowDimensions()\n  );\n\n  React.useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  const { width } = windowDimensions;\n\n  const [dialogPvtTagIsOpen, setDialogPvtTagIsOpen] = React.useState(false);\n  const [dialogValue, setDailogValue] = React.useState(0);\n  const [dialogValue2, setDailogValue2] = React.useState(0);\n  const [dialogPvtTagIsOpen2, setDialogPvtTagIsOpen2] = React.useState(false);\n  const [dialogPvtNoteIsOpen, setDialogPvtNoteIsOpen] = React.useState(false);\n  const [loginDialogIsOpen, setLoginDialogIsOpen] = React.useState(false);\n\n  const openDialogPvtTag = () => {\n    window.scrollTo(0, 0);\n    setDialogPvtTagIsOpen(true);\n    setDailogValue(1);\n  };\n  const closeDialogPvtTag = () => {\n    setDialogPvtTagIsOpen(false);\n    setDailogValue(0);\n  };\n  const openDialogPvtTag2 = () => {\n    window.scrollTo(0, 0);\n    setDialogPvtTagIsOpen2(true);\n    setDailogValue2(1);\n  };\n  const closeDialogPvtTag2 = () => {\n    setDialogPvtTagIsOpen2(false);\n    setDailogValue2(0);\n  };\n  const openDialogPvtNote = () => setDialogPvtNoteIsOpen(true);\n  const closeDialogPvtNote = () => setDialogPvtNoteIsOpen(false);\n  const openLoginDialog = () => setLoginDialogIsOpen(true);\n  const closeLoginDialog = () => setLoginDialogIsOpen(false);\n  const [isLoading, setLoading] = useState(true);\n  const [timeStamp, setTimeStamp] = useState();\n  const [price, setPrice] = useState(\"\");\n  const [latestBlock, setLatestBlock] = useState(0);\n  const [isSeeMore, setSeeMore] = useState(false);\n  useEffect(async () => {\n    await transactionDetail();\n    getLatestBlock();\n    privateNoteUsingHash();\n  }, []);\n\n  const transactionDetail = async () => {\n    let urlPath = `${hash}`;\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\n      TransactionService.getTransactionDetailsUsingHash(urlPath, {})\n    );\n    if (\n      !transactiondetailusinghash ||\n      transactiondetailusinghash.length === 0 ||\n      transactiondetailusinghash === undefined ||\n      transactiondetailusinghash === \"\" ||\n      transactiondetailusinghash === null\n    ) {\n      setLoading(false);\n    }\n    if (error || !transactiondetailusinghash) return;\n    setTransactions(transactiondetailusinghash);\n    setTimeStamp(transactiondetailusinghash?.timestamp);\n    setLoading(false);\n\n    tagUsingAddressFrom(transactiondetailusinghash);\n    tagUsingAddressTo(transactiondetailusinghash);\n    setFromAddress(transactiondetailusinghash.from);\n    setToAddress(transactiondetailusinghash.to);\n  };\n  const getLatestBlock = async () => {\n    let urlPath = \"?skip=0&limit=1\";\n    let [error, latestBlocks] = await Utils.parseResponse(\n      BlockService.getLatestBlock(urlPath, {})\n    );\n    if (error || !latestBlocks) return;\n\n    setLatestBlock(latestBlocks);\n  };\n  useEffect(() => {\n    let ts = parseInt(timeStamp);\n    getCoinMarketDetailForTransaction(ts);\n  }, [timeStamp]);\n  useEffect(() => {\n    let ts = parseInt(timeStamp);\n    getCoinMarketDetailForTransaction(ts);\n  }, [amount]);\n  const getCoinMarketDetailForTransaction = async (ts) => {\n    let urlPath = \"?transactionTime=\" + ts + \"&fiatValue=\" + CurrencyValue;\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\n      TransactionService.getCoinMarketDetailForTransaction(urlPath, {})\n    );\n    if (error || !transactiondetailusinghash) return;\n    setPrice(transactiondetailusinghash[0]?.price);\n  };\n\n  const userInfo = sessionManager.getDataFromCookies(\"userInfo\");\n\n  const privateNoteUsingHash = async () => {\n    const data = {\n      transactionHash: `${hash}`,\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n    };\n    let transactionLabel = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TRASACTION_LABELS\n    );\n    transactionLabel = JSON.parse(transactionLabel);\n    if (!transactionLabel || !transactionLabel.length) return;\n\n    const existingTransactionLabel = transactionLabel.find(\n      (item) =>\n        item.transactionHash == data.transactionHash &&\n        item.userId == data.userId\n    );\n    if (existingTransactionLabel) {\n      setPrivateNote(existingTransactionLabel);\n      setIsPvtNote(true);\n    }\n  };\n\n  const getListOfTxnLabel = () => {\n    privateNoteUsingHash();\n  };\n\n  const tagUsingAddressFrom = async (response) => {\n    const data = {\n      address: response.from,\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n    };\n    // let [errors, tagUsingAddressHashResponse] = await Utils.parseResponse(\n    //   TransactionService.getUserAddressTagUsingAddressHash(data)\n    // );\n    // if (errors || !tagUsingAddressHashResponse) return;\n    let taggedAddressFetched = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\n    );\n    let tags =\n      taggedAddressFetched && taggedAddressFetched.length > 0\n        ? JSON.parse(taggedAddressFetched)\n        : \"\";\n    const tagValue =\n      tags && tags.length > 0\n        ? tags?.filter(\n            (obj) => obj.address === data.address && obj.userId == data.userId\n          )\n        : \"\";\n    if (tagValue && tagValue.length) {\n      setAddressTag(tagValue[0]);\n      setIsTag(true);\n    }\n  };\n\n  const tagUsingAddressTo = async (response) => {\n    const data = {\n      address: response.to,\n      userId: sessionManager.getDataFromCookies(\"userId\"),\n    };\n    // let [errors, tagUsingAddressHashResponse] = await Utils.parseResponse(\n    //     TransactionService.getUserAddressTagUsingAddressHash(data)\n    // );\n    // if (errors || !tagUsingAddressHashResponse) return;\n\n    let taggedAddressFetched = localStorage.getItem(\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\n    );\n    let tags =\n      taggedAddressFetched && taggedAddressFetched.length > 0\n        ? JSON.parse(taggedAddressFetched)\n        : \"\";\n    const tagValue =\n      tags && tags.length > 0\n        ? tags?.filter(\n            (obj) => obj.address === data.address && obj.userId == data.userId\n          )\n        : \"\";\n    if (tagValue && tagValue.length) {\n      setAddressTagTo(tagValue[0]);\n      setIsTagTo(true);\n    }\n  };\n\n  // ---------------------------------------> fetch from/to address tag (local-storage) <------------------------------------//\n  var addrTagFrom = fromAddress;\n  var addrTagTo = toAddress;\n\n  let taggedAddress = localStorage.getItem(\n    sessionManager.getDataFromCookies(\"userId\") +\n      cookiesConstants.USER_TAGGED_ADDRESS\n  );\n  let tags =\n    taggedAddress && taggedAddress.length > 0 ? JSON.parse(taggedAddress) : \"\";\n  var tagValueFrom =\n    tags && tags.length > 0\n      ? tags?.filter(\n          (obj) => obj.address === addrTagFrom && obj.userId === userInfo.sub\n        )\n      : \"\";\n  var tagValueTo =\n    tags && tags.length > 0\n      ? tags?.filter(\n          (obj) => obj.address === addrTagTo && obj.userId === userInfo.sub\n        )\n      : \"\";\n\n  // ---------------------------------------> fetch pvt note from (local-storage) <--------------------------------------------//\n\n  var pvtNotehash = `${hash}`;\n  let pvtNoteLocal = localStorage.getItem(\n    cookiesConstants.USER_TRASACTION_LABELS\n  );\n\n  let pvtNote =\n    pvtNoteLocal && pvtNoteLocal.length > 0 ? JSON.parse(pvtNoteLocal) : \"\";\n  var pvtNoteValue =\n    pvtNote && pvtNote.length > 0\n      ? pvtNote?.filter(\n          (obj) =>\n            obj.transactionHash === pvtNotehash && obj.userId === userInfo.sub\n        )\n      : \"\";\n\n  const handleSeeMore = () => {\n    setSeeMore(true);\n  };\n  const handleSeeLess = () => {\n    setSeeMore(false);\n  };\n  const hashid = `A transaction hash is a unique character identifier that is generated whenever the transaction is executed. `;\n  const blocknumber = ` The number of block in which transaction was recorded. Block confirmation indicate how many blocks since the transaction is mined.  `;\n  const timestamp = ` The date and time at which a transaction is mined. `;\n  const from = ` The sending party of the transaction(could be from a contact address)  `;\n  const to = ` The receiving party of the transaction(could be from a contact address) `;\n  const value = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\n  const txnfee = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\n  const gasprovided = `Maximum amount of gas provided for the transaction. For normal XDC transfers the value is 21,000. For contract this value is higher an bound by block gas limit. `;\n  const gasprice = ` Cost per unit of gas specified for the transaction, in XDC and Gwei. The higher the gas price the higher hance of getting included in a block `;\n  const gasused = ` The exact unit of gas that was used for the transactions. `;\n  const nounced = ` Sequential running number for an address, beginning with 0 for the first transaction. For example, if the nonce of a transaction is 10, it would be 11th transaction sent from the sender's address. `;\n  const input = `Additional information that is required for the transaction `;\n  const transferToken = `The value being transacted in XDC and fiat value. Note: You can click the fiat value (if available) to see historical value at the time of transaction.`;\n  const privatenote = `User can add a private note to the transaction. Private note is being saved in the local storage of the device.`;\n\n  function _handleChange(event) {\n    setAmount(event?.target?.value);\n    window.localStorage.setItem(\"currency\", event?.target?.value);\n  }\n\n  let CurrencyValue = window.localStorage.getItem(\"currency\");\n  const currencySymbol =\n    CurrencyValue === \"INR\" ? \"₹\" : CurrencyValue === \"USD\" ? \"$\" : \"€\";\n  const valueFetch =\n    CurrencyValue === \"INR\" ? price : CurrencyValue === \"USD\" ? price : price;\n  const txfee = !transactions\n    ? 0\n    : Utils.decimalDivison(transactions?.gasPrice * transactions?.gasUsed, 8);\n\n  const txnFee = parseFloat(txfee)?.toFixed(8).replace(/0+$/, \"\");\n\n  let txnFee1 = txnFee.toString().split(\".\")[0];\n  let txnFee2 = txnFee.toString().split(\".\")[1];\n\n  const transactionFetch =\n    CurrencyValue === \"INR\"\n      ? txfee * price\n      : CurrencyValue === \"USD\"\n      ? txfee * price\n      : txfee * price;\n  const fetchtxn = !transactionFetch\n    ? 0\n    : parseFloat(transactionFetch)?.toFixed(8);\n  let fetchtxn1 = fetchtxn.toString().split(\".\")[0];\n  let fetchtxn2 = fetchtxn.toString().split(\".\")[1];\n\n  const gasP = !transactions.gasPrice\n    ? 0\n    : Utils.decimalDivison(transactions.gasPrice, 12);\n  const gasPrice = parseFloat(gasP)?.toFixed(12).replace(/0+$/, \"\");\n  let gasPrice1 = gasPrice.toString().split(\".\")[0];\n  let gasPrice2 = gasPrice.toString().split(\".\")[1];\n  let transactionValue =\n    transactions?.value <\n    100000000000 /*there are some transactions which are not in gwei in ou DB*/\n      ? transactions?.value * 1000000000000000000\n      : transactions?.value;\n\n  const valueDiv =\n    transactions?.value > 0 && transactions?.value < 1\n      ? (valueFetch * transactionValue).toFixed(8)\n      : Utils.decimalDivison(valueFetch * transactionValue, 8);\n  let ValueMain =\n    transactions?.value > 0 && transactions?.value < 1\n      ? transactions?.value\n      : Utils.decimalDivison(transactionValue, 8);\n  let bx = latestBlock[0]?.number - transactions?.blockNumber;\n  const getHoursAgo = (date) => {\n    let today = Date.now();\n    let difference = today - date;\n    var daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    difference -= daysDifference * 1000 * 60 * 60 * 24;\n    var hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    difference -= hoursDifference * 1000 * 60 * 60;\n    var minutesDifference = Math.floor(difference / 1000 / 60);\n    difference -= minutesDifference * 1000 * 60;\n    var secondsDifference = Math.floor(difference / 1000);\n    if (\n      secondsDifference < 60 &&\n      minutesDifference === 0 &&\n      hoursDifference === 0 &&\n      daysDifference === 0\n    ) {\n      if (secondsDifference === 1) return secondsDifference + \" second ago \";\n      else return secondsDifference + \" seconds ago \";\n    }\n    if (\n      minutesDifference < 60 &&\n      hoursDifference === 0 &&\n      daysDifference === 0\n    ) {\n      if (minutesDifference === 1) return minutesDifference + \" minute ago \";\n      return minutesDifference + \" minutes ago\";\n    }\n    if (hoursDifference < 60 && daysDifference === 0) {\n      if (hoursDifference === 1) return hoursDifference + \" hour ago \";\n      return hoursDifference + \" hours ago\";\n    }\n    if (daysDifference < 30) {\n      if (hoursDifference === 1) return hoursDifference + \" day ago \";\n      return daysDifference + \" days ago\";\n    }\n  };\n  const timezone = useSelector((state) => state.timezone);\n\n  return (\n    <div className={classes.mainContainer}>\n      <Tokensearchbar />\n\n      <div className={classes.root}>\n        <Grid>\n          <div className={isLoading == true ? \"cover-spin-2\" : \"\"}>\n            <div className={isLoading == true ? \"cover-spin\" : \"\"}>\n              <Container>\n                <Heading>Transaction Details</Heading>\n              </Container>\n\n              <Div>\n                {transactions ? (\n                  transactions.status == true ? (\n                    <StatusContainer>\n                      <StatusContainerInside>\n                        <StatusImgContainer>\n                          <StatusImg src=\"/images/success.svg\"></StatusImg>\n                        </StatusImgContainer>\n                        <StatusTextSuccess>Success</StatusTextSuccess>\n                      </StatusContainerInside>\n                    </StatusContainer>\n                  ) : (\n                    <StatusContainer>\n                      <StatusImgContainer>\n                        <StatusImg src=\"/images/failed.svg\"></StatusImg>\n                      </StatusImgContainer>\n                      <StatusTextFailed>Failed</StatusTextFailed>\n                    </StatusContainer>\n                  )\n                ) : null}\n                <TxnDetailsRightContainer>\n                  <TxnDetailsRightTopContainer>\n                    <Container>\n                      <Tooltip align=\"right\" title={hashid}>\n                        <ImageView src={\"/images/info.svg\"} />\n                      </Tooltip>\n\n                      <Hash>Transaction Hash</Hash>\n                    </Container>\n                    <DetailsMiddleContainer isTextArea={false}>\n                      <ContentHash>\n                        {hash}\n                        {/* {width > 1240\n                        ? hash\n                        : width <= 1240 && width >= 768\n                          ? Utils.shortenHashTab(hash)\n                          : hash} */}\n                      </ContentHash>\n                      <span\n                        className={\n                          width >= 768\n                            ? \"copyEditContainer2\"\n                            : \"copyEditContainerMobile\"\n                        }\n                      >\n                        <CopyToClipboard\n                          text={hash}\n                          onCopy={() => setCopiedText(hash)}\n                        >\n                          <Tooltip\n                            title={\n                              copiedText === hash\n                                ? \"Copied\"\n                                : \"Copy To Clipboard\"\n                            }\n                            placement=\"top\"\n                          >\n                            <button\n                              className={\n                                width > 1240\n                                  ? \"copyToClipboardHash\"\n                                  : \"copyToClipboardHashMobile\"\n                              }\n                            >\n                              <img\n                                className={\n                                  width > 1240\n                                    ? \"copy-icon\"\n                                    : width < 768\n                                    ? \"copyIconHashMobile\"\n                                    : \"copyIconHash\"\n                                }\n                                src={\"/images/copy-grey.svg\"}\n                              />\n                            </button>\n                          </Tooltip>\n                        </CopyToClipboard>\n                        {userInfo ? (\n                          <>\n                            {\n                              <PrivateNote\n                                open={dialogPvtNoteIsOpen}\n                                getListOfTxnLabel={getListOfTxnLabel}\n                                getTotalCountTxnLabel={() => {}}\n                                onClose={closeDialogPvtNote}\n                                hash={hash}\n                                pvtNote={privateNote[0]?.trxLable}\n                              />\n                            }\n                            {\n                              <Tooltip\n                                title=\"Add Transaction Label\"\n                                placement=\"top\"\n                              >\n                                <img\n                                  className={\n                                    width > 1240 ? \"edit-icon\" : \"editIconHash\"\n                                  }\n                                  onClick={openDialogPvtNote}\n                                  src={require(\"../../../src/assets/images/label.svg\")}\n                                />\n                              </Tooltip>\n                            }\n                          </>\n                        ) : (\n                          \"\"\n                        )}\n                      </span>\n                    </DetailsMiddleContainer>\n                  </TxnDetailsRightTopContainer>\n                  <TxnDetailsRightBottomContainer>\n                    <DetailsContainer>\n                      <Container>\n                        <Tooltip title={value}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n                        <Hash>Transaction Value</Hash>\n                      </Container>\n                      <Tooltip title={transactions?.value}>\n                        <DetailsMiddleContainer isTextArea={false}>\n                          {ValueMain}&nbsp;XDC{\" \"}\n                          {!valueDiv\n                            ? \" \"\n                            : \"(\" + (currencySymbol + valueDiv) + \")\"}\n                        </DetailsMiddleContainer>\n                      </Tooltip>\n                    </DetailsContainer>\n                    {/* ------------------------------------------------time stamp------------------------------------- */}\n                    <DetailsContainer className=\"mobileTimeStamp\">\n                      <Container>\n                        <Tooltip title={timestamp}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n\n                        <Hash>Transaction Timestamp</Hash>\n                      </Container>\n                      <DetailsMiddleContainer isTextArea={false}>\n                        {/*============================================= {\" \"}\n                        {moment(transactions.timestamp * 1000).format(\n                          \"MMMM Do YYYY, h:mm:ss a\"\n                        )}{\" \"}============================ */}\n                        {`${\n                          (transactions?.timestamp &&\n                            moment(transactions.timestamp * 1000)\n                              .tz(timezone)\n                              .format(\"MMM DD, YYYY, hh:mm A\")) ||\n                          \"\"\n                        } ${\n                          (timezone && Utility.getUtcOffset(timezone)) || \"\"\n                        }`}\n                        {/*============================================================================({getHoursAgo(transactions.timestamp * 1000)})==================================*/}\n                      </DetailsMiddleContainer>\n                    </DetailsContainer>\n                    {/* ------------------------------------------------------block-------------------------------  */}\n                    <DetailsContainer>\n                      <Container>\n                        <Tooltip title={blocknumber}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n\n                        <Hash>Block Number</Hash>\n                      </Container>\n                      <DetailsMiddleContainer isTextArea={false}>\n                        <Content>\n                          <a\n                            className=\"linkTableDetails-transaction\"\n                            href={\"/block-details/\" + transactions.blockNumber}\n                          >\n                            {\" \"}\n                            {transactions.blockNumber\n                              ? transactions.blockNumber\n                              : \"\"}\n                          </a>\n                          &nbsp;{\" \"}\n                          <BlockConfirmation>\n                            {bx} Blocks Confirmation\n                          </BlockConfirmation>\n                        </Content>\n                      </DetailsMiddleContainer>\n                    </DetailsContainer>\n                  </TxnDetailsRightBottomContainer>\n                </TxnDetailsRightContainer>\n              </Div>\n\n              <DivMiddleContainer>\n                {/* -----------------------------------------------from---------------------------- */}\n                <DivMiddle>\n                  <Container>\n                    <Tooltip title={from}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n\n                    <Hash>From</Hash>\n                  </Container>\n                  <DetailsMiddleContainer isTextArea={false}>\n                    <Content>\n                      {\" \"}\n                      <div style={{ display: width >= 768 ? \"flex\" : \"block\" }}>\n                        <a\n                          className=\"linkTableDetails-transaction\"\n                          href={\"/address-details/\" + transactions.from}\n                        >\n                          {transactions.from}\n                        </a>\n                        <div\n                          className={\n                            width < 768\n                              ? \"fromContainerMobile\"\n                              : \"fromContainer\"\n                          }\n                        >\n                          <CopyToClipboard\n                            text={transactions.from}\n                            onCopy={() => setCopiedText(transactions.from)}\n                          >\n                            <Tooltip\n                              title={\n                                copiedText === transactions.from\n                                  ? \"Copied\"\n                                  : \"Copy To Clipboard\"\n                              }\n                              placement=\"top\"\n                            >\n                              <button\n                                className={\n                                  width > 1240\n                                    ? \"copyToClipboardHash\"\n                                    : \"copyToClipboardFromMobile\"\n                                }\n                              >\n                                <img\n                                  className={\n                                    width > 1240\n                                      ? \"copy-icon\"\n                                      : width < 768\n                                      ? \"copy-icon-from\"\n                                      : \"copy-icon-from-tab\"\n                                  }\n                                  src={\"/images/copy-grey.svg\"}\n                                />\n                              </button>\n                            </Tooltip>\n                          </CopyToClipboard>\n                        </div>\n                      </div>\n                    </Content>\n                    <TabTag>\n                      {width >= 768 && width <= 1240 ? (\n                        userInfo ? (\n                          <>\n                            {\n                              <PrivateAddressTag\n                                open={dialogPvtTagIsOpen}\n                                onClose={closeDialogPvtTag}\n                                fromAddr={transactions.from}\n                                value={dialogValue}\n                                hash={hash}\n                              />\n                            }\n\n                            {tagValueFrom && tagValueFrom?.length > 0 ? (\n                              <Tag>\n                                {\n                                  tagValueFrom[tagValueFrom?.length - 1]\n                                    ?.tagName\n                                }\n                              </Tag>\n                            ) : (\n                              <Tooltip\n                                title=\"Add a new Address Tag\"\n                                placement=\"top\"\n                              >\n                                {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                                <AddTagContainer onClick={openDialogPvtTag}>\n                                  <ImgAddTag>\n                                    <img src=\"/images/add-tag-white.svg\" />\n                                  </ImgAddTag>\n                                  <AddTagtext>Add Tag</AddTagtext>\n                                </AddTagContainer>\n                              </Tooltip>\n                            )}\n                          </>\n                        ) : (\n                          \"\"\n                        )\n                      ) : (\n                        \"\"\n                      )}\n                    </TabTag>\n                  </DetailsMiddleContainer>\n                  <MobileDesktopTag>\n                    {width < 768 || width > 1240 ? (\n                      userInfo ? (\n                        <>\n                          {\n                            <PrivateAddressTag\n                              open={dialogPvtTagIsOpen}\n                              onClose={closeDialogPvtTag}\n                              fromAddr={transactions.from}\n                              value={dialogValue}\n                              hash={hash}\n                            />\n                          }\n\n                          {tagValueFrom && tagValueFrom?.length ? (\n                            <Tag>\n                              {tagValueFrom[tagValueFrom?.length - 1]?.tagName}\n                            </Tag>\n                          ) : (\n                            <Tooltip\n                              title=\"Add a new Address Tag\"\n                              placement=\"top\"\n                            >\n                              {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                              <AddTagContainer onClick={openDialogPvtTag}>\n                                <ImgAddTag>\n                                  <img src=\"/images/add-tag-white.svg\" />\n                                </ImgAddTag>\n                                <AddTagtext>Add Tag</AddTagtext>\n                              </AddTagContainer>\n                            </Tooltip>\n                          )}\n                        </>\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </MobileDesktopTag>\n                </DivMiddle>\n                <DivCircle>\n                  <ImgNextArrow>\n                    <img src=\"/images/next-arrow.svg\" />\n                  </ImgNextArrow>\n                </DivCircle>\n                {/* --------------------------------------------------------------------to--------------------- */}\n                <DivMiddle>\n                  <Container>\n                    <Tooltip title={to}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n\n                    <Hash>To</Hash>\n                  </Container>\n                  <DetailsMiddleContainer isTextArea={false}>\n                    <Content>\n                      <span\n                        style={{ display: width >= 768 ? \"flex\" : \"block\" }}\n                      >\n                        <a\n                          className=\"linkTableDetails-transaction\"\n                          href={\"/address-details/\" + transactions.to}\n                        >\n                          {transactions.to\n                            ? transactions.to\n                            : transactions.contractAddress}\n                        </a>\n                        <div\n                          className={\n                            width < 768\n                              ? \"fromContainerMobile\"\n                              : \"fromContainer\"\n                          }\n                        >\n                          <CopyToClipboard\n                            text={transactions.to}\n                            onCopy={() => setCopiedText(transactions.to)}\n                          >\n                            <Tooltip\n                              title={\n                                copiedText === transactions.to\n                                  ? \"Copied\"\n                                  : \"Copy To Clipboard\"\n                              }\n                              placement=\"top\"\n                            >\n                              <button\n                                className={\n                                  width > 1240\n                                    ? \"copyToClipboardHash\"\n                                    : \"copyToClipboardFromMobile\"\n                                }\n                              >\n                                <img\n                                  className={\n                                    width > 1240\n                                      ? \"copy-icon\"\n                                      : width < 768\n                                      ? \"copy-icon-from\"\n                                      : \"copy-icon-from-tab\"\n                                  }\n                                  src={\"/images/copy-grey.svg\"}\n                                />\n                              </button>\n                            </Tooltip>\n                          </CopyToClipboard>\n                        </div>\n                      </span>\n                    </Content>\n                    <TabTag>\n                      {width >= 768 && width <= 1240 ? (\n                        userInfo ? (\n                          <>\n                            {\n                              <PrivateAddressTag\n                                open={dialogPvtTagIsOpen2}\n                                onClose={closeDialogPvtTag2}\n                                toAddr={transactions.to}\n                                value={dialogValue2}\n                                hash={hash}\n                              />\n                            }\n                            {tagValueTo && tagValueTo?.length ? (\n                              <Tag>\n                                {tagValueTo[tagValueTo?.length - 1]?.tagName}\n                              </Tag>\n                            ) : (\n                              <Tooltip\n                                title=\"Add a new Address Tag\"\n                                placement=\"top\"\n                              >\n                                {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag2}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                                <AddTagContainer onClick={openDialogPvtTag2}>\n                                  <ImgAddTag>\n                                    <img src=\"/images/add-tag-white.svg\" />\n                                  </ImgAddTag>\n                                  <AddTagtext>Add Tag</AddTagtext>\n                                </AddTagContainer>\n                              </Tooltip>\n                            )}\n                          </>\n                        ) : (\n                          \"\"\n                        )\n                      ) : (\n                        \"\"\n                      )}\n                    </TabTag>\n                  </DetailsMiddleContainer>\n                  <MobileDesktopTag>\n                    {width < 768 || width > 1240 ? (\n                      userInfo ? (\n                        <>\n                          {\n                            <PrivateAddressTag\n                              open={dialogPvtTagIsOpen2}\n                              onClose={closeDialogPvtTag2}\n                              toAddr={transactions.to}\n                              value={dialogValue2}\n                              hash={hash}\n                            />\n                          }\n                          {tagValueTo && tagValueTo?.length ? (\n                            <Tag>\n                              {tagValueTo[tagValueTo?.length - 1]?.tagName}\n                            </Tag>\n                          ) : (\n                            <Tooltip\n                              title=\"Add a new Address Tag\"\n                              placement=\"top\"\n                            >\n                              {/* <img\n                                    className={\n                                      width > 1240\n                                        ? \"edit1-icon\"\n                                        : \"edit1-icon-from\"\n                                    }\n                                    onClick={openDialogPvtTag2}\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\n                                  /> */}\n                              <AddTagContainer onClick={openDialogPvtTag2}>\n                                <ImgAddTag>\n                                  <img src=\"/images/add-tag-white.svg\" />\n                                </ImgAddTag>\n                                <AddTagtext>Add Tag</AddTagtext>\n                              </AddTagContainer>\n                            </Tooltip>\n                          )}\n                        </>\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </MobileDesktopTag>\n                </DivMiddle>\n              </DivMiddleContainer>\n\n              <Div__>\n                {/* -------------------------------------------------------------txn fee----------------------- */}\n                <Spacing>\n                  <Container>\n                    <Tooltip title={txnfee}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n\n                    <Hash>Transaction Fee</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    <Content>\n                      {\" \"}\n                      {txnFee2 == 0 ? (\n                        <span>{txnFee1}</span>\n                      ) : (\n                        <span>\n                          {txnFee1}\n                          {\".\"}\n                          <span style={{ color: \"#9FA9BA\" }}>{txnFee2}</span>\n                        </span>\n                      )}\n                      &nbsp;XDC ({currencySymbol}\n                      {fetchtxn2 == null ? (\n                        <span>{fetchtxn1}</span>\n                      ) : (\n                        <span>\n                          {fetchtxn1}\n                          {\".\"}\n                          <span style={{ color: \"#9FA9BA\" }}>{fetchtxn2}</span>\n                        </span>\n                      )}\n                      )\n                    </Content>\n                  </MiddleContainer>\n                </Spacing>\n                <Spacing>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasprovided}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Gas Provided</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    {format({})(transactions.gas)}\n                  </MiddleContainer>\n                </Spacing>\n                <Spacing>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasprice}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Avg Transaction Fee</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    {gasPrice2 == 0 ? (\n                      <span>{gasPrice1}</span>\n                    ) : (\n                      <span>\n                        {gasPrice1}\n                        {\".\"}\n                        <span style={{ color: \"#9FA9BA\" }}>{gasPrice2}</span>\n                      </span>\n                    )}\n                    {/* <Content> {gasP}</Content> */}\n                  </MiddleContainer>\n                </Spacing>\n                <Spacing>\n                  <Container>\n                    <Tooltip align=\"right\" title={gasused}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Gas Used</Hash>\n                  </Container>\n                  <MiddleContainer isTextArea={false}>\n                    <Content>{format({})(transactions?.gasUsed)}</Content>\n                  </MiddleContainer>\n                </Spacing>\n                {!isSeeMore ? (\n                  <Spacing>\n                    <SeeMoreContainer onClick={handleSeeMore}>\n                      <SeeMoreText>See more</SeeMoreText>\n                      <ImgSeeMore src=\"/images/see-more.svg\"></ImgSeeMore>\n                    </SeeMoreContainer>\n                  </Spacing>\n                ) : (\n                  <>\n                    <Spacing>\n                      <Container>\n                        <Tooltip align=\"right\" title={nounced}>\n                          <ImageView src={\"/images/info.svg\"} />\n                        </Tooltip>\n                        <Hash>Nonce</Hash>\n                      </Container>\n                      <MiddleContainer isTextArea={false}>\n                        <Content> {transactions.nonce}</Content>\n                      </MiddleContainer>\n                    </Spacing>\n                    <SpacingInputData>\n                      <Container>\n                        <Tooltip align=\"right\" title={input}>\n                          <ImageViewInputData src={\"/images/info.svg\"} />\n                        </Tooltip>\n                        <HashInputData>Input Data</HashInputData>\n                      </Container>\n                      <MiddleContainerInputData isTextArea={true}>\n                        <div className=\"transaction-details-input-data\">\n                          <textarea\n                            className=\"text-area-transaction\"\n                            readOnly\n                            value={transactions.input}\n                          />\n                        </div>\n                      </MiddleContainerInputData>\n                    </SpacingInputData>\n                    <Spacing>\n                      <SeeMoreContainer onClick={handleSeeLess}>\n                        <SeeMoreText>See Less</SeeMoreText>\n                        <ImgSeeLess src=\"/images/see-more.svg\"></ImgSeeLess>\n                      </SeeMoreContainer>\n                    </Spacing>\n                  </>\n                )}\n                <SpacingPrivateNode>\n                  <Container>\n                    <Tooltip align=\"right\" title={privatenote}>\n                      <ImageView src={\"/images/info.svg\"} />\n                    </Tooltip>\n                    <Hash>Private Note</Hash>\n                  </Container>\n                  <MiddleContainerPrivateNote>\n                    {!userInfo ? (\n                      <PrivateText>\n                        {\n                          <LoginDialog\n                            open={loginDialogIsOpen}\n                            onClose={closeLoginDialog}\n                            dataHashOrAddress={hash}\n                          />\n                        }\n                        To access the private note feature, you must be\n                        <a\n                          className=\"linkTableDetails-transaction\"\n                          style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\n                          onClick={openLoginDialog}\n                        >\n                          Logged In\n                        </a>\n                      </PrivateText>\n                    ) : privateNote ? (\n                      <span>{privateNote?.trxLable}</span>\n                    ) : (\n                      <AddLabel>\n                        <AddLabelText>\n                          Add private note by clicking on this icon\n                        </AddLabelText>\n                        {\n                          <PrivateNote\n                            open={dialogPvtNoteIsOpen}\n                            getListOfTxnLabel={getListOfTxnLabel}\n                            getTotalCountTxnLabel={() => {}}\n                            onClose={closeDialogPvtNote}\n                            hash={hash}\n                            pvtNote={\n                              pvtNoteValue[pvtNoteValue?.length - 1]?.trxLable\n                            }\n                          />\n                        }\n                        {\n                          <Tooltip\n                            title=\"Add Transaction Label\"\n                            placement=\"top\"\n                          >\n                            <img\n                              className={\n                                width > 1240 ? \"edit-icon1\" : \"editIconHash\"\n                              }\n                              onClick={openDialogPvtNote}\n                              src={require(\"../../../src/assets/images/label.svg\")}\n                            />\n                          </Tooltip>\n                        }\n                      </AddLabel>\n                    )}\n                  </MiddleContainerPrivateNote>\n                </SpacingPrivateNode>\n              </Div__>\n              <br />\n              <br />\n            </div>\n          </div>\n        </Grid>\n      </div>\n\n      <FooterComponent _handleChange={_handleChange} currency={amount} />\n    </div>\n  );\n}\nconst Input = styled.input`\n  border-radius: 5px;\n  border: solid 1px #e3e7eb;\n  background-color: #fff;\n  font-family: Inter;\n  font-size: 14px;\n\n  text-align: left;\n  color: #2a2a2a;\n`;\nconst Content = styled.div`\n  font-family: Inter;\n  font-size: 0.935rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  line-height: 22px;\n  display: flex;\n  align-items: center;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    line-height: 18px !important;\n    word-break: break-all;\n  }\n  @media (min-width: 768px) and (max-width: 1241px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n  }\n`;\nconst ContentHash = styled.div`\n  font-family: Inter;\n  font-size: 0.935rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  line-height: 22px;\n  display: flex;\n  align-items: center;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n    line-height: 18px !important;\n    word-break: break-all;\n  }\n  @media (min-width: 768px) and (max-width: 1241px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    width: 33rem;\n  }\n`;\nconst TextArea = styled.textarea`\n  opacity: 0.33;\n  border-radius: 4px;\n  border: solid 1px #9fa9ba;\n  background-color: #dee0e3;\n  width: 100%;\n  font-family: Inter;\n  font-size: 14px;\n  float: left;\n  padding: 14px;\n  overflow-y: auto;\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 110%;\n  }\n`;\nconst PrivateText = styled.p`\n  display: contents;\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: contents;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    display: block;\n    margin-bottom: -5px;\n  }\n`;\nconst Div__ = styled.div`\n  width: 75.125rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  padding: 0.563rem;\n  padding-left: 27px;\n  padding-right: 25px;\n  margin-top: 35px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    max-width: 22.563rem;\n    width: 100%;\n    // height: 61rem;\n    padding-left: 10px;\n    padding-right: 10px;\n    margin-bottom: 35px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 41.5rem;\n    height: unset;\n    margin-bottom: 54px;\n  }\n`;\nconst MiddleContainerPrivateNote = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  border-radius: 4px;\n  border: solid 1px #9fa9ba;\n  height: auto;\n  padding: 1px 9px 1px 18px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    margin-top: 10px;\n    font-size: 0.875rem;\n    text-align: left;\n\n    opacity: 1;\n    word-break: break-all;\n    margin-left: unset;\n    line-height: 1.5;\n    height: auto;\n    padding: 1px 9px 1px 6px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    text-align: left;\n\n    opacity: 1;\n    margin-left: 100px;\n  }\n`;\nconst MiddleContainerInputData = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    text-align: left;\n\n    opacity: 1;\n    word-break: break-all;\n    margin-left: unset;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    opacity: 1;\n    margin-left: 100px;\n  }\n`;\n\nconst MiddleContainer = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    word-break: break-all;\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\n    margin-left: unset;\n    margin-top: 10px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    margin-left: 100px;\n  }\n`;\n\nconst MiddleContainer1 = styled.div`\n  font-family: Inter;\n  font-size: 0.938rem;\n\n  text-align: left;\n  color: #3a3a3a;\n  margin-left: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 0.875rem;\n    word-break: break-all;\n    text-align: left;\n\n    color: #3a3a3a;\n    opacity: 1;\n    word-break: break-all;\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\n    margin-left: unset;\n    margin-top: 10px;\n    display: block;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-size: 0.875rem;\n    // word-break: break-all;\n    // text-align: left;\n    //\n    // color: #3a3a3a;\n    // opacity: 1;\n    // display: block;\n    margin-left: 64px;\n  }\n`;\n\nconst HashInputData = styled.span`\n  color: var(--unnamed-color-2a2a2a);\n  white-space: nowrap;\n  font-family: \"Inter\", sans-serif;\n  font-weight: 600;\n  font-size: 15px;\n\n  color: #2a2a2a;\n  padding-bottom: 30px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.75rem;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n    padding-bottom: 20px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n  }\n`;\n\nconst Hash = styled.span`\n  white-space: nowrap;\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 15px;\n\n  color: #252525;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.75rem;\n    text-align: left;\n\n    color: #252525;\n    opacity: 1;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-family: \"Inter\", sans-serif;\n    font-weight: 600;\n    font-size: 0.875rem;\n    text-align: left;\n\n    color: #2a2a2a;\n    opacity: 1;\n  }\n`;\nconst SpacingInputData = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  padding: 13px 0 8px 0;\n  @media (max-width: 767px) {\n    display: block;\n    padding: 11px 6px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    // height: 6.25rem;\n  }\n`;\nconst SpacingPrivateNode = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  // border-bottom: solid 1px #e3e7eb;\n  padding: 15px 0 6px 0;\n\n  @media (max-width: 767px) {\n    display: block;\n    padding: 11px 6px;\n    border-bottom: none;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n  }\n`;\nconst Spacing = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  height: 4.063rem;\n\n  @media (max-width: 767px) {\n    display: block;\n    height: auto;\n    padding: 12px 0 17px 0;\n  }\n`;\nconst SpacingHash = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  border-bottom: solid 1px #e3e7eb;\n  height: 4.063rem;\n\n  @media (max-width: 767px) {\n    display: block;\n    padding: 11px 6px;\n    height: auto;\n  }\n`;\nconst HashDiv = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  padding: 16px 33px;\n\n  @media (max-width: 767px) {\n    display: block;\n    padding-left: 10px;\n    // padding-right: 85px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    padding: 14px 30px;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n\n  width: 100%;\n  align-items: center;\n  max-width: 165px;\n`;\nconst SecondContainer = styled.div`\n  display: flex;\n  align-items: center;\n  @media (max-width: 767px) {\n  }\n`;\n\nconst Div = styled.div`\n  display: flex;\n  width: 75.125rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  margin-bottom: 15px;\n  // @media (min-width: 0px) and (max-width: 767px) {\n  //   width: 22.563rem;\n  //   height: 6.813rem;\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    max-width: 41.5rem;\n    width: 100%;\n    display: block;\n  }\n`;\nconst DivMiddleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 35px;\n  margin-bottom: 36px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    margin-top: 25px;\n    margin-bottom: 25px;\n  }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    display: block;\n  }\n`;\nconst DivMiddle = styled.div`\n  max-width: 35.625rem;\n  width: 100%;\n  padding: 15px 25px;\n  border-radius: 12px;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  // margin-bottom: 15px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    padding: 10px;\n  }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    max-width: 41.5rem;\n    width: 100%;\n  }\n`;\n\nconst Heading = styled.span`\n  white-space: nowrap;\n  color: #2a2a2a;\n  box-shadow: none;\n  font-family: \"Inter\", sans-serif;\n  font-weight: 600;\n  font-size: 1.5rem;\n  margin-top: 46px;\n  margin-bottom: 12px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-family: Inter;\n    font-size: 14px;\n    text-align: left;\n    color: #252525;\n    margin-top: 12px;\n    margin-bottom: 17px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    font-family: Inter;\n    font-size: 18px;\n    text-align: left;\n    color: #2a2a2a;\n    margin-top: 19px;\n    margin-bottom: 28px;\n  }\n`;\nconst ImageViewInputData = styled.img`\n  width: 22px;\n  margin-right: 15px;\n  padding-bottom: 30px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    width: 22px;\n    padding-bottom: 17px;\n    margin-left: -4px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 22px;\n  }\n`;\nconst ImageView = styled.img`\n  width: 22px;\n  margin-right: 15px;\n  cursor: pointer;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  // @media (min-width: 768px) and (max-width: 1240px) {\n  //   width: 0.875rem;\n  //   height: 0.875rem;\n  // }\n`;\nconst StatusContainer = styled.div`\n  max-width: 10.75rem;\n  width: 100%;\n  border-right: 1px solid #e3e7eb;\n  // @media (min-width: 0px) and (max-width: 767px) {\n  //   width: 14px;\n  //   height: 14px;\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    max-width: 41.5rem;\n    width: 100%;\n    border-right: none;\n    border-bottom: 1px solid #e3e7eb;\n    padding-bottom: 30px;\n  }\n`;\nconst StatusImgContainer = styled.div`\n  width: 58px;\n  margin: 44px auto 10px auto;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    margin: 21px auto 10px auto;\n  }\n`;\nconst StatusContainerInside = styled.div`\n  width: 100px;\n  margin: auto;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    padding-top: 1px;\n  }\n`;\nconst StatusImg = styled.img`\n  width: 58px;\n  align-item: center;\n`;\nconst StatusTextSuccess = styled.div`\n  font-family: Inter;\n  font-size: 14px;\n\n  text-align: center;\n  color: #03be46;\n`;\nconst StatusTextFailed = styled.div`\n  font-family: Inter;\n  font-size: 14px;\n\n  text-align: center;\n  color: red;\n`;\nconst SeeMoreContainer = styled.div`\n  display: flex;\n  cursor: pointer;\n`;\nconst SeeMoreText = styled.div`\n  font-family: Inter;\n  font-size: 15px;\n  font-weight: 600;\n\n  color: #4878ff;\n  margin-left: 4px;\n  margin-right: 5px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    font-size: 13px;\n  }\n`;\nconst ImgSeeMore = styled.img`\n  display: flex;\n  @media (min-width: 0px) and (max-width: 767px) {\n    height: 15px;\n    margin-top: 2px;\n  }\n`;\nconst ImgSeeLess = styled.img`\n  display: flex;\n  transform: rotate(180deg);\n  @media (min-width: 0px) and (max-width: 767px) {\n    height: 15px;\n    margin-top: 2px;\n  }\n`;\nconst TxnDetailsRightContainer = styled.div`\n  width: 100%;\n  padding-left: 21px;\n  padding-right: 25px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`;\nconst TxnDetailsRightBottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  padding-top: 32px;\n  padding-bottom: 25px;\n  @media (min-width: 0px) and (max-width: 767px) {\n    flex-flow: row wrap;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    flex-flow: row wrap;\n    padding-top: 0px;\n    justify-content: flex-start;\n  }\n`;\nconst TxnDetailsRightTopContainer = styled.div`\n  width: 100%;\n  justify-content: space-between;\n  padding-top: 22px;\n`;\nconst DetailsContainer = styled.div`\n  display: block;\n  // @media (min-width: 0px) and (max-width: 767px) {\n\n  // }\n  @media (min-width: 0px) and (max-width: 1240px) {\n    padding-top: 29px;\n  }\n`;\nconst DetailsMiddleContainer = styled.div`\n  margin-left: 4px;\n  display: flex;\n  font-family: Inter;\n  font-size: 15px;\n\n  color: #3a3a3a;\n  @media (min-width: 768px) and (max-width: 1240px) {\n    justify-content: space-between;\n    padding-top: 10px;\n    margin-right: 22px;\n  }\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: block;\n    padding-top: 10px;\n    color: #2a2a2a;\n    padding-right: 15px;\n  }\n`;\nconst BlockConfirmation = styled.div`\n  margin-left: 4px;\n  display: flex;\n  font-family: Inter;\n  font-size: 13px;\n\n  color: #2149b9;\n  background-color: #e2eaff;\n  padding-left: 8px;\n  padding-right: 10px;\n  border-radius: 4px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n`;\n\nconst DivCircle = styled.div`\n  max-width: 36px;\n  height: 36px;\n  width: 100%;\n  border-radius: 50%;\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  margin: auto;\n\n  @media (min-width: 0px) and (max-width: 767px) {\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-top: 34px;\n    margin-bottom: 33px;\n  }\n`;\n\nconst ImgNextArrow = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 12px;\n  @media (min-width: 0px) and (max-width: 1240px) {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: 0px;\n    transform: rotate(90deg);\n    padding-left: 17px;\n  }\n`;\nconst AddTagContainer = styled.div`\n  background-color: #4878ff;\n  display: flex;\n  width: 95px;\n  padding: 3px 0 2px 6px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  margin-top: 2px;\n  margin-left: 4px;\n  cursor: pointer;\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\nconst ImgAddTag = styled.div`\n  margin-right: 4px;\n`;\nconst AddTagtext = styled.div`\n  color: #ffffff;\n`;\n\nconst Tag = styled.div`\n  padding: 2px 5px 3px 5px;\n  border-radius: 4px;\n  border: solid 1px #d2deff;\n  background-color: #eaf0ff;\n  font-size: 14px;\n  font-weight: 500;\n\n  text-align: center;\n  color: #4878ff;\n  width: fit-content;\n  margin-top: 2px;\n  margin-left: 4px;\n`;\nconst TabTag = styled.div`\n  width: 180px;\n`;\nconst MobileDesktopTag = styled.div`\n  padding-top: 10px;\n`;\nconst AddLabel = styled.div`\n  display: flex;\n`;\nconst AddLabelText = styled.div`\n  margin-right: 8px;\n`;\n"],"sourceRoot":""}