{"version":3,"sources":["modules/resp_transaction/resTransaction.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","marginRight","marginLeft","marginBottom","width","paddingLeft","paddingRight","rowDiv","alignItems","height","background","borderRadius","justifyContent","mainContainer","Transaction","_handleChange","classes","hash","useParams","useState","transactions","setTransactions","setIsPvtNote","privateNote","setPrivateNote","setAddressTag","setAddressTagTo","setIsTag","setIsTagTo","amount","setAmount","copiedText","setCopiedText","fromAddress","setFromAddress","toAddress","setToAddress","getWindowDimensions","window","innerWidth","innerHeight","React","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","dialogPvtTagIsOpen","setDialogPvtTagIsOpen","dialogValue","setDailogValue","dialogValue2","setDailogValue2","dialogPvtTagIsOpen2","setDialogPvtTagIsOpen2","dialogPvtNoteIsOpen","setDialogPvtNoteIsOpen","loginDialogIsOpen","setLoginDialogIsOpen","openDialogPvtTag","scrollTo","closeDialogPvtTag","openDialogPvtTag2","closeDialogPvtTag2","openDialogPvtNote","closeDialogPvtNote","isLoading","setLoading","timeStamp","setTimeStamp","price","setPrice","latestBlock","setLatestBlock","isSeeMore","setSeeMore","a","transactionDetail","getLatestBlock","privateNoteUsingHash","urlPath","Utils","parseResponse","TransactionService","getTransactionDetailsUsingHash","error","transactiondetailusinghash","length","undefined","timestamp","tagUsingAddressFrom","tagUsingAddressTo","from","to","BlockService","latestBlocks","ts","parseInt","getCoinMarketDetailForTransaction","CurrencyValue","userInfo","sessionManager","getDataFromCookies","data","transactionHash","userId","transactionLabel","localStorage","getItem","cookiesConstants","USER_TRASACTION_LABELS","JSON","parse","existingTransactionLabel","find","item","getListOfTxnLabel","response","address","taggedAddressFetched","USER_TAGGED_ADDRESS","tags","tagValue","filter","obj","addrTagFrom","addrTagTo","taggedAddress","tagValueFrom","sub","tagValueTo","pvtNotehash","pvtNoteLocal","pvtNote","pvtNoteValue","currencySymbol","valueFetch","txfee","decimalDivison","gasPrice","gasUsed","txnFee","parseFloat","toFixed","replace","txnFee1","toString","split","txnFee2","transactionFetch","fetchtxn","fetchtxn1","fetchtxn2","gasP","gasPrice1","gasPrice2","avgTxnFeeConverted","avgTxnFeeFetch","avgTxnFeeFetch1","avgTxnFeeFetch2","transactionValue","value","valueDiv","ValueMain","bx","number","blockNumber","timezone","useSelector","state","className","Container","Heading","Div","status","StatusContainer","StatusContainerInside","StatusImgContainer","StatusImg","src","StatusTextSuccess","StatusTextFailed","TxnDetailsRightContainer","TxnDetailsRightTopContainer","align","title","ImageView","Hash","DetailsMiddleContainer","isTextArea","ContentHash","text","onCopy","placement","open","getTotalCountTxnLabel","onClose","trxLable","onClick","require","TxnDetailsRightBottomContainer","DetailsContainer","moment","tz","format","Utility","getUtcOffset","Content","href","BlockConfirmation","DivMiddleContainer","DivMiddle","style","display","TabTag","fromAddr","Tag","tagName","AddTagContainer","ImgAddTag","AddTagtext","MobileDesktopTag","DivCircle","ImgNextArrow","contractAddress","toAddr","Div__","Spacing","MiddleContainer","color","gas","nonce","SpacingInputData","ImageViewInputData","HashInputData","MiddleContainerInputData","readOnly","input","SeeMoreContainer","SeeMoreText","ImgSeeLess","ImgSeeMore","SpacingPrivateNode","MiddleContainerPrivateNote","AddLabel","AddLabelText","PrivateText","dataHashOrAddress","cursor","event","target","setItem","currency","styled","div","textarea","p","props","span","img"],"mappings":"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","file":"static/js/41.eec3e5cd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n// import \"tippy.js/dist/tippy.css\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\nimport { useParams } from \"react-router\";\r\nimport { TransactionService, BlockService } from \"../../services\";\r\nimport Utils from \"../../utility\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport moment from \"moment\";\r\nimport PrivateAddressTag from \"../../modules/common/dialog/privateAddressTag\";\r\nimport PrivateNote from \"../../modules/common/dialog/privateNote\";\r\nimport { sessionManager } from \"../../managers/sessionManager\";\r\nimport LoginDialog from \"../explorer/loginDialog\";\r\nimport format from \"format-number\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Utility from \"../../utility\";\r\nimport { cookiesConstants } from \"../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"75.125rem\",\r\n\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: \"-39px\",\r\n\r\n    width: \"100%\",\r\n    \"@media (min-width: 0px) and (max-width: 767px)\": {\r\n      maxWidth: \"22.563rem\",\r\n      paddingLeft: \"7px\",\r\n      paddingRight: \"7px\",\r\n    },\r\n    \"@media (min-width: 768px) and (max-width: 1240px)\": {\r\n      maxWidth: \"41.5rem\",\r\n    },\r\n  },\r\n  rowDiv: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    height: \"53px\",\r\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\r\n    borderRadius: \"7px\",\r\n\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  mainContainer: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Transaction({ _handleChange }) {\r\n  const classes = useStyles();\r\n  const { hash } = useParams();\r\n  const [transactions, setTransactions] = useState(false);\r\n  const [isPvtNote, setIsPvtNote] = useState(false);\r\n  const [privateNote, setPrivateNote] = useState(\"\");\r\n  const [addressTag, setAddressTag] = useState(\"\");\r\n  const [addressTagTo, setAddressTagTo] = useState(\"\");\r\n  const [isTag, setIsTag] = useState(false);\r\n  const [isTagTo, setIsTagTo] = useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [copiedText, setCopiedText] = useState(\"\");\r\n  const [fromAddress, setFromAddress] = useState(\"\");\r\n  const [toAddress, setToAddress] = useState(\"\");\r\n\r\n  function getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n\r\n  const [windowDimensions, setWindowDimensions] = React.useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  const { width } = windowDimensions;\r\n\r\n  const [dialogPvtTagIsOpen, setDialogPvtTagIsOpen] = React.useState(false);\r\n  const [dialogValue, setDailogValue] = React.useState(0);\r\n  const [dialogValue2, setDailogValue2] = React.useState(0);\r\n  const [dialogPvtTagIsOpen2, setDialogPvtTagIsOpen2] = React.useState(false);\r\n  const [dialogPvtNoteIsOpen, setDialogPvtNoteIsOpen] = React.useState(false);\r\n  const [loginDialogIsOpen, setLoginDialogIsOpen] = React.useState(false);\r\n\r\n  const openDialogPvtTag = () => {\r\n    window.scrollTo(0, 0);\r\n    setDialogPvtTagIsOpen(true);\r\n    setDailogValue(1);\r\n  };\r\n  const closeDialogPvtTag = () => {\r\n    setDialogPvtTagIsOpen(false);\r\n    setDailogValue(0);\r\n  };\r\n  const openDialogPvtTag2 = () => {\r\n    window.scrollTo(0, 0);\r\n    setDialogPvtTagIsOpen2(true);\r\n    setDailogValue2(1);\r\n  };\r\n  const closeDialogPvtTag2 = () => {\r\n    setDialogPvtTagIsOpen2(false);\r\n    setDailogValue2(0);\r\n  };\r\n  const openDialogPvtNote = () => setDialogPvtNoteIsOpen(true);\r\n  const closeDialogPvtNote = () => setDialogPvtNoteIsOpen(false);\r\n  const openLoginDialog = () => setLoginDialogIsOpen(true);\r\n  const closeLoginDialog = () => setLoginDialogIsOpen(false);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [timeStamp, setTimeStamp] = useState();\r\n  const [price, setPrice] = useState(\"\");\r\n  const [latestBlock, setLatestBlock] = useState(0);\r\n  const [isSeeMore, setSeeMore] = useState(false);\r\n  useEffect(async () => {\r\n    await transactionDetail();\r\n    getLatestBlock();\r\n    privateNoteUsingHash();\r\n  }, []);\r\n\r\n  const transactionDetail = async () => {\r\n    let urlPath = `${hash}`;\r\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\r\n      TransactionService.getTransactionDetailsUsingHash(urlPath, {})\r\n    );\r\n    if (\r\n      !transactiondetailusinghash ||\r\n      transactiondetailusinghash.length === 0 ||\r\n      transactiondetailusinghash === undefined ||\r\n      transactiondetailusinghash === \"\" ||\r\n      transactiondetailusinghash === null\r\n    ) {\r\n      setLoading(false);\r\n    }\r\n    if (error || !transactiondetailusinghash) return;\r\n    setTransactions(transactiondetailusinghash);\r\n    setTimeStamp(transactiondetailusinghash?.timestamp);\r\n    setLoading(false);\r\n\r\n    tagUsingAddressFrom(transactiondetailusinghash);\r\n    tagUsingAddressTo(transactiondetailusinghash);\r\n    setFromAddress(transactiondetailusinghash.from);\r\n    setToAddress(transactiondetailusinghash.to);\r\n  };\r\n  const getLatestBlock = async () => {\r\n    let urlPath = \"?skip=0&limit=1\";\r\n    let [error, latestBlocks] = await Utils.parseResponse(\r\n      BlockService.getLatestBlock(urlPath, {})\r\n    );\r\n    if (error || !latestBlocks) return;\r\n\r\n    setLatestBlock(latestBlocks);\r\n  };\r\n  useEffect(() => {\r\n    let ts = parseInt(timeStamp);\r\n    getCoinMarketDetailForTransaction(ts);\r\n  }, [timeStamp]);\r\n  useEffect(() => {\r\n    let ts = parseInt(timeStamp);\r\n    getCoinMarketDetailForTransaction(ts);\r\n  }, [amount]);\r\n  const getCoinMarketDetailForTransaction = async (ts) => {\r\n    let urlPath = \"?transactionTime=\" + ts + \"&fiatValue=\" + CurrencyValue;\r\n    let [error, transactiondetailusinghash] = await Utils.parseResponse(\r\n      TransactionService.getCoinMarketDetailForTransaction(urlPath, {})\r\n    );\r\n    if (error || !transactiondetailusinghash) return;\r\n    setPrice(transactiondetailusinghash[0]?.price);\r\n  };\r\n\r\n  const userInfo = sessionManager.getDataFromCookies(\"userInfo\");\r\n\r\n  const privateNoteUsingHash = async () => {\r\n    const data = {\r\n      transactionHash: `${hash}`,\r\n      userId: sessionManager.getDataFromCookies(\"userId\"),\r\n    };\r\n    let transactionLabel = localStorage.getItem(\r\n      data.userId + cookiesConstants.USER_TRASACTION_LABELS\r\n    );\r\n    transactionLabel = JSON.parse(transactionLabel);\r\n    if (!transactionLabel || !transactionLabel.length) return;\r\n\r\n    const existingTransactionLabel = transactionLabel.find(\r\n      (item) =>\r\n        item.transactionHash == data.transactionHash &&\r\n        item.userId == data.userId\r\n    );\r\n    if (existingTransactionLabel) {\r\n      setPrivateNote(existingTransactionLabel);\r\n      setIsPvtNote(true);\r\n    }\r\n  };\r\n\r\n  const getListOfTxnLabel = () => {\r\n    privateNoteUsingHash();\r\n  };\r\n\r\n  const tagUsingAddressFrom = async (response) => {\r\n    const data = {\r\n      address: response.from,\r\n      userId: sessionManager.getDataFromCookies(\"userId\"),\r\n    };\r\n    // let [errors, tagUsingAddressHashResponse] = await Utils.parseResponse(\r\n    //   TransactionService.getUserAddressTagUsingAddressHash(data)\r\n    // );\r\n    // if (errors || !tagUsingAddressHashResponse) return;\r\n    let taggedAddressFetched = localStorage.getItem(\r\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\r\n    );\r\n    let tags =\r\n      taggedAddressFetched && taggedAddressFetched.length > 0\r\n        ? JSON.parse(taggedAddressFetched)\r\n        : \"\";\r\n    const tagValue =\r\n      tags && tags.length > 0\r\n        ? tags?.filter(\r\n            (obj) => obj.address === data.address && obj.userId == data.userId\r\n          )\r\n        : \"\";\r\n    if (tagValue && tagValue.length) {\r\n      setAddressTag(tagValue[0]);\r\n      setIsTag(true);\r\n    }\r\n  };\r\n\r\n  const tagUsingAddressTo = async (response) => {\r\n    const data = {\r\n      address: response.to,\r\n      userId: sessionManager.getDataFromCookies(\"userId\"),\r\n    };\r\n    // let [errors, tagUsingAddressHashResponse] = await Utils.parseResponse(\r\n    //     TransactionService.getUserAddressTagUsingAddressHash(data)\r\n    // );\r\n    // if (errors || !tagUsingAddressHashResponse) return;\r\n\r\n    let taggedAddressFetched = localStorage.getItem(\r\n      data.userId + cookiesConstants.USER_TAGGED_ADDRESS\r\n    );\r\n    let tags =\r\n      taggedAddressFetched && taggedAddressFetched.length > 0\r\n        ? JSON.parse(taggedAddressFetched)\r\n        : \"\";\r\n    const tagValue =\r\n      tags && tags.length > 0\r\n        ? tags?.filter(\r\n            (obj) => obj.address === data.address && obj.userId == data.userId\r\n          )\r\n        : \"\";\r\n    if (tagValue && tagValue.length) {\r\n      setAddressTagTo(tagValue[0]);\r\n      setIsTagTo(true);\r\n    }\r\n  };\r\n\r\n  // ---------------------------------------> fetch from/to address tag (local-storage) <------------------------------------//\r\n  var addrTagFrom = fromAddress;\r\n  var addrTagTo = toAddress;\r\n\r\n  let taggedAddress = localStorage.getItem(\r\n    sessionManager.getDataFromCookies(\"userId\") +\r\n      cookiesConstants.USER_TAGGED_ADDRESS\r\n  );\r\n  let tags =\r\n    taggedAddress && taggedAddress.length > 0 ? JSON.parse(taggedAddress) : \"\";\r\n  var tagValueFrom =\r\n    tags && tags.length > 0\r\n      ? tags?.filter(\r\n          (obj) => obj.address === addrTagFrom && obj.userId === userInfo.sub\r\n        )\r\n      : \"\";\r\n  var tagValueTo =\r\n    tags && tags.length > 0\r\n      ? tags?.filter(\r\n          (obj) => obj.address === addrTagTo && obj.userId === userInfo.sub\r\n        )\r\n      : \"\";\r\n\r\n  // ---------------------------------------> fetch pvt note from (local-storage) <--------------------------------------------//\r\n\r\n  var pvtNotehash = `${hash}`;\r\n  let pvtNoteLocal = localStorage.getItem(\r\n    cookiesConstants.USER_TRASACTION_LABELS\r\n  );\r\n\r\n  let pvtNote =\r\n    pvtNoteLocal && pvtNoteLocal.length > 0 ? JSON.parse(pvtNoteLocal) : \"\";\r\n  var pvtNoteValue =\r\n    pvtNote && pvtNote.length > 0\r\n      ? pvtNote?.filter(\r\n          (obj) =>\r\n            obj.transactionHash === pvtNotehash && obj.userId === userInfo.sub\r\n        )\r\n      : \"\";\r\n\r\n  const handleSeeMore = () => {\r\n    setSeeMore(true);\r\n  };\r\n  const handleSeeLess = () => {\r\n    setSeeMore(false);\r\n  };\r\n  const hashid = `A transaction hash is a unique character identifier that is generated whenever the transaction is executed. `;\r\n  const blocknumber = ` The number of block in which transaction was recorded. Block confirmation indicate how many blocks since the transaction is mined.  `;\r\n  const timestamp = ` The date and time at which a transaction is mined. `;\r\n  const from = ` The sending party of the transaction(could be from a contact address)  `;\r\n  const to = ` The receiving party of the transaction(could be from a contact address) `;\r\n  const value = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\r\n  const txnfee = ` The value being transacted in XDC and fiat value. Note: You can click the fiat value(if available) to see historical value at the time of Transaction `;\r\n  const gasprovided = `Maximum amount of gas provided for the transaction. For normal XDC transfers the value is 21,000. For contract this value is higher an bound by block gas limit. `;\r\n  const gasprice = ` Cost per unit of gas specified for the transaction, in XDC and Gwei. The higher the gas price the higher hance of getting included in a block `;\r\n  const gasused = ` The exact unit of gas that was used for the transactions. `;\r\n  const nounced = ` Sequential running number for an address, beginning with 0 for the first transaction. For example, if the nonce of a transaction is 10, it would be 11th transaction sent from the sender's address. `;\r\n  const input = `Additional information that is required for the transaction `;\r\n  const transferToken = `The value being transacted in XDC and fiat value. Note: You can click the fiat value (if available) to see historical value at the time of transaction.`;\r\n  const privatenote = `User can add a private note to the transaction. Private note is being saved in the local storage of the device.`;\r\n\r\n  function _handleChange(event) {\r\n    setAmount(event?.target?.value);\r\n    window.localStorage.setItem(\"currency\", event?.target?.value);\r\n  }\r\n\r\n  let CurrencyValue = window.localStorage.getItem(\"currency\");\r\n  const currencySymbol =\r\n    CurrencyValue === \"INR\" ? \"₹\" : CurrencyValue === \"USD\" ? \"$\" : \"€\";\r\n  const valueFetch =\r\n    CurrencyValue === \"INR\" ? price : CurrencyValue === \"USD\" ? price : price;\r\n  const txfee = !transactions\r\n    ? 0\r\n    : Utils.decimalDivison(transactions?.gasPrice * transactions?.gasUsed, 8);\r\n\r\n  const txnFee = parseFloat(txfee)?.toFixed(8).replace(/0+$/, \"\");\r\n\r\n  let txnFee1 = txnFee.toString().split(\".\")[0];\r\n  let txnFee2 = txnFee.toString().split(\".\")[1];\r\n\r\n  const transactionFetch =\r\n    CurrencyValue === \"INR\"\r\n      ? txfee * price\r\n      : CurrencyValue === \"USD\"\r\n      ? txfee * price\r\n      : txfee * price;\r\n  const fetchtxn = !transactionFetch\r\n    ? 0\r\n    : parseFloat(transactionFetch)?.toFixed(8);\r\n  let fetchtxn1 = fetchtxn.toString().split(\".\")[0];\r\n  let fetchtxn2 = fetchtxn.toString().split(\".\")[1];\r\n\r\n  const gasP = !transactions.gasPrice\r\n    ? 0\r\n    : Utils.decimalDivison(transactions.gasPrice, 12);\r\n  const gasPrice = parseFloat(gasP)?.toFixed(12).replace(/0+$/, \"\");\r\n  let gasPrice1 = gasPrice.toString().split(\".\")[0];\r\n  let gasPrice2 = gasPrice.toString().split(\".\")[1];\r\n  const avgTxnFeeConverted =\r\n    CurrencyValue === \"INR\"\r\n      ? gasP * price\r\n      : CurrencyValue === \"USD\"\r\n      ? gasP * price\r\n      : gasP * price;\r\n  const avgTxnFeeFetch = !avgTxnFeeConverted\r\n    ? 0\r\n    : parseFloat(avgTxnFeeConverted)?.toFixed(14);\r\n  let avgTxnFeeFetch1 = avgTxnFeeFetch.toString().split(\".\")[0];\r\n  let avgTxnFeeFetch2 = avgTxnFeeFetch.toString().split(\".\")[1];\r\n\r\n  let transactionValue =\r\n    transactions?.value <\r\n    1000000000000 /*there are some transactions which are not in gwei in ou DB*/\r\n      ? transactions?.value * 1000000000000000000\r\n      : transactions?.value;\r\n  const valueDiv =\r\n    transactions?.value > 0 && transactions?.value < 1\r\n      ? (valueFetch * transactionValue).toFixed(8)\r\n      : Utils.decimalDivison(valueFetch * transactionValue, 8);\r\n  let ValueMain =\r\n    transactions?.value > 0 && transactions?.value < 1\r\n      ? transactions?.value\r\n      : Utils.decimalDivison(transactionValue, 8);\r\n  let bx = latestBlock[0]?.number - transactions?.blockNumber;\r\n  const getHoursAgo = (date) => {\r\n    let today = Date.now();\r\n    let difference = today - date;\r\n    var daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\r\n    difference -= daysDifference * 1000 * 60 * 60 * 24;\r\n    var hoursDifference = Math.floor(difference / 1000 / 60 / 60);\r\n    difference -= hoursDifference * 1000 * 60 * 60;\r\n    var minutesDifference = Math.floor(difference / 1000 / 60);\r\n    difference -= minutesDifference * 1000 * 60;\r\n    var secondsDifference = Math.floor(difference / 1000);\r\n    if (\r\n      secondsDifference < 60 &&\r\n      minutesDifference === 0 &&\r\n      hoursDifference === 0 &&\r\n      daysDifference === 0\r\n    ) {\r\n      if (secondsDifference === 1) return secondsDifference + \" second ago \";\r\n      else return secondsDifference + \" seconds ago \";\r\n    }\r\n    if (\r\n      minutesDifference < 60 &&\r\n      hoursDifference === 0 &&\r\n      daysDifference === 0\r\n    ) {\r\n      if (minutesDifference === 1) return minutesDifference + \" minute ago \";\r\n      return minutesDifference + \" minutes ago\";\r\n    }\r\n    if (hoursDifference < 60 && daysDifference === 0) {\r\n      if (hoursDifference === 1) return hoursDifference + \" hour ago \";\r\n      return hoursDifference + \" hours ago\";\r\n    }\r\n    if (daysDifference < 30) {\r\n      if (hoursDifference === 1) return hoursDifference + \" day ago \";\r\n      return daysDifference + \" days ago\";\r\n    }\r\n  };\r\n  const timezone = useSelector((state) => state.timezone);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Tokensearchbar />\r\n\r\n      <div className={classes.root}>\r\n        <Grid>\r\n          <div className={isLoading == true ? \"cover-spin-2\" : \"\"}>\r\n            <div className={isLoading == true ? \"cover-spin\" : \"\"}>\r\n              <Container>\r\n                <Heading>Transaction Details</Heading>\r\n              </Container>\r\n\r\n              <Div>\r\n                {transactions ? (\r\n                  transactions.status == true ? (\r\n                    <StatusContainer>\r\n                      <StatusContainerInside>\r\n                        <StatusImgContainer>\r\n                          <StatusImg src=\"/images/success.svg\"></StatusImg>\r\n                        </StatusImgContainer>\r\n                        <StatusTextSuccess>Success</StatusTextSuccess>\r\n                      </StatusContainerInside>\r\n                    </StatusContainer>\r\n                  ) : (\r\n                    <StatusContainer>\r\n                      <StatusImgContainer>\r\n                        <StatusImg src=\"/images/failed.svg\"></StatusImg>\r\n                      </StatusImgContainer>\r\n                      <StatusTextFailed>Failed</StatusTextFailed>\r\n                    </StatusContainer>\r\n                  )\r\n                ) : null}\r\n                <TxnDetailsRightContainer>\r\n                  <TxnDetailsRightTopContainer>\r\n                    <Container>\r\n                      <Tooltip align=\"right\" title={hashid}>\r\n                        <ImageView src={\"/images/info.svg\"} />\r\n                      </Tooltip>\r\n\r\n                      <Hash>Transaction Hash</Hash>\r\n                    </Container>\r\n                    <DetailsMiddleContainer isTextArea={false}>\r\n                      <ContentHash>\r\n                        {hash}\r\n                        {/* {width > 1240\r\n                        ? hash\r\n                        : width <= 1240 && width >= 768\r\n                          ? Utils.shortenHashTab(hash)\r\n                          : hash} */}\r\n                      </ContentHash>\r\n                      <span\r\n                        className={\r\n                          width >= 768\r\n                            ? \"copyEditContainer2\"\r\n                            : \"copyEditContainerMobile\"\r\n                        }\r\n                      >\r\n                        <CopyToClipboard\r\n                          text={hash}\r\n                          onCopy={() => setCopiedText(hash)}\r\n                        >\r\n                          <Tooltip\r\n                            title={\r\n                              copiedText === hash\r\n                                ? \"Copied\"\r\n                                : \"Copy To Clipboard\"\r\n                            }\r\n                            placement=\"top\"\r\n                          >\r\n                            <button\r\n                              className={\r\n                                width > 1240\r\n                                  ? \"copyToClipboardHash\"\r\n                                  : \"copyToClipboardHashMobile\"\r\n                              }\r\n                            >\r\n                              <img\r\n                                className={\r\n                                  width > 1240\r\n                                    ? \"copy-icon\"\r\n                                    : width < 768\r\n                                    ? \"copyIconHashMobile\"\r\n                                    : \"copyIconHash\"\r\n                                }\r\n                                src={\"/images/copy-grey.svg\"}\r\n                              />\r\n                            </button>\r\n                          </Tooltip>\r\n                        </CopyToClipboard>\r\n                        {userInfo ? ( privateNote ?<></>:\r\n                          <>\r\n                            {\r\n                              <PrivateNote\r\n                                open={dialogPvtNoteIsOpen}\r\n                                getListOfTxnLabel={getListOfTxnLabel}\r\n                                getTotalCountTxnLabel={() => {}}\r\n                                onClose={closeDialogPvtNote}\r\n                                hash={hash}\r\n                                pvtNote={privateNote[0]?.trxLable}\r\n                              />\r\n                            }\r\n                            {\r\n                              <Tooltip\r\n                                title=\"Add Transaction Label\"\r\n                                placement=\"top\"\r\n                              >\r\n                                <img\r\n                                  className={\r\n                                    width > 1240 ? \"edit-icon\" : \"editIconHash\"\r\n                                  }\r\n                                  onClick={openDialogPvtNote}\r\n                                  src={require(\"../../../src/assets/images/label.svg\")}\r\n                                />\r\n                              </Tooltip>\r\n                            }\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </span>\r\n                    </DetailsMiddleContainer>\r\n                  </TxnDetailsRightTopContainer>\r\n                  <TxnDetailsRightBottomContainer>\r\n                    <DetailsContainer>\r\n                      <Container>\r\n                        <Tooltip title={value}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n                        <Hash>Transaction Value</Hash>\r\n                      </Container>\r\n                      <Tooltip title={transactions?.value}>\r\n                        <DetailsMiddleContainer isTextArea={false}>\r\n                          {ValueMain}&nbsp;XDC{\" \"}\r\n                          {!valueDiv\r\n                            ? \" \"\r\n                            : \"(\" + (currencySymbol + valueDiv) + \")\"}\r\n                        </DetailsMiddleContainer>\r\n                      </Tooltip>\r\n                    </DetailsContainer>\r\n                    {/* ------------------------------------------------time stamp------------------------------------- */}\r\n                    <DetailsContainer className=\"mobileTimeStamp\">\r\n                      <Container>\r\n                        <Tooltip title={timestamp}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n\r\n                        <Hash>Transaction Timestamp</Hash>\r\n                      </Container>\r\n                      <DetailsMiddleContainer isTextArea={false}>\r\n                        {/*============================================= {\" \"}\r\n                        {moment(transactions.timestamp * 1000).format(\r\n                          \"MMMM Do YYYY, h:mm:ss a\"\r\n                        )}{\" \"}============================ */}\r\n                        {`${\r\n                          (transactions?.timestamp &&\r\n                            moment(transactions.timestamp * 1000)\r\n                              .tz(timezone)\r\n                              .format(\"MMM DD, YYYY, hh:mm A\")) ||\r\n                          \"\"\r\n                        } ${\r\n                          (timezone && Utility.getUtcOffset(timezone)) || \"\"\r\n                        }`}\r\n                        {/*============================================================================({getHoursAgo(transactions.timestamp * 1000)})==================================*/}\r\n                      </DetailsMiddleContainer>\r\n                    </DetailsContainer>\r\n                    {/* ------------------------------------------------------block-------------------------------  */}\r\n                    <DetailsContainer>\r\n                      <Container>\r\n                        <Tooltip title={blocknumber}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n\r\n                        <Hash>Block Number</Hash>\r\n                      </Container>\r\n                      <DetailsMiddleContainer isTextArea={false}>\r\n                        <Content>\r\n                          <a\r\n                            className=\"linkTableDetails-transaction\"\r\n                            href={\"/block-details/\" + transactions.blockNumber}\r\n                          >\r\n                            {\" \"}\r\n                            {transactions.blockNumber\r\n                              ? transactions.blockNumber\r\n                              : \"\"}\r\n                          </a>\r\n                          &nbsp;{\" \"}\r\n                          <BlockConfirmation>\r\n                            {bx} Blocks Confirmation\r\n                          </BlockConfirmation>\r\n                        </Content>\r\n                      </DetailsMiddleContainer>\r\n                    </DetailsContainer>\r\n                  </TxnDetailsRightBottomContainer>\r\n                </TxnDetailsRightContainer>\r\n              </Div>\r\n\r\n              <DivMiddleContainer>\r\n                {/* -----------------------------------------------from---------------------------- */}\r\n                <DivMiddle>\r\n                  <Container>\r\n                    <Tooltip title={from}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>From</Hash>\r\n                  </Container>\r\n                  <DetailsMiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      {\" \"}\r\n                      <div style={{ display: width >= 768 ? \"flex\" : \"block\" }}>\r\n                        <a\r\n                          className=\"linkTableDetails-transaction\"\r\n                          href={\"/address-details/\" + transactions.from}\r\n                        >\r\n                          {transactions.from}\r\n                        </a>\r\n                        <div\r\n                          className={\r\n                            width < 768\r\n                              ? \"fromContainerMobile\"\r\n                              : \"fromContainer\"\r\n                          }\r\n                        >\r\n                          <CopyToClipboard\r\n                            text={transactions.from}\r\n                            onCopy={() => setCopiedText(transactions.from)}\r\n                          >\r\n                            <Tooltip\r\n                              title={\r\n                                copiedText === transactions.from\r\n                                  ? \"Copied\"\r\n                                  : \"Copy To Clipboard\"\r\n                              }\r\n                              placement=\"top\"\r\n                            >\r\n                              <button\r\n                                className={\r\n                                  width > 1240\r\n                                    ? \"copyToClipboardHash\"\r\n                                    : \"copyToClipboardFromMobile\"\r\n                                }\r\n                              >\r\n                                <img\r\n                                  className={\r\n                                    width > 1240\r\n                                      ? \"copy-icon\"\r\n                                      : width < 768\r\n                                      ? \"copy-icon-from\"\r\n                                      : \"copy-icon-from-tab\"\r\n                                  }\r\n                                  src={\"/images/copy-grey.svg\"}\r\n                                />\r\n                              </button>\r\n                            </Tooltip>\r\n                          </CopyToClipboard>\r\n                        </div>\r\n                      </div>\r\n                    </Content>\r\n                    <TabTag>\r\n                      {width >= 768 && width <= 1240 ? (\r\n                        userInfo ? (\r\n                          <>\r\n                            {\r\n                              <PrivateAddressTag\r\n                                open={dialogPvtTagIsOpen}\r\n                                onClose={closeDialogPvtTag}\r\n                                fromAddr={transactions.from}\r\n                                value={dialogValue}\r\n                                hash={hash}\r\n                              />\r\n                            }\r\n\r\n                            {tagValueFrom && tagValueFrom?.length > 0 ? (\r\n                              <Tag>\r\n                                {\r\n                                  tagValueFrom[tagValueFrom?.length - 1]\r\n                                    ?.tagName\r\n                                }\r\n                              </Tag>\r\n                            ) : (\r\n                              <Tooltip\r\n                                title=\"Add a new Address Tag\"\r\n                                placement=\"top\"\r\n                              >\r\n                                {/* <img\r\n                                    className={\r\n                                      width > 1240\r\n                                        ? \"edit1-icon\"\r\n                                        : \"edit1-icon-from\"\r\n                                    }\r\n                                    onClick={openDialogPvtTag}\r\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\r\n                                  /> */}\r\n                                <AddTagContainer onClick={openDialogPvtTag}>\r\n                                  <ImgAddTag>\r\n                                    <img src=\"/images/add-tag-white.svg\" />\r\n                                  </ImgAddTag>\r\n                                  <AddTagtext>Add Tag</AddTagtext>\r\n                                </AddTagContainer>\r\n                              </Tooltip>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </TabTag>\r\n                  </DetailsMiddleContainer>\r\n                  <MobileDesktopTag>\r\n                    {width < 768 || width > 1240 ? (\r\n                      userInfo ? (\r\n                        <>\r\n                          {\r\n                            <PrivateAddressTag\r\n                              open={dialogPvtTagIsOpen}\r\n                              onClose={closeDialogPvtTag}\r\n                              fromAddr={transactions.from}\r\n                              value={dialogValue}\r\n                              hash={hash}\r\n                            />\r\n                          }\r\n\r\n                          {tagValueFrom && tagValueFrom?.length ? (\r\n                            <Tag>\r\n                              {tagValueFrom[tagValueFrom?.length - 1]?.tagName}\r\n                            </Tag>\r\n                          ) : (\r\n                            <Tooltip\r\n                              title=\"Add a new Address Tag\"\r\n                              placement=\"top\"\r\n                            >\r\n                              {/* <img\r\n                                    className={\r\n                                      width > 1240\r\n                                        ? \"edit1-icon\"\r\n                                        : \"edit1-icon-from\"\r\n                                    }\r\n                                    onClick={openDialogPvtTag}\r\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\r\n                                  /> */}\r\n                              <AddTagContainer onClick={openDialogPvtTag}>\r\n                                <ImgAddTag>\r\n                                  <img src=\"/images/add-tag-white.svg\" />\r\n                                </ImgAddTag>\r\n                                <AddTagtext>Add Tag</AddTagtext>\r\n                              </AddTagContainer>\r\n                            </Tooltip>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </MobileDesktopTag>\r\n                </DivMiddle>\r\n                <DivCircle>\r\n                  <ImgNextArrow>\r\n                    <img src=\"/images/next-arrow.svg\" />\r\n                  </ImgNextArrow>\r\n                </DivCircle>\r\n                {/* --------------------------------------------------------------------to--------------------- */}\r\n                <DivMiddle>\r\n                  <Container>\r\n                    <Tooltip title={to}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>To</Hash>\r\n                  </Container>\r\n                  <DetailsMiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      <span\r\n                        style={{ display: width >= 768 ? \"flex\" : \"block\" }}\r\n                      >\r\n                        <a\r\n                          className=\"linkTableDetails-transaction\"\r\n                          href={\"/address-details/\" + transactions.to}\r\n                        >\r\n                          {transactions.to\r\n                            ? transactions.to\r\n                            : transactions.contractAddress}\r\n                        </a>\r\n                        <div\r\n                          className={\r\n                            width < 768\r\n                              ? \"fromContainerMobile\"\r\n                              : \"fromContainer\"\r\n                          }\r\n                        >\r\n                          <CopyToClipboard\r\n                            text={transactions.to}\r\n                            onCopy={() => setCopiedText(transactions.to)}\r\n                          >\r\n                            <Tooltip\r\n                              title={\r\n                                copiedText === transactions.to\r\n                                  ? \"Copied\"\r\n                                  : \"Copy To Clipboard\"\r\n                              }\r\n                              placement=\"top\"\r\n                            >\r\n                              <button\r\n                                className={\r\n                                  width > 1240\r\n                                    ? \"copyToClipboardHash\"\r\n                                    : \"copyToClipboardFromMobile\"\r\n                                }\r\n                              >\r\n                                <img\r\n                                  className={\r\n                                    width > 1240\r\n                                      ? \"copy-icon\"\r\n                                      : width < 768\r\n                                      ? \"copy-icon-from\"\r\n                                      : \"copy-icon-from-tab\"\r\n                                  }\r\n                                  src={\"/images/copy-grey.svg\"}\r\n                                />\r\n                              </button>\r\n                            </Tooltip>\r\n                          </CopyToClipboard>\r\n                        </div>\r\n                      </span>\r\n                    </Content>\r\n                    <TabTag>\r\n                      {width >= 768 && width <= 1240 ? (\r\n                        userInfo ? (\r\n                          <>\r\n                            {\r\n                              <PrivateAddressTag\r\n                                open={dialogPvtTagIsOpen2}\r\n                                onClose={closeDialogPvtTag2}\r\n                                toAddr={transactions.to}\r\n                                value={dialogValue2}\r\n                                hash={hash}\r\n                              />\r\n                            }\r\n                            {tagValueTo && tagValueTo?.length ? (\r\n                              <Tag>\r\n                                {tagValueTo[tagValueTo?.length - 1]?.tagName}\r\n                              </Tag>\r\n                            ) : (\r\n                              <Tooltip\r\n                                title=\"Add a new Address Tag\"\r\n                                placement=\"top\"\r\n                              >\r\n                                {/* <img\r\n                                    className={\r\n                                      width > 1240\r\n                                        ? \"edit1-icon\"\r\n                                        : \"edit1-icon-from\"\r\n                                    }\r\n                                    onClick={openDialogPvtTag2}\r\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\r\n                                  /> */}\r\n                                <AddTagContainer onClick={openDialogPvtTag2}>\r\n                                  <ImgAddTag>\r\n                                    <img src=\"/images/add-tag-white.svg\" />\r\n                                  </ImgAddTag>\r\n                                  <AddTagtext>Add Tag</AddTagtext>\r\n                                </AddTagContainer>\r\n                              </Tooltip>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </TabTag>\r\n                  </DetailsMiddleContainer>\r\n                  <MobileDesktopTag>\r\n                    {width < 768 || width > 1240 ? (\r\n                      userInfo ? (\r\n                        <>\r\n                          {\r\n                            <PrivateAddressTag\r\n                              open={dialogPvtTagIsOpen2}\r\n                              onClose={closeDialogPvtTag2}\r\n                              toAddr={transactions.to}\r\n                              value={dialogValue2}\r\n                              hash={hash}\r\n                            />\r\n                          }\r\n                          {tagValueTo && tagValueTo?.length ? (\r\n                            <Tag>\r\n                              {tagValueTo[tagValueTo?.length - 1]?.tagName}\r\n                            </Tag>\r\n                          ) : (\r\n                            <Tooltip\r\n                              title=\"Add a new Address Tag\"\r\n                              placement=\"top\"\r\n                            >\r\n                              {/* <img\r\n                                    className={\r\n                                      width > 1240\r\n                                        ? \"edit1-icon\"\r\n                                        : \"edit1-icon-from\"\r\n                                    }\r\n                                    onClick={openDialogPvtTag2}\r\n                                    src={require(\"../../../src/assets/images/tag.svg\")}\r\n                                  /> */}\r\n                              <AddTagContainer onClick={openDialogPvtTag2}>\r\n                                <ImgAddTag>\r\n                                  <img src=\"/images/add-tag-white.svg\" />\r\n                                </ImgAddTag>\r\n                                <AddTagtext>Add Tag</AddTagtext>\r\n                              </AddTagContainer>\r\n                            </Tooltip>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </MobileDesktopTag>\r\n                </DivMiddle>\r\n              </DivMiddleContainer>\r\n\r\n              <Div__>\r\n                {/* -------------------------------------------------------------txn fee----------------------- */}\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip title={txnfee}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n\r\n                    <Hash>Transaction Fee</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                      {\" \"}\r\n                      {txnFee2 == 0 ? (\r\n                        <span>{txnFee1}</span>\r\n                      ) : (\r\n                        <span>\r\n                          {txnFee1}\r\n                          {\".\"}\r\n                          <span style={{ color: \"#9FA9BA\" }}>{txnFee2}</span>\r\n                        </span>\r\n                      )}\r\n                      &nbsp;XDC ({currencySymbol}\r\n                      {fetchtxn2 == null ? (\r\n                        <span>{fetchtxn1}</span>\r\n                      ) : (\r\n                        <span>\r\n                          {fetchtxn1}\r\n                          {\".\"}\r\n                          <span style={{ color: \"#9FA9BA\" }}>{fetchtxn2}</span>\r\n                        </span>\r\n                      )}\r\n                      )\r\n                    </Content>\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasprovided}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Gas Provided</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    {format({})(transactions.gas)}\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasprice}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Avg Transaction Fee</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>\r\n                    {gasPrice2 == 0 ? (\r\n                      <span>{gasPrice1}</span>\r\n                    ) : (\r\n                      <span>\r\n                        {gasPrice1}\r\n                        {\".\"}\r\n                        <span style={{ color: \"#9FA9BA\" }}>{gasPrice2}</span>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;XDC ({currencySymbol}\r\n                      {avgTxnFeeFetch2 == null ? (\r\n                        <span>{avgTxnFeeFetch1}</span>\r\n                      ) : (\r\n                        <span>\r\n                          {avgTxnFeeFetch1}\r\n                          {\".\"}\r\n                          <span style={{ color: \"#9FA9BA\" }}>{avgTxnFeeFetch2}</span>\r\n                        </span>\r\n                      )}\r\n                      )\r\n                      </Content>\r\n                    {/* <Content> {gasP}</Content> */}\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                <Spacing>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={gasused}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Gas Used</Hash>\r\n                  </Container>\r\n                  <MiddleContainer isTextArea={false}>\r\n                    <Content>{format({})(transactions?.gasUsed)}</Content>\r\n                  </MiddleContainer>\r\n                </Spacing>\r\n                {!isSeeMore ? (\r\n                  <Spacing>\r\n                    <SeeMoreContainer onClick={handleSeeMore}>\r\n                      <SeeMoreText>See more</SeeMoreText>\r\n                      <ImgSeeMore src=\"/images/see-more.svg\"></ImgSeeMore>\r\n                    </SeeMoreContainer>\r\n                  </Spacing>\r\n                ) : (\r\n                  <>\r\n                    <Spacing>\r\n                      <Container>\r\n                        <Tooltip align=\"right\" title={nounced}>\r\n                          <ImageView src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n                        <Hash>Nonce</Hash>\r\n                      </Container>\r\n                      <MiddleContainer isTextArea={false}>\r\n                        <Content> {transactions.nonce}</Content>\r\n                      </MiddleContainer>\r\n                    </Spacing>\r\n                    <SpacingInputData>\r\n                      <Container>\r\n                        <Tooltip align=\"right\" title={input}>\r\n                          <ImageViewInputData src={\"/images/info.svg\"} />\r\n                        </Tooltip>\r\n                        <HashInputData>Input Data</HashInputData>\r\n                      </Container>\r\n                      <MiddleContainerInputData isTextArea={true}>\r\n                        <div className=\"transaction-details-input-data\">\r\n                          <textarea\r\n                            className=\"text-area-transaction\"\r\n                            readOnly\r\n                            value={transactions.input}\r\n                          />\r\n                        </div>\r\n                      </MiddleContainerInputData>\r\n                    </SpacingInputData>\r\n                    <Spacing>\r\n                      <SeeMoreContainer onClick={handleSeeLess}>\r\n                        <SeeMoreText>See Less</SeeMoreText>\r\n                        <ImgSeeLess src=\"/images/see-more.svg\"></ImgSeeLess>\r\n                      </SeeMoreContainer>\r\n                    </Spacing>\r\n                  </>\r\n                )}\r\n                <SpacingPrivateNode>\r\n                  <Container>\r\n                    <Tooltip align=\"right\" title={privatenote}>\r\n                      <ImageView src={\"/images/info.svg\"} />\r\n                    </Tooltip>\r\n                    <Hash>Private Note</Hash>\r\n                  </Container>\r\n                  <MiddleContainerPrivateNote>\r\n                    {!userInfo ? (\r\n                      <PrivateText>\r\n                        {\r\n                          <LoginDialog\r\n                            open={loginDialogIsOpen}\r\n                            onClose={closeLoginDialog}\r\n                            dataHashOrAddress={hash}\r\n                          />\r\n                        }\r\n                        To access the private note feature, you must be\r\n                        <a\r\n                          className=\"linkTableDetails-transaction\"\r\n                          style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\r\n                          onClick={openLoginDialog}\r\n                        >\r\n                          Logged In\r\n                        </a>\r\n                      </PrivateText>\r\n                    ) : privateNote ? (\r\n                      <span>{privateNote?.trxLable}</span>\r\n                    ) : (\r\n                      <AddLabel>\r\n                        <AddLabelText>\r\n                          Add private note by clicking on this icon\r\n                        </AddLabelText>\r\n                        {\r\n                          <PrivateNote\r\n                            open={dialogPvtNoteIsOpen}\r\n                            getListOfTxnLabel={getListOfTxnLabel}\r\n                            getTotalCountTxnLabel={() => {}}\r\n                            onClose={closeDialogPvtNote}\r\n                            hash={hash}\r\n                            pvtNote={\r\n                              pvtNoteValue[pvtNoteValue?.length - 1]?.trxLable\r\n                            }\r\n                          />\r\n                        }\r\n                        {\r\n                          <Tooltip\r\n                            title=\"Add Transaction Label\"\r\n                            placement=\"top\"\r\n                          >\r\n                            <img\r\n                              className={\r\n                                width > 1240 ? \"edit-icon1\" : \"editIconHash\"\r\n                              }\r\n                              onClick={openDialogPvtNote}\r\n                              src={require(\"../../../src/assets/images/label.svg\")}\r\n                            />\r\n                          </Tooltip>\r\n                        }\r\n                      </AddLabel>\r\n                    )}\r\n                  </MiddleContainerPrivateNote>\r\n                </SpacingPrivateNode>\r\n              </Div__>\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n\r\n      <FooterComponent _handleChange={_handleChange} currency={amount} />\r\n    </div>\r\n  );\r\n}\r\nconst Input = styled.input`\r\n  border-radius: 5px;\r\n  border: solid 1px #e3e7eb;\r\n  background-color: #fff;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: left;\r\n  color: #2a2a2a;\r\n`;\r\nconst Content = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.935rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  line-height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    line-height: 18px !important;\r\n    word-break: break-all;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1241px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst ContentHash = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.935rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  line-height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    line-height: 18px !important;\r\n    word-break: break-all;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1241px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    width: 33rem;\r\n  }\r\n`;\r\nconst TextArea = styled.textarea`\r\n  opacity: 0.33;\r\n  border-radius: 4px;\r\n  border: solid 1px #9fa9ba;\r\n  background-color: #dee0e3;\r\n  width: 100%;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  float: left;\r\n  padding: 14px;\r\n  overflow-y: auto;\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 110%;\r\n  }\r\n`;\r\nconst PrivateText = styled.p`\r\n  display: contents;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: contents;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    display: block;\r\n    margin-bottom: -5px;\r\n  }\r\n`;\r\nconst Div__ = styled.div`\r\n  width: 75.125rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  padding: 0.563rem;\r\n  padding-left: 27px;\r\n  padding-right: 25px;\r\n  margin-top: 35px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    max-width: 22.563rem;\r\n    width: 100%;\r\n    // height: 61rem;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-bottom: 35px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 41.5rem;\r\n    height: unset;\r\n    margin-bottom: 54px;\r\n  }\r\n`;\r\nconst MiddleContainerPrivateNote = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: solid 1px #9fa9ba;\r\n  height: auto;\r\n  padding: 1px 9px 1px 18px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-top: 10px;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    margin-left: unset;\r\n    line-height: 1.5;\r\n    height: auto;\r\n    padding: 1px 6px 1px 6px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    margin-left: 100px;\r\n  }\r\n`;\r\nconst MiddleContainerInputData = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    margin-left: unset;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    opacity: 1;\r\n    margin-left: 100px;\r\n  }\r\n`;\r\n\r\nconst MiddleContainer = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\r\n    margin-left: unset;\r\n    margin-top: 10px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    margin-left: 100px;\r\n  }\r\n`;\r\n\r\nconst MiddleContainer1 = styled.div`\r\n  font-family: Inter;\r\n  font-size: 0.938rem;\r\n\r\n  text-align: left;\r\n  color: #3a3a3a;\r\n  margin-left: 100px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 0.875rem;\r\n    word-break: break-all;\r\n    text-align: left;\r\n\r\n    color: #3a3a3a;\r\n    opacity: 1;\r\n    word-break: break-all;\r\n    height: ${(props) => (props.isTextArea ? `100px` : `unset`)};\r\n    margin-left: unset;\r\n    margin-top: 10px;\r\n    display: block;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-size: 0.875rem;\r\n    // word-break: break-all;\r\n    // text-align: left;\r\n    //\r\n    // color: #3a3a3a;\r\n    // opacity: 1;\r\n    // display: block;\r\n    margin-left: 64px;\r\n  }\r\n`;\r\n\r\nconst HashInputData = styled.span`\r\n  color: var(--unnamed-color-2a2a2a);\r\n  white-space: nowrap;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n\r\n  color: #2a2a2a;\r\n  padding-bottom: 30px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.75rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n    padding-bottom: 20px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Hash = styled.span`\r\n  white-space: nowrap;\r\n  font-family: Inter;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n\r\n  color: #252525;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.75rem;\r\n    text-align: left;\r\n\r\n    color: #252525;\r\n    opacity: 1;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: \"Inter\", sans-serif;\r\n    font-weight: 600;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n\r\n    color: #2a2a2a;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst SpacingInputData = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  padding: 13px 0 8px 0;\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding: 11px 6px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    // height: 6.25rem;\r\n  }\r\n`;\r\nconst SpacingPrivateNode = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  // border-bottom: solid 1px #e3e7eb;\r\n  padding: 15px 0 6px 0;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding: 11px 6px;\r\n    border-bottom: none;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n  }\r\n`;\r\nconst Spacing = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 4.063rem;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    height: auto;\r\n    padding: 12px 0 17px 0;\r\n  }\r\n`;\r\nconst SpacingHash = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  border-bottom: solid 1px #e3e7eb;\r\n  height: 4.063rem;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding: 11px 6px;\r\n    height: auto;\r\n  }\r\n`;\r\nconst HashDiv = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  padding: 16px 33px;\r\n\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    padding-left: 10px;\r\n    // padding-right: 85px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    padding: 14px 30px;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n\r\n  width: 100%;\r\n  align-items: center;\r\n  max-width: 165px;\r\n`;\r\nconst SecondContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: 767px) {\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  width: 75.125rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  margin-bottom: 15px;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n  //   width: 22.563rem;\r\n  //   height: 6.813rem;\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    max-width: 41.5rem;\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\nconst DivMiddleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 35px;\r\n  margin-bottom: 36px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    display: block;\r\n  }\r\n`;\r\nconst DivMiddle = styled.div`\r\n  max-width: 35.625rem;\r\n  width: 100%;\r\n  padding: 15px 25px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  // margin-bottom: 15px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding: 10px;\r\n  }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    max-width: 41.5rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.span`\r\n  white-space: nowrap;\r\n  color: #2a2a2a;\r\n  box-shadow: none;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 1.5rem;\r\n  margin-top: 46px;\r\n  margin-bottom: 12px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-family: Inter;\r\n    font-size: 14px;\r\n    text-align: left;\r\n    color: #252525;\r\n    margin-top: 12px;\r\n    margin-bottom: 17px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    font-family: Inter;\r\n    font-size: 18px;\r\n    text-align: left;\r\n    color: #2a2a2a;\r\n    margin-top: 19px;\r\n    margin-bottom: 28px;\r\n  }\r\n`;\r\nconst ImageViewInputData = styled.img`\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  padding-bottom: 30px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 22px;\r\n    padding-bottom: 17px;\r\n    margin-left: -4px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 22px;\r\n  }\r\n`;\r\nconst ImageView = styled.img`\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  cursor: pointer;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  // @media (min-width: 768px) and (max-width: 1240px) {\r\n  //   width: 0.875rem;\r\n  //   height: 0.875rem;\r\n  // }\r\n`;\r\nconst StatusContainer = styled.div`\r\n  max-width: 10.75rem;\r\n  width: 100%;\r\n  border-right: 1px solid #e3e7eb;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n  //   width: 14px;\r\n  //   height: 14px;\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    max-width: 41.5rem;\r\n    width: 100%;\r\n    border-right: none;\r\n    border-bottom: 1px solid #e3e7eb;\r\n    padding-bottom: 30px;\r\n  }\r\n`;\r\nconst StatusImgContainer = styled.div`\r\n  width: 58px;\r\n  margin: 44px auto 10px auto;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    margin: 21px auto 10px auto;\r\n  }\r\n`;\r\nconst StatusContainerInside = styled.div`\r\n  width: 100px;\r\n  margin: auto;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    padding-top: 1px;\r\n  }\r\n`;\r\nconst StatusImg = styled.img`\r\n  width: 58px;\r\n  align-item: center;\r\n`;\r\nconst StatusTextSuccess = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: center;\r\n  color: #03be46;\r\n`;\r\nconst StatusTextFailed = styled.div`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n\r\n  text-align: center;\r\n  color: red;\r\n`;\r\nconst SeeMoreContainer = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n`;\r\nconst SeeMoreText = styled.div`\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n\r\n  color: #4878ff;\r\n  margin-left: 4px;\r\n  margin-right: 5px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\nconst ImgSeeMore = styled.img`\r\n  display: flex;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    height: 15px;\r\n    margin-top: 2px;\r\n  }\r\n`;\r\nconst ImgSeeLess = styled.img`\r\n  display: flex;\r\n  transform: rotate(180deg);\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    height: 15px;\r\n    margin-top: 2px;\r\n  }\r\n`;\r\nconst TxnDetailsRightContainer = styled.div`\r\n  width: 100%;\r\n  padding-left: 21px;\r\n  padding-right: 25px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n`;\r\nconst TxnDetailsRightBottomContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 32px;\r\n  padding-bottom: 25px;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    flex-flow: row wrap;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    flex-flow: row wrap;\r\n    padding-top: 0px;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\nconst TxnDetailsRightTopContainer = styled.div`\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  padding-top: 22px;\r\n`;\r\nconst DetailsContainer = styled.div`\r\n  display: block;\r\n  // @media (min-width: 0px) and (max-width: 767px) {\r\n\r\n  // }\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    padding-top: 29px;\r\n  }\r\n`;\r\nconst DetailsMiddleContainer = styled.div`\r\n  margin-left: 4px;\r\n  display: flex;\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n\r\n  color: #3a3a3a;\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    justify-content: space-between;\r\n    padding-top: 10px;\r\n    margin-right: 22px;\r\n  }\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: block;\r\n    padding-top: 10px;\r\n    color: #2a2a2a;\r\n    padding-right: 15px;\r\n  }\r\n`;\r\nconst BlockConfirmation = styled.div`\r\n  margin-left: 4px;\r\n  display: flex;\r\n  font-family: Inter;\r\n  font-size: 13px;\r\n\r\n  color: #2149b9;\r\n  background-color: #e2eaff;\r\n  padding-left: 8px;\r\n  padding-right: 10px;\r\n  border-radius: 4px;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n`;\r\n\r\nconst DivCircle = styled.div`\r\n  max-width: 36px;\r\n  height: 36px;\r\n  width: 100%;\r\n  border-radius: 50%;\r\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  margin: auto;\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    margin-top: 34px;\r\n    margin-bottom: 33px;\r\n  }\r\n`;\r\n\r\nconst ImgNextArrow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 12px;\r\n  @media (min-width: 0px) and (max-width: 1240px) {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding-top: 0px;\r\n    transform: rotate(90deg);\r\n    padding-left: 17px;\r\n  }\r\n`;\r\nconst AddTagContainer = styled.div`\r\n  background-color: #4878ff;\r\n  display: flex;\r\n  width: 95px;\r\n  padding: 3px 0 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin-top: 2px;\r\n  margin-left: 4px;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\nconst ImgAddTag = styled.div`\r\n  margin-right: 4px;\r\n`;\r\nconst AddTagtext = styled.div`\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  padding: 2px 5px 3px 5px;\r\n  border-radius: 4px;\r\n  border: solid 1px #d2deff;\r\n  background-color: #eaf0ff;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n\r\n  text-align: center;\r\n  color: #4878ff;\r\n  width: fit-content;\r\n  margin-top: 2px;\r\n  margin-left: 4px;\r\n`;\r\nconst TabTag = styled.div`\r\n  width: 180px;\r\n`;\r\nconst MobileDesktopTag = styled.div`\r\n  padding-top: 10px;\r\n`;\r\nconst AddLabel = styled.div`\r\n  display: flex;\r\n  flex-flow: wrap;\r\n`;\r\nconst AddLabelText = styled.div`\r\n  margin-right: 8px;\r\n  white-space: nowrap;\r\n`;\r\n"],"sourceRoot":""}