{"version":3,"sources":["modules/tokenList/tokenList.js","assets/images/XDC-Alert.svg","modules/common/pageSelector.js","services/token.js","modules/common/configureColumnsPopOver.js","modules/common/configureColumnsModal.js"],"names":["Responsive","styled","div","Pagination","RightPagination","LeftPagination","Show","Record","useStyles","makeStyles","rootui","borderRadius","marginLeft","marginRight","container","boxShadow","borderBottom","background","tableFirstHeading","border","paddingLeft","tableFirstData","divider","borderTop","width","marginTop","StickyHeadTable","props","classes","React","useState","from","setFrom","amount","setAmount","isLoading","setLoading","totalToken","setTotalToken","keywords","setKeywords","rows","setRows","sortKey","setSortKey","sortOrder","setSortOrder","token","useParams","noData","setNoData","handleChangePage","action","data","searchKey","skip","limit","page","getTokenList","handleSearchKeyUp","event","searchkeyword","target","value","length","a","Utility","parseResponse","TokenData","getTokenLists","error","responseData","tokens","totalCount","console","anchorEl","setAnchorEl","isColumnsModalOpen","setColumnsModal","isSettingColumnOpen","Boolean","handleSettingsClick","currentTarget","toggleModal","handleOnClose","shorten","b","amountL","amountR","stars","slice","repeat","sortTable","_sortKey","includes","useEffect","TokenTitle","NoDataFoundContainer","style","backgroundColor","method","onKeyPress","e","key","preventDefault","className","window","innerWidth","justifyContent","alignItems","height","src","onChange","id","type","placeholder","onClick","isOpen","tableColumns","state","toggleTableColumns","onModalClose","elevation","align","placement","title","messages","SI_NO","alt","isActive","SYMBOL","NAME","CONTRACT","whiteSpace","TOKEN_TOTAL_SUPPLY","HOLDER","colspan","map","row","index","totalsupply","utility","divideByDecimalValue","totalSupply","decimals","supply","format","convertToInternationalCurrencySystem","supply1","toString","split","supply2","regex","RegExp","splittedArray","match","supply4","text","tokenName","hover","role","tabIndex","_id","location","href","address","symbol","navigateToTokenDetails","tokenImage","paddingleft","parseFloat","color","holdersCount","require","handler","Math","ceil","module","exports","PageSelect","Select","PageSelector","displayEmpty","getHeaders","httpConstants","CONTENT_TYPE","APPLICATION_JSON","process","url","httpService","METHOD_TYPE","GET","then","response","success","responseCode","Promise","resolve","reject","catch","err","API_END_POINT","GET_TOKEN_LIST","POST","path","pageNum","perpage","searchkey","addr","searchValue","startDate","CoinMarketExchangeForToken","getTotalToken","getSomeDaysHolders","getTokenSearch","getHolderDetailsUsingAddressforToken","getTransferTransactionDetailsUsingHash","getTotalTransferTransactionsForToken","getListOfTransferTransactionsForToken","getListOfHoldersForToken","theme","paperWidthSm","maxWidth","ConfigureColumnsPopOver","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Object","keys","toolTipText","margin","ConfigureColumnsModal","aria-labelledby"],"mappings":"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","file":"static/js/8.35de29a6.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\nimport \"../../assets/styles/custom.css\";\nimport FooterComponent from \"../common/footerComponent\";\nimport Utility from \"../../utility\";\nimport TokenData from \"../../services/token\";\nimport styled from \"styled-components\";\nimport Loader from \"../../assets/loader\";\nimport utility from \"../../utility\";\nimport ConfigureColumnPopOver from \"../common/configureColumnsPopOver\";\nimport { Column, Row } from \"simple-flexbox\";\nimport ConfigureColumnsModal from \"../common/configureColumnsModal\";\nimport format from \"format-number\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { messages } from \"../../constants\";\n\nimport { useParams } from \"react-router-dom\";\nimport PageSelector from \"../common/pageSelector\";\n\nconst Responsive = styled.div`\n  max-width: 1220px;\n  width: 100%;\n  margin: 0 auto;\n  @media (min-width: 0px) and (max-width: 767px) {\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n`;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  width: 75.125rem;\n  margin: 28px auto 0 auto;\n\n  @media (min-width: 0px) and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    width: 21rem;\n    margin: 25px auto 25px 0;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    width: 41.5rem;\n    margin: 28px auto 60px auto;\n  }\n`;\nconst RightPagination = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-right: 0%;\n  }\n`;\nconst LeftPagination = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-flow: row nowrap; \n\n  @media (min-width: 0px) and (max-width: 767px) {\n    width: 180px;\n    margin-bottom: 25px;\n  }\n  @media (min-width: 768px) and (max-width: 1240px) {\n    margin-right: 5%;\n  }\n`;\nconst Show = styled.div`\n  font-size: 0.875rem;\n  font-weight: 600;\n  margin: auto;\n  padding-bottom: 2px;\n`;\nconst Record = styled.div`\n  font-size: 0.875rem;\n  font-weight: 600;\n  margin: auto;\n  padding-bottom: 2px;\n`;\n// function capitalize(text) {\n//   return text.charAt(0).toUpperCase() + text.slice(1);\n// }\n\nconst useStyles = makeStyles({\n  rootui: {\n    borderRadius: \"0.875rem\",\n    marginLeft: \"18%\",\n    marginRight: \"18%\",\n  },\n  container: {\n    borderRadius: \"0.875rem\",\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\n    borderBottom: \"none\",\n    background: \"#fff\",\n  },\n  tableFirstHeading: {\n    border: \"none\",\n    paddingLeft: \"75px !important\",\n  },\n  tableFirstData: {\n    paddingLeft: \"75px !important\",\n  },\n  divider: {\n    borderTop: \"0rem solid #bbb\",\n    width: \"100%\",\n  },\n\n  // \"@media (max-width: 1240px)\": {\n  //     container: {\n  //         marginTop: \"7px !important\",\n  //     },\n  // },\n  \"@media (max-width: 767px)\": {\n    container: {\n      marginTop: \"0px\",\n    },\n  },\n\n  \"@media (max-width: 1240px)\": {\n    tableFirstHeading: {\n      paddingLeft: \"32px !important\",\n    },\n    tableFirstData: {\n      paddingLeft: \"32px !important\",\n    },\n    container: {\n      marginTop: \"7px\",\n    },\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [from, setFrom] = React.useState(0);\n  const [amount, setAmount] = React.useState(10);\n  const [isLoading, setLoading] = React.useState(true);\n  const [totalToken, setTotalToken] = React.useState(0);\n  const [keywords, setKeywords] = React.useState(\"\");\n  const [rows, setRows] = React.useState([]);\n  const [sortKey, setSortKey] = React.useState(\"\");\n  const [sortOrder, setSortOrder] = React.useState(0);\n  let { token } = useParams();\n\n  const [noData, setNoData] = React.useState(true);\n  const handleChangePage = (action) => {\n    let data = { searchKey: keywords ? keywords : \"\" };\n    if (sortKey && sortOrder)\n      data.sortKey = { [sortKey]: sortOrder };\n    // if (sortedByHolderCount)\n    //     data.sortKey = {holdersCount: sortedByHolderCount};\n    if (!keywords)\n      setNoData(false);\n    if (action === \"first\") {\n      setFrom(0);\n      data.skip = 0;\n      data.limit = amount;\n    }\n    if (action === \"prev\") {\n      if (from - amount >= 0) {\n        let page = from - amount;\n        setFrom(page);\n        data.skip = page;\n        data.limit = amount;\n      }\n    }\n    if (action === \"next\") {\n      if (+amount + +from < totalToken) {\n        let page = +amount + +from;\n        setFrom(page);\n        data.skip = page;\n        data.limit = amount;\n      }\n    }\n\n    if (action === \"last\") {\n      let page = totalToken - amount;\n      setFrom(page);\n      data.skip = page;\n      data.limit = amount;\n    }\n    getTokenList(data);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setFrom(0);\n    setAmount(event.target.value);\n    setSortKey('');\n    setSortOrder(0);\n    setFrom(0);\n    let data = {\n      skip: 0,\n      limit: event.target.value,\n      searchKey: keywords ? keywords : '',\n    };\n    if (!keywords)\n      setNoData(false);\n    getTokenList(data);\n  };\n  const handleSearchKeyUp = (event) => {\n    let searchkeyword = event?.target?.value;\n    setSortKey(\"\");\n    setSortOrder(0);\n    if (searchkeyword?.length > 1) {\n      setKeywords(searchkeyword);\n      setLoading(false);\n      let data = { skip: 0, limit: amount, searchKey: searchkeyword };\n      data['sortKey'] = { \"holdersCount\": -1 }\n      getTokenList(data);\n    }\n    if (searchkeyword?.length === 0) {\n      setKeywords(\"\");\n      setLoading(false);\n      setNoData(false);\n      let data = { skip: from, limit: amount, searchKey: '' };\n      data['sortKey'] = { \"holdersCount\": -1 }\n      getTokenList(data);\n    }\n  };\n  const getTokenList = async (data) => {\n    try {\n      const [error, responseData] = await Utility.parseResponse(\n        TokenData.getTokenLists(data)\n      );\n      if (error) return;\n      if (responseData) {\n        setNoData(false);\n        setLoading(false);\n        setRows(responseData?.tokens);\n        setTotalToken(responseData?.totalCount);\n      } else {\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // const getTotalTokenList = async () => {\n  //     try {\n  //         const [error, responseData] = await Utility.parseResponse(\n  //             TokenData.getTotalToken()\n  //         );\n  //         if (error) return;\n  //         if (responseData) {\n  //             setNoData(false);\n  //             setTotalToken(responseData);\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // };\n  // const SearchTokens = async (data) => {\n  //     try {\n  //         const [error, responseData] = await Utility.parseResponse(\n  //             TokenData.getTokenSearch(data)\n  //         );\n  //         if (error) return;\n  //         if (responseData.total === 0) {\n  //             setNoData(true);\n  //             setTotalToken(0);\n  //             setRows([]);\n  //         }\n  //\n  //         if (responseData.total > 0) {\n  //             setNoData(false);\n  //             setTotalToken(responseData.total);\n  //             setLoading(false);\n  //             setRows(responseData.resultSet);\n  //             //alert(responseData.length)\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // };\n\n  let [anchorEl, setAnchorEl] = React.useState();\n  let [isColumnsModalOpen, setColumnsModal] = React.useState(false);\n  let isSettingColumnOpen = Boolean(anchorEl);\n\n  function handleSettingsClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function toggleModal() {\n    setColumnsModal(!isColumnsModalOpen);\n  }\n\n  function handleOnClose() {\n    setAnchorEl(null);\n  }\n\n  React.useEffect(() => {\n    let unmounted = false;\n    let data = { skip: from, limit: amount, searchKey: token ? token : '' };\n    data['sortKey'] = { \"holdersCount\": -1 }\n    getTokenList(data);\n    // return () => {\n    //     unmounted = true;\n    // };\n    sortTable(\"holdersCount\");\n  }, []);\n\n  function shorten(b, amountL = 10, amountR = 4, stars = 3) {\n    return `${b.slice(0, amountL)}${\".\".repeat(stars)}${b.slice(\n      b.length - amountR,\n      b.length\n    )}`;\n  }\n\n  async function sortTable(_sortKey) {\n    let data = { skip: from, limit: amount, searchKey: keywords }\n    if (sortKey && sortKey.includes(_sortKey)) {\n      data['sortKey'] = { [_sortKey]: -1 * sortOrder }\n      setSortOrder(-1 * sortOrder);\n    } else {\n      setSortKey(_sortKey)\n      setSortOrder(-1)\n      data['sortKey'] = { [_sortKey]: -1 }\n    }\n    getTokenList(data);\n  }\n\n  const navigateToTokenDetails = (row) => {\n    window.location.href = `/token-data/${row.address}/${row?.symbol ? row?.symbol : \"NA\"\n      }`\n  }\n\n  // async function sortByHoldersCount() {\n  //     setSortedByTotalSupply(0);\n  //     let data = {skip: from, limit: amount, searchKey: keywords}\n  //     if (!sortedByHolderCount) {\n  //         setSortedByHolderCount(-1);\n  //         data['sortKey'] = {\"holdersCount\": -1}\n  //     } else if (sortedByHolderCount === -1) {\n  //         setSortedByHolderCount(1);\n  //         data['sortKey'] = {\"holdersCount\": 1}\n  //     } else {\n  //         setSortedByHolderCount(-1);\n  //         data['sortKey'] = {\"holdersCount\": -1}\n  //     }\n  //     getTokenList(data);\n  // }\n\n  const TokenTitle = styled.div`\n    font-family: Inter;\n    font-size: 24px;\n    font-weight: 600;\n    color: #2a2a2a;\n    margin-bottom: 22px;\n      @media (max-width: 1250px) {\n        font-size: 18px;\n        margin-bottom: 12px;\n      }\n      @media (max-width: 767px) {\n        font-size: 14px;\n        color: #252525;\n        margin-bottom: 12px;\n      }\n    `;\n\n  const NoDataFoundContainer = styled.div`\n      display: flex;\n      flex-flow: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: 100px;\n      gap: 10px;\n      @media (min-width: 767px) {\n        margin: 100px 0 !important;\n      }\n    `;\n\n  return (\n    <div style={{ backgroundColor: \"#fff\" }}>\n      <Tokensearchbar />\n      <Responsive>\n        <form\n          method=\"post\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            }\n          }}\n        >\n\n          <Column\n            className={\n              \"responsive-table-width-token-list token-list-tab_11 search-container\"\n            }\n          >\n            {window.innerWidth >= 768 ?\n              <>\n                <TokenTitle>Tokens</TokenTitle>\n                <Row justifyContent=\"space-between\" alignItems=\"center\">\n                  <div className=\"searchelement-input input-searchelement_11\">\n                    <img\n                      style={{\n                        width: 18,\n                        height: 18,\n                        marginRight: 2,\n                      }}\n                      src={\"/images/Search.svg\"}\n                    />\n\n                    <input\n                      onChange={(e) => {\n\n                        handleSearchKeyUp(e);\n\n                      }}\n                      // onChange={(e) => {\n                      //   if (e.target.value == \"\") {\n                      //     handleSearchKeyUp(e);\n                      //   }\n                      // }}\n                      id=\"tokenSearch\"\n                      className=\"account-searchbar\"\n                      type=\"text\"\n                      placeholder=\"Search\"\n                    />\n                  </div>\n                  <div className=\"display-none-mobile display-flex flex-direction-column w-100 margin-0 justify-content-end align-items-end\">\n                    <img\n                      onClick={handleSettingsClick}\n                      className=\"h-20 w-20-px cursor-pointer m-r-9\"\n                      src=\"/images/settings.svg\"\n                    />\n                    <ConfigureColumnPopOver\n                      isOpen={isSettingColumnOpen}\n                      anchorEl={anchorEl}\n                      handleOnClose={handleOnClose}\n                      tableColumns={props.state.tableColumns}\n                      toggleTableColumns={props.toggleTableColumns}\n                    />\n                  </div>\n                  <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\n                    <img\n                      onClick={toggleModal}\n                      className=\"h-20 w-20-px cursor-pointer\"\n                      src=\"/images/settings.svg\"\n                    />\n                    <ConfigureColumnsModal\n                      isOpen={isColumnsModalOpen}\n                      onModalClose={toggleModal}\n                      tableColumns={props.state.tableColumns}\n                      toggleTableColumns={props.toggleTableColumns}\n                    />\n                  </div>\n                </Row></> : (<>\n                  <Row justifyContent=\"space-between\" alignItems=\"center\">\n                    <TokenTitle>Tokens</TokenTitle>\n                    <div className=\"display-none-mobile display-flex flex-direction-column w-100 margin-0 justify-content-end align-items-end\">\n                      <img\n                        onClick={handleSettingsClick}\n                        className=\"h-16 w-16-px cursor-pointer m-t_-7\"\n                        src=\"/images/settings.svg\"\n                      />\n                      <ConfigureColumnPopOver\n                        isOpen={isSettingColumnOpen}\n                        anchorEl={anchorEl}\n                        handleOnClose={handleOnClose}\n                        tableColumns={props.state.tableColumns}\n                        toggleTableColumns={props.toggleTableColumns}\n                      />\n                    </div>\n                    <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\n                      <img\n                        onClick={toggleModal}\n                        className=\"h-16 w-16-px cursor-pointer m-t_-7\"\n                        src=\"/images/settings.svg\"\n                      />\n                      <ConfigureColumnsModal\n                        isOpen={isColumnsModalOpen}\n                        onModalClose={toggleModal}\n                        tableColumns={props.state.tableColumns}\n                        toggleTableColumns={props.toggleTableColumns}\n                      />\n                    </div>\n                  </Row>\n                  <div className=\"searchelement-input input-searchelement_11\">\n                    <img\n                      style={{\n                        width: 18,\n                        height: 18,\n                        marginRight: 2,\n                        marginTop: -1,\n                      }}\n                      src={\"/images/Search.svg\"}\n                    />\n\n                    <input\n                      onChange={(e) => {\n\n                        handleSearchKeyUp(e);\n\n                      }}\n                      // onChange={(e) => {\n                      //   if (e.target.value == \"\") {\n                      //     handleSearchKeyUp(e);\n                      //   }\n                      // }}\n                      id=\"tokenSearch\"\n                      className=\"account-searchbar\"\n                      type=\"text\"\n                      placeholder=\"Search\"\n                    />\n                  </div>\n                </>)}\n\n          </Column>\n        </form>\n        {/* </div> */}\n        {/* </div> */}\n\n        <br />\n\n        <Paper\n          className={\"responsive-table-width-token-list token-list-tab_11\"}\n          style={{\n            borderRadius: \"0.875rem\",\n            // marginLeft: \"18%\",\n            // marginRight: \"18%\",\n          }}\n          elevation={0}\n        >\n          <TableContainer\n            className={classes.container}\n            id=\"container-table-token\"\n            style={{\n              borderRadius: \"0.75rem\",\n              border: \"solid 0.063rem #e3e7eb\",\n              backgroundColor: \"#ffffff\",\n              boxShadow: \"0 0.063rem 0.625rem 0 rgba(0 0, 0, 0.,1)\",\n            }}\n          >\n            <Table style={{ borderBottom: \"none\" }}>\n              <TableHead style={{ borderBottom: \"0.063rem solid #e5e8f0\" }}>\n                <TableRow>\n                  <TableCell\n                    style={{ border: \"none\", }}\n                    align=\"left\"\n                  >\n                    <span className={\"tablehead-token-details\"}>\n                      #\n                      <Tooltip placement=\"top\" title={messages.SI_NO}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                  </TableCell>\n                  {props?.state?.tableColumns[\"Symbol\"].isActive && (\n                    <TableCell style={{ border: \"none\" }} align=\"left\">\n                      <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"symbol\")}>\n                        Symbol\n                        <Tooltip placement=\"top\" title={messages.SYMBOL}>\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/info.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          />\n                        </Tooltip>\n                        {sortKey && sortKey === \"symbol\" ? (\n                          sortOrder === -1 ? <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          /> :\n                            <img\n                              alt=\"question-mark\"\n                              src=\"/images/see-more.svg\"\n                              height={\"14px\"}\n                              className=\"tooltipInfoIcon rotate-180\"\n                            />) : \"\"}\n                      </span>\n                    </TableCell>\n                  )}\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\n                    <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"tokenName\")}>\n                      Name\n                      <Tooltip placement=\"top\" title={messages.NAME}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                      {sortKey && sortKey === \"tokenName\" ? (\n                        sortOrder === -1 ? <img\n                          alt=\"question-mark\"\n                          src=\"/images/see-more.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        /> :\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon rotate-180\"\n                          />) : \"\"}\n                    </span>\n                  </TableCell>\n                  {/* {props?.state?.tableColumns[\"Type\"].isActive && (\n                                    <TableCell\n                                        style={{border: \"none\", whiteSpace: \"nowrap\"}}\n                                        align=\"left\"\n                                    >\n                    <span className={\"tablehead-token-details\"}>\n                      Type\n                      <Tooltip placement=\"top\" title={messages.TOKEN_TYPE}>\n                        <img\n                            alt=\"question-mark\"\n                            src=\"/images/info.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                    </span>\n                                    </TableCell>\n                                )} */}\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\n                    <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"address\")}>\n                      Contract\n                      <Tooltip placement=\"top\" title={messages.CONTRACT}>\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                      {sortKey && sortKey === \"address\" ? (\n                        sortOrder === -1 ? <img\n                          alt=\"question-mark\"\n                          src=\"/images/see-more.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        /> :\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon rotate-180\"\n                          />) : \"\"}\n                    </span>\n                  </TableCell>\n\n                  <TableCell\n                    style={{ border: \"none\", whiteSpace: \"nowrap\" }}\n                    align=\"left\"\n                  >\n                    <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"totalSupply\")}>\n                      Total Supply\n                      <Tooltip\n                        placement=\"top\"\n                        title={messages.TOKEN_TOTAL_SUPPLY}\n                      >\n                        <img\n                          alt=\"question-mark\"\n                          src=\"/images/info.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        />\n                      </Tooltip>\n                      {sortKey && sortKey === \"totalSupply\" ? (\n                        sortOrder === -1 ? <img\n                          alt=\"question-mark\"\n                          src=\"/images/see-more.svg\"\n                          height={\"14px\"}\n                          className=\"tooltipInfoIcon\"\n                        /> :\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon rotate-180\"\n                          />) : \"\"}\n                    </span>\n                  </TableCell>\n                  {props?.state?.tableColumns[\"Total Holders\"].isActive && (\n                    <TableCell\n                      style={{ border: \"none\", whiteSpace: \"nowrap\" }}\n                      align=\"left\"\n                    >\n                      <span className={\"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"holdersCount\")}>\n                        Total Holders\n                        <Tooltip placement=\"top\" title={messages.HOLDER}>\n                          <img\n                            alt=\"question-mark\"\n                            src=\"/images/info.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          />\n                        </Tooltip>\n                        {sortKey && sortKey === \"holdersCount\" ? (\n                          sortOrder === -1 ? <img\n                            alt=\"question-mark\"\n                            src=\"/images/see-more.svg\"\n                            height={\"14px\"}\n                            className=\"tooltipInfoIcon\"\n                          /> :\n                            <img\n                              alt=\"question-mark\"\n                              src=\"/images/see-more.svg\"\n                              height={\"14px\"}\n                              className=\"tooltipInfoIcon rotate-180\"\n                            />) : \"\"}\n                      </span>\n                    </TableCell>\n                  )}\n                </TableRow>\n              </TableHead>\n              {isLoading == true ? (\n                <TableBody>\n                  <TableRow>\n                    <TableCell style={{ border: \"none\" }} colspan=\"8\">\n                      <div className=\"loader-token-list\">\n                        <Loader />\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              ) : (\n                noData == false && (\n                  <TableBody>\n                    {rows?.map((row, index) => {\n                      let totalsupply = utility.divideByDecimalValue(\n                        row?.totalSupply,\n                        row?.decimals\n                      );\n                      const supply =\n                        utility.divideByDecimalValue(\n                          row?.totalSupply,\n                          row?.decimals\n                        ) >= 1\n                          ? format({})(\n                            utility.convertToInternationalCurrencySystem(\n                              utility.divideByDecimalValue(\n                                row?.totalSupply,\n                                row?.decimals\n                              )\n                            )\n                          )\n                          : utility.divideByDecimalValue(\n                            row?.totalSupply,\n                            row?.decimals\n                          );\n                      var supply1 = supply.toString().split(\".\")[0];\n                      var supply2 = supply.toString().split(\".\")[1];\n                      var regex = new RegExp(\"([0-9]+)|([a-zA-Z]+)\", \"g\");\n                      var splittedArray = supply2?.match(regex);\n\n                      var supply4 =\n                        splittedArray && splittedArray.length\n                          ? splittedArray[0]\n                          : 0;\n                      var text =\n                        splittedArray && splittedArray.length\n                          ? splittedArray[1]\n                          : 0;\n                      let tokenName =\n                        row?.tokenName?.length <= 15 ||\n                          row?.tokenName?.length == 0\n                          ? row?.tokenName\n                          : shorten(row?.tokenName, 15, 0, 3);\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={row._id}\n                          onClick={() => navigateToTokenDetails(row)}\n                        >\n                          <TableCell id=\"td\">\n                            {index + 1}\n                          </TableCell>\n\n                          {props?.state?.tableColumns[\"Symbol\"].isActive && (\n                            <TableCell id=\"td\">\n                              {row?.tokenImage ?\n                                <img\n                                  style={{ height: \"20px\", width: \"20px\" }}\n                                  src={row?.tokenImage}\n                                ></img> :\n                                <img\n                                  style={{ height: \"20px\", width: \"20px\" }}\n                                  src={\"/images/XRC20-Icon.svg\"}\n                                ></img>}\n                              &nbsp;{row.symbol}\n                            </TableCell>\n                          )}\n\n                          <TableCell id=\"td\" style={{ whiteSpace: \"nowrap\" }}>\n                            {tokenName}\n                          </TableCell>\n                          {/* {props?.state?.tableColumns[\"Type\"].isActive && (\n                                                    <TableCell id=\"td\">{row.type}</TableCell>\n                                                )} */}\n\n                          <TableCell>\n                            <a\n                              className=\"token-details-address-link\"\n                              href={`/token-data/${row.address}/${row?.symbol ? row?.symbol : \"NA\"\n                                }`}\n                            >\n                              {shorten(row.address)}\n                            </a>\n                          </TableCell>\n\n\n                          <TableCell id=\"td\" style={{ paddingleft: \"15\" }}>\n                            <Tooltip\n                              placement=\"top\"\n                              title={format({})(\n                                totalsupply >= 1\n                                  ? parseFloat(totalsupply)\n                                  : totalsupply == 0\n                                    ? parseFloat(totalsupply)\n                                    : totalsupply\n                              )}\n                            >\n                              <span>\n                                {supply4 === 0 || supply4 == null ? (\n                                  <span className=\"tabledata\">{supply1}</span>\n                                ) : (\n                                  <span className=\"tabledata\">\n                                    {supply1}\n                                    {\".\"}\n                                    <span style={{ color: \"#9FA9BA\" }}>\n                                      {supply4}\n                                    </span>\n                                    {text}\n                                  </span>\n                                )}\n                              </span>\n                            </Tooltip>\n                          </TableCell>\n                          {props?.state?.tableColumns[\"Total Holders\"]\n                            .isActive && (\n                              <TableCell id=\"td\" style={{ paddingleft: \"15\" }}>\n                                {format({})(row.holdersCount)}\n                              </TableCell>\n                            )}\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                )\n              )}\n              {/* {noData == true && (\n              <TableBody>\n                <TableCell id=\"td\" style={{ borderBottom: \"none\" }}>\n                  <span\n                    style={{ textAlign: \"center\", color: \"#2a2a2a\" }}\n                    className=\"tabledata\"\n                  >\n                    No data found.\n                  </span>\n                </TableCell>\n              </TableBody>\n            )} */}\n            </Table>\n            {noData == true && !isLoading ? (\n              <NoDataFoundContainer>\n                <img\n                  src={require(\"../../../src/assets/images/XDC-Alert.svg\")}\n                ></img>\n\n                <div style={{ color: \"#c6cbcf\" }}>No Tokens found</div>\n              </NoDataFoundContainer>\n            ) : (\n              \"\"\n            )}\n          </TableContainer>\n\n          {/* <Divider className={classes.divider}/>*/}\n        </Paper>\n\n        <Pagination>\n          <LeftPagination>\n            {!noData == true && !isLoading ? (<>\n              <Show>\n                Show\n              </Show>\n              <PageSelector value={amount}\n                height={30}\n                handler={handleChangeRowsPerPage} />\n              <Record>\n                Records\n              </Record></>) : (\"\")}\n          </LeftPagination>\n\n          <RightPagination>\n            <div\n              className={\n                from === 0 ? \"firstbox-contract disabled\" : \"firstbox-contract\"\n              }\n              onClick={() => handleChangePage(\"first\")}\n            >\n              <button\n                style={{ backgroundColor: \"white\" }}\n                className=\"first-contract\"\n              >\n                First\n              </button>\n            </div>\n            <div\n              className={\n                from === 0\n                  ? \"previousbox-contract disabled\"\n                  : \"previousbox-contract\"\n              }\n              onClick={() => handleChangePage(\"prev\")}\n            >\n              <img className=\"navigation-arrow\" src={\"/images/back.svg\"} />\n\n              {/* <p className=\"path-contract\">{\"<\"}</p> */}\n            </div>\n            <div className=\"pagebox-contract\">\n              <p className=\"Page-1-of-5-contract\">\n                Page{\" \"}\n                {Math.ceil(totalToken / amount) -\n                  Math.ceil((totalToken - from) / amount) +\n                  1}{\" \"}\n                of {Math.ceil(totalToken / amount)}\n              </p>\n            </div>\n            <div\n              className={\n                from + amount === totalToken\n                  ? \"nextbox-contract disabled\"\n                  : \"nextbox-contract\"\n              }\n              onClick={() => handleChangePage(\"next\")}\n            >\n              <img className=\"navigation-arrow\" src={\"/images/next.svg\"} />\n            </div>\n            <div\n              className={\n                from + amount === totalToken\n                  ? \"lastbox-contract disabled\"\n                  : \"lastbox-contract\"\n              }\n              onClick={() => handleChangePage(\"last\")}\n            >\n              <button\n                style={{ backgroundColor: \"white\" }}\n                className=\"last-contract\"\n              >\n                Last\n              </button>\n            </div>\n          </RightPagination>\n        </Pagination>\n      </Responsive>\n      <FooterComponent />\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/XDC-Alert.2cb87ec5.svg\";","import Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport styled from \"styled-components\";\nimport React from \"react\";\n\n\nconst PageSelect = styled(Select)`\n  width: 100%;\n  height: ${({ height }) => height}px;\n  margin: 0 10px;\n  \n  legend {\n    float: left;\n  }\n`\nconst PageSelector = ({ value, handler, height = 35 }) => {\n  return (<PageSelect\n    value={value}\n    onChange={(event) => handler(event)}\n    displayEmpty\n    height={height}\n  >\n    <MenuItem value=\"\">\n      <em>Select</em>\n    </MenuItem>\n    <MenuItem value={10}>10</MenuItem>\n    <MenuItem value={25}>25</MenuItem>\n    <MenuItem value={50}>50</MenuItem>\n    <MenuItem value={75}>75</MenuItem>\n    <MenuItem value={100}>100</MenuItem>\n  </PageSelect>)\n}\nexport default PageSelector","import { httpService } from \"../managers/httpService\";\nimport { httpConstants } from \"../constants\";\n\nexport default {\n  CoinMarketExchangeForToken,\n  getTokenLists,\n  getTotalToken,\n  getSomeDaysHolders,\n  getTokenSearch,\n  getHolderDetailsUsingAddressforToken,\n  getTransferTransactionDetailsUsingHash,\n  getTotalTransferTransactionsForToken,\n  getListOfTransferTransactionsForToken,\n  getListOfHoldersForToken,\n};\nfunction getHeaders() {\n  return {\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\n  };\n}\n\nasync function CoinMarketExchangeForToken(data) {\n  let url = process.env.REACT_APP_GET_TOKEN_MARKETCAP + \"/\" + data;\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenLists(data) {\n  let url = process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL + httpConstants.API_END_POINT.GET_TOKEN_LIST;//\"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage;\n  // let url = \"http://localhost:3007/getListOfTokens\";\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getSomeDaysHolders(path, data) {\n  let url = process.env.REACT_APP_GET_SOME_DAYS_HOLDERS + path;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTokenSearch(data) {\n  let url =\n    process.env.REACT_APP_GET_TOKEN_SEARCH +\n    \"?skip=\" +\n    Math.ceil(data.pageNum) +\n    \"&limit=\" +\n    data.perpage +\n    \"&data=\" +\n    data.searchkey;\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getTotalToken() {\n  let url = process.env.REACT_APP_GET_TOTAL_TOKEN;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nasync function getListOfTransferTransactionsForToken(data) {\n  // let url = \"http://localhost:3005/getListOfTransferTransactionsForToken/\"+data.addr;\n  let url = process.env.REACT_APP_GET_LIST_OF_TRANSFER_FOR_TOKEN + data.addr;\n  delete data.addr;\n    //+ \"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage + (data.searchValue ? \"&searchValue=\" + data.searchValue : \"\") + (data.startDate ? \"&startDate=\" + data.startDate : \"\");\n\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getTotalTransferTransactionsForToken(data) {\n    let url = process.env.REACT_APP_GET_TOTAL_TRANSFER_FOR_TOKEN + data.addr + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\n        + (data.startDate ? (data.searchValue ? \"&startDate=\" : \"?startDate=\") + data.startDate : \"\");\n\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getListOfHoldersForToken(data) {\n   let url = process.env.REACT_APP_GET_LIST_OF_HOLDERS_FOR_TOKEN + data.address;\n    // let url = \"http://localhost:3007/getListOfHoldersForToken/\"+data.address;\n    delete data.address;\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getTransferTransactionDetailsUsingHash(path, data) {\n  let url =\n    process.env.REACT_APP_GET_TRANSFER_TRANSACTION_DETAIL_USING_ADDRESS + path;\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\nasync function getHolderDetailsUsingAddressforToken(data) {\n  let url = process.env.REACT_APP_GET_HOLDER_DETAIL_USING_ADDRESS_FOR_TOKEN\n  // let url = \"http://localhost:3007/getHolderDetailsUsingAddress\"\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\n    .then((response) => {\n      if (\n        !response.success ||\n        response.responseCode !== 200 ||\n        !response.responseData ||\n        response.responseData.length === 0\n      )\n        return Promise.reject();\n      return Promise.resolve(response.responseData);\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n","import React from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paperWidthSm: {\n        maxWidth: \"320px\",\n        width: \"100%\",\n        borderRadius: \"8px\",\n    }\n}));\nfunction ConfigureColumnsPopOver(props) {\n    const classes = useStyles();\n\n    return (<Popover classes={{paperWidthSm: classes.paperWidthSm}}\n        open={props.isOpen}\n        anchorEl={props.anchorEl}\n        onClose={props.handleOnClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}>\n        <div className=\"w-320\">\n            <div className=\"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center\">Configure Columns</div>\n            <div className=\"margin-0 m-b-15 b-t-1\"/>\n            <div className=\"p-l-15 p-r-15\">\n                {\n                    props.tableColumns && Object.keys(props.tableColumns).map(key => {\n                        if (key !== 'Balance')\n                            return (\n                                <div className=\"display-flex justify-content-between p-b-25\">\n                                    <div className=\"display-flex\">\n                                        <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\n                                            <img className=\"tooltipInfoIconConfigDesk\"\n                                                 src=\"/images/info.svg\"></img>\n                                        </Tooltip>\n                                        <div className=\"p-l-5\">{key}</div>\n                                    </div>\n                                    <div onClick={() => props.toggleTableColumns(key)}>\n                                        {props.tableColumns[key].isActive ?\n                                            <img className=\"\" src=\"/images/active-switch.svg\"/> :\n                                            <img className=\"\" src=\"/images/inactive-switch.svg\"/>}\n                                    </div>\n                                </div>\n                            )\n                    })\n                }\n            </div>\n        </div>\n    </Popover>)\n}\n\nexport default ConfigureColumnsPopOver;","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paperWidthSm: {\n        maxWidth: \"320px\",\n        width: \"100%\",\n        borderRadius: \"8px\",\n        margin: \"20px\",\n    }\n}));\n\nfunction ConfigureColumnsModal(props) {\n    const classes = useStyles();\n    return (\n        <Dialog\n            className=\"\"\n            classes={{paperWidthSm: classes.paperWidthSm}}\n            open={props.isOpen}\n            onClose={props.onModalClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <div className=\"w-320\">\n                <div className=\"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center\">Configure Columns</div>\n                <div className=\"margin-0 m-b-15 b-t-1\"/>\n                <div className=\"p-l-15 p-r-15\">\n                    {\n                        props.tableColumns && Object.keys(props.tableColumns).map(key => {\n                            if (key !== 'Balance')\n                                return (\n                                    <div className=\"display-flex justify-content-between p-b-25\">\n                                        <div className=\"display-flex\">\n                                            <Tooltip align=\"right\" title={props.tableColumns[key].toolTipText}>\n                                                <img className=\"tooltipInfoIconConfigMob\"\n                                                    src=\"/images/info.svg\"></img>\n                                            </Tooltip>\n                                            <div className=\"p-l-12\">{key}</div>\n                                        </div>\n                                        <div onClick={() => props.toggleTableColumns(key)}>\n                                            {props.tableColumns[key].isActive ?\n                                                <img className=\"\" src=\"/images/active-switch.svg\" /> :\n                                                <img className=\"\" src=\"/images/inactive-switch.svg\" />}\n                                        </div>\n                                    </div>\n                                )\n                        })\n                    }\n                </div>\n            </div>\n        </Dialog>)\n}\n\nexport default ConfigureColumnsModal;"],"sourceRoot":""}