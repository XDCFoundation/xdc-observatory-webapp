{"version":3,"sources":["modules/tokenList/tokenList.js","assets/images/XDC-Alert.svg","modules/common/pageSelector.js","services/token.js","modules/common/configureColumnsPopOver.js","modules/common/configureColumnsModal.js"],"names":["Responsive","styled","div","Pagination","theme","RightPagination","LeftPagination","Show","Record","useStyles","makeStyles","rootui","borderRadius","marginLeft","marginRight","container","boxShadow","borderBottom","background","containerDark","tableFirstHeading","border","paddingLeft","tableFirstData","divider","borderTop","width","tokenTag","height","padding","backgroundColor","fontSize","color","marginTop","fontWeight","token_table_border_dark","customTooltip","customTooltipDarkMode","StickyHeadTable","props","classes","React","useState","from","setFrom","amount","setAmount","isLoading","setLoading","totalToken","setTotalToken","keywords","setKeywords","rows","setRows","visibleTokenCount","setVisibleTokenCount","sortKey","setSortKey","sortOrder","setSortOrder","token","useParams","noData","setNoData","snTT","setsnTT","symbolTT","setSymbolTT","nameTT","setNameTT","contractTT","setContractTT","totaSupplyTT","setTotalSupplyTT","totalHolderTT","setTotalHolderTT","transfer24hrTT","setTransfer24hrTT","transfer3dTT","setTransfer3dTT","ercvalue","sessionManager","getDataFromCookies","handleChangePage","action","data","isERC","searchKey","skip","limit","page","Math","ceil","getTokenList","handleSearchKeyUp","event","searchkeyword","target","value","length","a","Utility","parseResponse","TokenData","getTokenLists","error","responseData","tokens","totalCount","console","anchorEl","setAnchorEl","isColumnsModalOpen","setColumnsModal","isSettingColumnOpen","Boolean","handleSettingsClick","currentTarget","toggleModal","handleOnClose","shorten","b","amountL","amountR","stars","slice","repeat","sortTable","_sortKey","includes","useEffect","TokenTitle","NoDataFoundContainer","style","className","method","onKeyPress","e","key","preventDefault","window","innerWidth","justifyContent","alignItems","src","onChange","id","type","placeholder","onClick","isOpen","tableColumns","state","toggleTableColumns","onModalClose","elevation","align","placement","title","messages","SI_NO","tooltip","alt","open","onOpen","onClose","isActive","SYMBOL","NAME","CONTRACT","whiteSpace","TOKEN_TOTAL_SUPPLY","TOKEN_TRANSFER_24_HOURS","HOLDER","TOKEN_TRANSFER_3_DAYS","colspan","map","row","index","totalsupply","utility","divideByDecimalValue","totalSupply","decimals","supply","format","convertToInternationalCurrencySystem","Number","supply1","toString","split","supply2","regex","RegExp","splittedArray","match","supply4","text","tokenName","hover","role","tabIndex","_id","location","href","address","symbol","navigateToTokenDetails","tokenImage","paddingleft","parseFloat","transfers","last24Hour","holdersCount","last3days","require","handler","module","exports","dropdownStyle","PageSelect","Select","PageSelectDark","PageSelector","displayEmpty","MenuProps","paper","disabled","getHeaders","httpConstants","CONTENT_TYPE","APPLICATION_JSON","process","url","httpService","METHOD_TYPE","GET","then","response","success","responseCode","Promise","resolve","reject","catch","err","API_END_POINT","GET_TOKEN_LIST","POST","path","pageNum","perpage","searchkey","addr","searchValue","startDate","CoinMarketExchangeForToken","getTotalToken","getSomeDaysHolders","getTokenSearch","getHolderDetailsUsingAddressforToken","getTransferTransactionDetailsUsingHash","getTotalTransferTransactionsForToken","getListOfTransferTransactionsForToken","getListOfHoldersForToken","getListOfTokenForAddress","getTokenTransactions","paperWidthSm","maxWidth","ConfigureColumnsPopOver","openTT","setOpenTT","keyValue","setKeyValue","anchorOrigin","vertical","horizontal","transformOrigin","Object","keys","toolTipText","handleOpenTT","margin","ConfigureColumnsModal","aria-labelledby","log"],"mappings":"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","file":"static/js/8.e1a0a6d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tokensearchbar from \"../explorer/tokensearchBar\";\r\nimport \"../../assets/styles/custom.css\";\r\nimport FooterComponent from \"../common/footerComponent\";\r\nimport Utility from \"../../utility\";\r\nimport TokenData from \"../../services/token\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../assets/loader\";\r\nimport utility from \"../../utility\";\r\nimport ConfigureColumnPopOver from \"../common/configureColumnsPopOver\";\r\nimport { Column, Row } from \"simple-flexbox\";\r\nimport ConfigureColumnsModal from \"../common/configureColumnsModal\";\r\nimport format from \"format-number\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { messages } from \"../../constants\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport PageSelector from \"../common/pageSelector\";\r\nimport { sessionManager } from \"../../managers/sessionManager\";\r\n\r\nconst Responsive = styled.div`\r\n  max-width: 1220px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n  }\r\n`;\r\nconst Pagination = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  width: 75.125rem;\r\n  margin: 28px auto 0 auto;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    margin: 28px auto 60px auto;\r\n  `}\r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 21rem;\r\n    margin: 25px auto 25px 0;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    width: 41.5rem;\r\n    margin: 28px auto 60px auto;\r\n  }\r\n`;\r\nconst RightPagination = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    margin-right: 0%;\r\n  }\r\n`;\r\nconst LeftPagination = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  flex-flow: row nowrap; \r\n\r\n  @media (min-width: 0px) and (max-width: 767px) {\r\n    width: 180px;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media (min-width: 768px) and (max-width: 1240px) {\r\n    margin-right: 5%;\r\n  }\r\n`;\r\nconst Show = styled.div`\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  margin: auto;\r\n  padding-bottom: 2px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #adc4e4;\r\n  `}\r\n`;\r\nconst Record = styled.div`\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  margin: auto;\r\n  padding-bottom: 2px;\r\n  ${({ theme }) => theme === \"dark\" && `\r\n    color: #adc4e4;\r\n  `}\r\n`;\r\n// function capitalize(text) {\r\n//   return text.charAt(0).toUpperCase() + text.slice(1);\r\n// }\r\n\r\nconst useStyles = makeStyles({\r\n  rootui: {\r\n    borderRadius: \"0.875rem\",\r\n    marginLeft: \"18%\",\r\n    marginRight: \"18%\",\r\n  },\r\n  container: {\r\n    borderRadius: \"0.875rem\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#fff\",\r\n  },\r\n  containerDark: {\r\n    borderRadius: \"0.875rem\",\r\n    boxShadow: \"0 1px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    borderBottom: \"none\",\r\n    background: \"#192a59\",\r\n  },\r\n  tableFirstHeading: {\r\n    border: \"none\",\r\n    paddingLeft: \"75px !important\",\r\n  },\r\n  tableFirstData: {\r\n    paddingLeft: \"75px !important\",\r\n  },\r\n  divider: {\r\n    borderTop: \"0rem solid #bbb\",\r\n    width: \"100%\",\r\n  },\r\n  tokenTag: {\r\n    height: \"20px\",\r\n    padding: \"1px 6px 2px 7px\",\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#dfe3e8\",\r\n    fontSize: \"14px\",\r\n    color: \"#2a2a2a\",\r\n    marginTop: \"8px\",\r\n    marginLeft: \"8px\",\r\n    fontWeight: \"normal\"\r\n  },\r\n\r\n  // \"@media (max-width: 1240px)\": {\r\n  //     container: {\r\n  //         marginTop: \"7px !important\",\r\n  //     },\r\n  // },\r\n  \"@media (max-width: 767px)\": {\r\n    container: {\r\n      marginTop: \"0px\",\r\n    },\r\n    containerDark: {\r\n      marginTop: \"0px\",\r\n    },\r\n  },\r\n\r\n  \"@media (max-width: 1240px)\": {\r\n    tableFirstHeading: {\r\n      paddingLeft: \"32px !important\",\r\n    },\r\n    tableFirstData: {\r\n      paddingLeft: \"32px !important\",\r\n    },\r\n    container: {\r\n      marginTop: \"7px\",\r\n    },\r\n    containerDark: {\r\n      marginTop: \"7px\",\r\n    },\r\n  },\r\n\r\n  token_table_border_dark: {\r\n    borderBottom: \"1px solid #4a5d94\"\r\n  },\r\n  customTooltip: {\r\n    fontSize: \"13px\"\r\n  },\r\n  customTooltipDarkMode: {\r\n    background: \"#051440\",\r\n    color: \"#adc4e4\",\r\n    fontSize: \"13px\"\r\n  }\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n  const [from, setFrom] = React.useState(0);\r\n  const [amount, setAmount] = React.useState(10);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  const [totalToken, setTotalToken] = React.useState(0);\r\n  const [keywords, setKeywords] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState([]);\r\n  const [visibleTokenCount, setVisibleTokenCount] = React.useState(0);\r\n  const [sortKey, setSortKey] = React.useState(\"\");\r\n  const [sortOrder, setSortOrder] = React.useState(0);\r\n  let { token } = useParams();\r\n\r\n  const [noData, setNoData] = React.useState(true);\r\n  const [snTT, setsnTT] = React.useState(false);\r\n  const [symbolTT, setSymbolTT] = React.useState(false);\r\n  const [nameTT, setNameTT] = React.useState(false);\r\n  const [contractTT, setContractTT] = React.useState(false);\r\n  const [totaSupplyTT, setTotalSupplyTT] = React.useState(false);\r\n  const [totalHolderTT, setTotalHolderTT] = React.useState(false);\r\n  const [transfer24hrTT, setTransfer24hrTT] = React.useState(false);\r\n  const [transfer3dTT, setTransfer3dTT] = React.useState(false);\r\n  let ercvalue = sessionManager.getDataFromCookies(\"xrc20\")\r\n  ercvalue = ercvalue===\"true\"\r\n\r\n  const handleChangePage = (action) => {\r\n    let data = {isERC: ercvalue, searchKey: keywords ? keywords : \"\" };\r\n    if (sortKey && sortOrder)\r\n      data.sortKey = { [sortKey]: sortOrder };\r\n    // if (sortedByHolderCount)\r\n    //     data.sortKey = {holdersCount: sortedByHolderCount};\r\n    if (!keywords)\r\n      setNoData(false);\r\n    if (action === \"first\") {\r\n      setFrom(0);\r\n      data.skip = 0;\r\n      data.limit = amount;\r\n      // sortKey= {[sortKey]: sortOrder};\r\n    }\r\n    if (action === \"prev\") {\r\n      if (from - amount >= 0) {\r\n        let page = from - amount;\r\n        setFrom(page);\r\n        data.skip = page;\r\n        data.limit = amount;\r\n      }\r\n    }\r\n    if (action === \"next\") {\r\n      if (+amount + +from < totalToken) {\r\n        let page = +amount + +from;\r\n        setFrom(page);\r\n        data.skip = page;\r\n        data.limit = amount;\r\n      }\r\n    }\r\n\r\n    if (action === \"last\") {\r\n      let page = (Math.ceil(totalToken / amount) - 1) * amount;\r\n      setFrom(page);\r\n      data.skip = page;\r\n      data.limit = amount;\r\n    }\r\n    getTokenList(data);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    // setFrom(0);\r\n    setAmount(event.target.value);\r\n    // setSortKey(\"holdersCount\");\r\n    // setSortOrder(-1);\r\n    // setFrom(0);\r\n    let data = {\r\n      isERC: ercvalue,\r\n      skip: 0,\r\n      limit: event.target.value,\r\n      searchKey: keywords ? keywords : '',\r\n      sortKey: {[sortKey]: sortOrder}\r\n    };\r\n    if (!keywords)\r\n      setNoData(false);\r\n    getTokenList(data);\r\n  };\r\n  const handleSearchKeyUp = (event) => {\r\n    let searchkeyword = event?.target?.value;\r\n    setSortKey(\"\");\r\n    setSortOrder(0);\r\n    if (searchkeyword?.length > 1) {\r\n      setKeywords(searchkeyword);\r\n      setLoading(false);\r\n      let data = { isERC: ercvalue, skip: 0, limit: amount, searchKey: searchkeyword };\r\n      data['sortKey'] = { \"holdersCount\": -1 }\r\n      getTokenList(data);\r\n    }\r\n    if (searchkeyword?.length === 0) {\r\n      setKeywords(\"\");\r\n      setLoading(false);\r\n      setNoData(false);\r\n      let data = { isERC: ercvalue, skip: from, limit: amount, searchKey: '' };\r\n      data['sortKey'] = { \"holdersCount\": -1 }\r\n      getTokenList(data);\r\n    }\r\n  };\r\n  const getTokenList = async (data) => {\r\n    try {\r\n      const [error, responseData] = await Utility.parseResponse(\r\n        TokenData.getTokenLists(data)\r\n      );\r\n      if (error) return;\r\n      if (responseData) {\r\n        setNoData(false);\r\n        setLoading(false);\r\n        setRows(responseData?.tokens);\r\n        setVisibleTokenCount(responseData?.tokens.length)\r\n        setTotalToken(responseData?.totalCount);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // const getTotalTokenList = async () => {\r\n  //     try {\r\n  //         const [error, responseData] = await Utility.parseResponse(\r\n  //             TokenData.getTotalToken()\r\n  //         );\r\n  //         if (error) return;\r\n  //         if (responseData) {\r\n  //             setNoData(false);\r\n  //             setTotalToken(responseData);\r\n  //         }\r\n  //     } catch (error) {\r\n  //         console.error(error);\r\n  //     }\r\n  // };\r\n  // const SearchTokens = async (data) => {\r\n  //     try {\r\n  //         const [error, responseData] = await Utility.parseResponse(\r\n  //             TokenData.getTokenSearch(data)\r\n  //         );\r\n  //         if (error) return;\r\n  //         if (responseData.total === 0) {\r\n  //             setNoData(true);\r\n  //             setTotalToken(0);\r\n  //             setRows([]);\r\n  //         }\r\n  //\r\n  //         if (responseData.total > 0) {\r\n  //             setNoData(false);\r\n  //             setTotalToken(responseData.total);\r\n  //             setLoading(false);\r\n  //             setRows(responseData.resultSet);\r\n  //             //alert(responseData.length)\r\n  //         }\r\n  //     } catch (error) {\r\n  //         console.error(error);\r\n  //     }\r\n  // };\r\n\r\n  let [anchorEl, setAnchorEl] = React.useState();\r\n  let [isColumnsModalOpen, setColumnsModal] = React.useState(false);\r\n  let isSettingColumnOpen = Boolean(anchorEl);\r\n\r\n  function handleSettingsClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function toggleModal() {\r\n    setColumnsModal(!isColumnsModalOpen);\r\n  }\r\n\r\n  function handleOnClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let unmounted = false;\r\n    let data = {isERC: ercvalue, skip: from, limit: amount, searchKey: token ? token : '' };\r\n    data['sortKey'] = { \"holdersCount\": -1 }\r\n    getTokenList(data);\r\n    // return () => {\r\n    //     unmounted = true;\r\n    // };\r\n    sortTable(\"holdersCount\");\r\n  }, []);\r\n\r\n  function shorten(b, amountL = 10, amountR = 4, stars = 3) {\r\n    return `${b.slice(0, amountL)}${\".\".repeat(stars)}${b.slice(\r\n      b.length - amountR,\r\n      b.length\r\n    )}`;\r\n  }\r\n\r\n  async function sortTable(_sortKey) {\r\n    let data = {isERC: ercvalue, skip: from, limit: amount, searchKey: keywords }\r\n    if (sortKey && sortKey.includes(_sortKey)) {\r\n      data['sortKey'] = { [_sortKey]: -1 * sortOrder }\r\n      setSortOrder(-1 * sortOrder);\r\n    } else {\r\n      setSortKey(_sortKey)\r\n      setSortOrder(-1)\r\n      data['sortKey'] = { [_sortKey]: -1 }\r\n    }\r\n    getTokenList(data);\r\n  }\r\n\r\n  const navigateToTokenDetails = (row) => {\r\n    window.location.href = `/token-data/${row.address}/${row?.symbol ? row?.symbol : \"NA\"\r\n      }`\r\n  }\r\n\r\n  // async function sortByHoldersCount() {\r\n  //     setSortedByTotalSupply(0);\r\n  //     let data = {skip: from, limit: amount, searchKey: keywords}\r\n  //     if (!sortedByHolderCount) {\r\n  //         setSortedByHolderCount(-1);\r\n  //         data['sortKey'] = {\"holdersCount\": -1}\r\n  //     } else if (sortedByHolderCount === -1) {\r\n  //         setSortedByHolderCount(1);\r\n  //         data['sortKey'] = {\"holdersCount\": 1}\r\n  //     } else {\r\n  //         setSortedByHolderCount(-1);\r\n  //         data['sortKey'] = {\"holdersCount\": -1}\r\n  //     }\r\n  //     getTokenList(data);\r\n  // }\r\n\r\n  const TokenTitle = styled.div`\r\n    font-family: Inter;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    color: #2a2a2a;\r\n    margin-bottom: 22px;\r\n    ${({ theme }) => theme === \"dark\" && `\r\n      color: #ffffff;\r\n    `}\r\n      @media (max-width: 1250px) {\r\n        font-size: 18px;\r\n        margin-bottom: 12px;\r\n      }\r\n      @media (max-width: 767px) {\r\n        font-size: 14px;\r\n        color: #252525;\r\n        margin-bottom: 12px;\r\n        ${({ theme }) => theme === \"dark\" && `\r\n          color: #ffffff;\r\n        `}\r\n      }\r\n  `;\r\n\r\n  const NoDataFoundContainer = styled.div`\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-top: 100px;\r\n      gap: 10px;\r\n      @media (min-width: 767px) {\r\n        margin: 100px 0 !important;\r\n      }\r\n    `;\r\n\r\n  return (\r\n    <div style={props?.theme === \"dark\" ? {backgroundColor: \"#091b4e\"} : { backgroundColor: \"#fff\" }} className={props?.theme === \"dark\" ? \"dark-theme-bg\" : \"\"}>\r\n      <Tokensearchbar theme={props.theme === \"dark\" ? \"dark\" : \"\"}/>\r\n      <Responsive>\r\n        <form\r\n          method=\"post\"\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        >\r\n\r\n          <Column\r\n            className={\r\n              \"responsive-table-width-token-list token-list-tab_11 search-container\"\r\n            }\r\n          >\r\n            {window.innerWidth >= 768 ?\r\n              <>\r\n                <TokenTitle theme={props?.theme}>\r\n                  <div className=\"display-flex\">Tokens\r\n                   {ercvalue ? <div className={classes.tokenTag}>XRC-721</div> : <div className={classes.tokenTag}>XRC-20</div>}\r\n                  </div>\r\n                </TokenTitle>\r\n                <Row justifyContent=\"space-between\" alignItems=\"center\">\r\n                  <div className={props?.theme === \"dark\" ? \"searchelement-input-dark input-searchelement_11\" : \"searchelement-input input-searchelement_11\"}>\r\n                    <img\r\n                      style={{\r\n                        width: 18,\r\n                        height: 18,\r\n                        marginRight: 2,\r\n                      }}\r\n                      src={\"/images/Search.svg\"}\r\n                    />\r\n\r\n                    <input\r\n                      onChange={(e) => {\r\n\r\n                        handleSearchKeyUp(e);\r\n\r\n                      }}\r\n                      // onChange={(e) => {\r\n                      //   if (e.target.value == \"\") {\r\n                      //     handleSearchKeyUp(e);\r\n                      //   }\r\n                      // }}\r\n                      id=\"tokenSearch\"\r\n                      className={props?.theme === \"dark\" ? \"account-searchbar-dark\" : \"account-searchbar\"}\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"display-none-mobile display-flex flex-direction-column w-100 margin-0 justify-content-end align-items-end\">\r\n                    <img\r\n                      onClick={handleSettingsClick}\r\n                      className=\"h-20 w-20-px cursor-pointer m-r-9\"\r\n                      src=\"/images/settings.svg\"\r\n                    />\r\n                    <ConfigureColumnPopOver\r\n                      isOpen={isSettingColumnOpen}\r\n                      anchorEl={anchorEl}\r\n                      handleOnClose={handleOnClose}\r\n                      tableColumns={props.state.tableColumns}\r\n                      toggleTableColumns={props.toggleTableColumns}\r\n                      theme={props.theme}\r\n                    />\r\n                  </div>\r\n                  <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\r\n                    <img\r\n                      onClick={toggleModal}\r\n                      className=\"h-20 w-20-px cursor-pointer\"\r\n                      src=\"/images/settings.svg\"\r\n                    />\r\n                    <ConfigureColumnsModal\r\n                      isOpen={isColumnsModalOpen}\r\n                      onModalClose={toggleModal}\r\n                      tableColumns={props.state.tableColumns}\r\n                      toggleTableColumns={props.toggleTableColumns}\r\n                      theme={props.theme}\r\n                    />\r\n                  </div>\r\n                </Row></> : (<>\r\n                  <Row justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <TokenTitle theme={props?.theme}>Tokens</TokenTitle>\r\n                    <div className=\"display-none-mobile display-flex flex-direction-column w-100 margin-0 justify-content-end align-items-end\">\r\n                      <img\r\n                        onClick={handleSettingsClick}\r\n                        className=\"h-16 w-16-px cursor-pointer m-t_-7\"\r\n                        src=\"/images/settings.svg\"\r\n                      />\r\n                      <ConfigureColumnPopOver\r\n                        isOpen={isSettingColumnOpen}\r\n                        anchorEl={anchorEl}\r\n                        handleOnClose={handleOnClose}\r\n                        tableColumns={props.state.tableColumns}\r\n                        toggleTableColumns={props.toggleTableColumns}\r\n                      />\r\n                    </div>\r\n                    <div className=\"display-none-tab display-none-desktop display-flex flex-direction-column justify-content-center\">\r\n                      <img\r\n                        onClick={toggleModal}\r\n                        className=\"h-16 w-16-px cursor-pointer m-t_-7\"\r\n                        src=\"/images/settings.svg\"\r\n                      />\r\n                      <ConfigureColumnsModal\r\n                        isOpen={isColumnsModalOpen}\r\n                        onModalClose={toggleModal}\r\n                        tableColumns={props.state.tableColumns}\r\n                        toggleTableColumns={props.toggleTableColumns}\r\n                      />\r\n                    </div>\r\n                  </Row>\r\n                  <div className=\"searchelement-input input-searchelement_11\">\r\n                    <img\r\n                      style={{\r\n                        width: 18,\r\n                        height: 18,\r\n                        marginRight: 2,\r\n                        marginTop: -1,\r\n                      }}\r\n                      src={\"/images/Search.svg\"}\r\n                    />\r\n\r\n                    <input\r\n                      onChange={(e) => {\r\n\r\n                        handleSearchKeyUp(e);\r\n\r\n                      }}\r\n                      // onChange={(e) => {\r\n                      //   if (e.target.value == \"\") {\r\n                      //     handleSearchKeyUp(e);\r\n                      //   }\r\n                      // }}\r\n                      id=\"tokenSearch\"\r\n                      className=\"account-searchbar\"\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                    />\r\n                  </div>\r\n                </>)}\r\n\r\n          </Column>\r\n        </form>\r\n        {/* </div> */}\r\n        {/* </div> */}\r\n\r\n        <br />\r\n\r\n        <Paper\r\n          className={\"responsive-table-width-token-list token-list-tab_11\"}\r\n          style={{\r\n            borderRadius: \"0.875rem\",\r\n            // marginLeft: \"18%\",\r\n            // marginRight: \"18%\",\r\n          }}\r\n          elevation={0}\r\n        >\r\n          <TableContainer\r\n            className={props?.theme === \"dark\" ? classes.containerDark : classes.container}\r\n            id={props?.theme === \"dark\" ? \"container-table-token-dark\" : \"container-table-token\"}\r\n            style={props?.theme === \"dark\" ? {\r\n              borderRadius: \"0.75rem\",\r\n              // backgroundColor: \"#ffffff\",\r\n              boxShadow: \"0 0.063rem 0.625rem 0 rgba(0 0, 0, 0.,1)\",\r\n            } : {\r\n              borderRadius: \"0.75rem\",\r\n              border: \"solid 0.063rem #e3e7eb\",\r\n              // backgroundColor: \"#ffffff\",\r\n              boxShadow: \"0 0.063rem 0.625rem 0 rgba(0 0, 0, 0.,1)\",\r\n            }}\r\n          >\r\n            <Table style={{ borderBottom: \"none\" }}>\r\n              <TableHead style={{ borderBottom: \"0.063rem solid #e5e8f0\" }}>\r\n                <TableRow>\r\n                  <TableCell\r\n                    style={{ border: \"none\", }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2\" : \"tablehead-token-details\"}>\r\n                      #\r\n                      {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.SI_NO}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                      <Tooltip \r\n                      open={snTT}\r\n                      onOpen={() => setsnTT(true)}\r\n                      onClose={() => setsnTT(false)}\r\n                      placement=\"top\" title={messages.SI_NO}\r\n                      classes={{\r\n                        tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                      }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                          onClick={() => setsnTT(!snTT)}\r\n                        />\r\n                      </Tooltip>}\r\n                    </span>\r\n                  </TableCell>\r\n                  {props?.state?.tableColumns[\"Symbol\"].isActive && (\r\n                    <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                      <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"symbol\")}>\r\n                        Symbol\r\n                        {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.SYMBOL}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                        <Tooltip \r\n                        open={symbolTT}\r\n                      onOpen={() => setSymbolTT(true)}\r\n                      onClose={() => setSymbolTT(false)}\r\n                        placement=\"top\" title={messages.SYMBOL}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                            onClick={() => setSymbolTT(!symbolTT)}\r\n                          />\r\n                        </Tooltip>}\r\n                        {sortKey && sortKey === \"symbol\" ? (\r\n                          sortOrder === -1 ? <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          /> :\r\n                            <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/see-more.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon rotate-180\"\r\n                            />) : \"\"}\r\n                      </span>\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                    <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"tokenName\")}>\r\n                      Name\r\n                      {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.NAME}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                      <Tooltip \r\n                      open={nameTT}\r\n                      onOpen={() => setNameTT(true)}\r\n                      onClose={() => setNameTT(false)}\r\n                      placement=\"top\" title={messages.NAME}\r\n                      classes={{\r\n                        tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                      }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                          onClick={() => setNameTT(!nameTT)}\r\n                        />\r\n                      </Tooltip>}\r\n                      {sortKey && sortKey === \"tokenName\" ? (\r\n                        sortOrder === -1 ? <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        /> :\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon rotate-180\"\r\n                          />) : \"\"}\r\n                    </span>\r\n                  </TableCell>\r\n                  {/* {props?.state?.tableColumns[\"Type\"].isActive && (\r\n                                    <TableCell\r\n                                        style={{border: \"none\", whiteSpace: \"nowrap\"}}\r\n                                        align=\"left\"\r\n                                    >\r\n                    <span className={\"tablehead-token-details\"}>\r\n                      Type\r\n                      <Tooltip placement=\"top\" title={messages.TOKEN_TYPE}>\r\n                        <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>\r\n                    </span>\r\n                                    </TableCell>\r\n                                )} */}\r\n                  {!ercvalue  && <TableCell style={{ border: \"none\" }} align=\"left\">\r\n                    <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"address\")} >\r\n                      Contract\r\n                      {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.CONTRACT}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                      <Tooltip \r\n                      open={contractTT}\r\n                      onOpen={() => setContractTT(true)}\r\n                      onClose={() => setContractTT(false)}\r\n                      placement=\"top\" title={messages.CONTRACT}\r\n                      classes={{\r\n                        tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                      }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                          onClick={() => setContractTT(!contractTT)}\r\n                        />\r\n                      </Tooltip>}\r\n                      {sortKey && sortKey === \"address\" ? (\r\n                        sortOrder === -1 ? <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        /> :\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon rotate-180\"\r\n                          />) : \"\"}\r\n                    </span>\r\n                  </TableCell>}\r\n\r\n                  {!ercvalue  && <TableCell\r\n                    style={{ border: \"none\", whiteSpace: \"nowrap\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"totalSupply\")}>\r\n                      Total Supply\r\n                      {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.TOKEN_TOTAL_SUPPLY}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                      <Tooltip\r\n                      open={totaSupplyTT}\r\n                      onOpen={() => setTotalSupplyTT(true)}\r\n                      onClose={() => setTotalSupplyTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.TOKEN_TOTAL_SUPPLY}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                          onClick={() => setTotalSupplyTT(!totaSupplyTT)}\r\n                        />\r\n                      </Tooltip>}\r\n                      {sortKey && sortKey === \"totalSupply\" ? (\r\n                        sortOrder === -1 ? <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/see-more.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        /> :\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon rotate-180\"\r\n                          />) : \"\"}\r\n                    </span>\r\n                  </TableCell>}\r\n                  {ercvalue  && <TableCell\r\n                    style={{ border: \"none\", whiteSpace: \"nowrap\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"}>\r\n                      Transfers (24h)\r\n                      {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.TOKEN_TRANSFER_24_HOURS}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                      <Tooltip\r\n                      open={transfer24hrTT}\r\n                      onOpen={() => setTransfer24hrTT(true)}\r\n                      onClose={() => setTransfer24hrTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.TOKEN_TRANSFER_24_HOURS}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                          onClick={() => setTransfer24hrTT(!transfer24hrTT)}\r\n                        />\r\n                      </Tooltip>}\r\n                    </span>\r\n                  </TableCell>}\r\n                  {!ercvalue  && (props?.state?.tableColumns[\"Total Holders\"].isActive && (\r\n                    <TableCell\r\n                      style={{ border: \"none\", whiteSpace: \"nowrap\" }}\r\n                      align=\"left\"\r\n                    >\r\n                      <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"} onClick={() => sortTable(\"holdersCount\")}>\r\n                        Total Holders\r\n                        {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.HOLDER}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                        <Tooltip \r\n                        open={totalHolderTT}\r\n                      onOpen={() => setTotalHolderTT(true)}\r\n                      onClose={() => setTotalHolderTT(false)}\r\n                        placement=\"top\" title={messages.HOLDER}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                        >\r\n                          <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/info.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                            onClick={() => setTotalHolderTT(!totalHolderTT)}\r\n                          />\r\n                        </Tooltip>}\r\n                        {sortKey && sortKey === \"holdersCount\" ? (\r\n                          sortOrder === -1 ? <img\r\n                            alt=\"question-mark\"\r\n                            src=\"/images/see-more.svg\"\r\n                            height={\"14px\"}\r\n                            className=\"tooltipInfoIcon\"\r\n                          /> :\r\n                            <img\r\n                              alt=\"question-mark\"\r\n                              src=\"/images/see-more.svg\"\r\n                              height={\"14px\"}\r\n                              className=\"tooltipInfoIcon rotate-180\"\r\n                            />) : \"\"}\r\n                      </span>\r\n                    </TableCell>\r\n                  ))}\r\n                  {ercvalue  && <TableCell\r\n                    style={{ border: \"none\", whiteSpace: \"nowrap\" }}\r\n                    align=\"left\"\r\n                  >\r\n                    <span className={props?.theme === \"dark\" ? \"tablehead-token-details-dark-2 cursor-pointer\" : \"tablehead-token-details cursor-pointer\"}>\r\n                      Transfers (3d)\r\n                      {window.innerWidth > 1024 ?\r\n                      <Tooltip\r\n                        placement=\"top\"\r\n                        title={messages.TOKEN_TRANSFER_3_DAYS}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                        />\r\n                      </Tooltip>:\r\n                      <Tooltip\r\n                      open={transfer3dTT}\r\n                      onOpen={() => setTransfer3dTT(true)}\r\n                      onClose={() => setTransfer3dTT(false)}\r\n                        placement=\"top\"\r\n                        title={messages.TOKEN_TRANSFER_3_DAYS}\r\n                        classes={{\r\n                          tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"question-mark\"\r\n                          src=\"/images/info.svg\"\r\n                          height={\"14px\"}\r\n                          className=\"tooltipInfoIcon\"\r\n                          onClick={() => setTransfer3dTT(!transfer3dTT)}\r\n                        />\r\n                      </Tooltip>}\r\n                    </span>\r\n                  </TableCell>}\r\n                </TableRow>\r\n              </TableHead>\r\n              {isLoading == true ? (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell style={{ border: \"none\" }} colspan=\"8\">\r\n                      <div className=\"loader-token-list\">\r\n                        <Loader />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                noData == false && (\r\n                  <TableBody>\r\n                    {rows?.map((row, index) => {\r\n                      let totalsupply = utility.divideByDecimalValue(\r\n                        row?.totalSupply,\r\n                        row?.decimals\r\n                      );\r\n                      \r\n                      const supply =\r\n                      totalsupply >= 1\r\n                          ? format({})(\r\n\r\n                            utility.convertToInternationalCurrencySystem(\r\n                              Number(totalsupply)\r\n                            )\r\n                          )\r\n                          : utility.divideByDecimalValue(\r\n                            row?.totalSupply,\r\n                            row?.decimals\r\n                          );\r\n                      var supply1 = supply.toString().split(\".\")[0];\r\n                      var supply2 = supply.toString().split(\".\")[1];\r\n                      var regex = new RegExp(\"([0-9]+)|([a-zA-Z]+)\", \"g\");\r\n                      var splittedArray = supply2?.match(regex);\r\n\r\n                      var supply4 =\r\n                        splittedArray && splittedArray.length\r\n                          ? splittedArray[0]\r\n                          : 0;\r\n                      var text =\r\n                        splittedArray && splittedArray.length\r\n                          ? splittedArray[1]\r\n                          : 0;\r\n                      let tokenName =\r\n                        row?.tokenName?.length <= 15 ||\r\n                          row?.tokenName?.length == 0\r\n                          ? row?.tokenName\r\n                          : shorten(row?.tokenName, 15, 0, 3);\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row._id}\r\n                          onClick={() => navigateToTokenDetails(row)}\r\n                        >\r\n                          <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\">\r\n                            {index + 1}\r\n                          </TableCell>\r\n\r\n                          {props?.state?.tableColumns[\"Symbol\"].isActive && (\r\n                            <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\">\r\n                              {row?.tokenImage ?\r\n                                <img\r\n                                  style={{ height: \"20px\", width: \"20px\" }}\r\n                                  src={row?.tokenImage}\r\n                                ></img> :\r\n                                <img\r\n                                  style={{ height: \"20px\", width: \"20px\" }}\r\n                                  src={\"/images/XRC20-Icon.svg\"}\r\n                                ></img>}\r\n                              &nbsp;{row.symbol}\r\n                            </TableCell>\r\n                          )}\r\n\r\n                          <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\" style={{ whiteSpace: \"nowrap\" }}>\r\n                            {tokenName}\r\n                          </TableCell>\r\n                          {/* {props?.state?.tableColumns[\"Type\"].isActive && (\r\n                                                    <TableCell id=\"td\">{row.type}</TableCell>\r\n                                                )} */}\r\n\r\n                          {!ercvalue  && <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"}>\r\n                            <a\r\n                              className={props?.theme === \"dark\" ? \"token-details-address-link-dark\" : \"token-details-address-link\"}\r\n                              href={`/token-data/${row.address}/${row?.symbol ? row?.symbol : \"NA\"\r\n                                }`}\r\n                            >\r\n                              {shorten(row.address)}\r\n                            </a>\r\n                          </TableCell>}\r\n\r\n\r\n                          {!ercvalue  && <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\" style={{ paddingleft: \"15\" }}>\r\n                            <Tooltip\r\n                              placement=\"top\"\r\n                              title={format({})(\r\n                                totalsupply >= 1\r\n                                  ? parseFloat(totalsupply)\r\n                                  : totalsupply == 0\r\n                                    ? parseFloat(totalsupply)\r\n                                    : totalsupply\r\n                              )}\r\n                              classes={{\r\n                                tooltip: props.theme === \"dark\" ? classes.customTooltipDarkMode : classes.customTooltip,\r\n                              }}\r\n                            >\r\n                              <span>\r\n                                {supply4 === 0 || supply4 == null ? (\r\n                                  <span className=\"tabledata\">{supply1}</span>\r\n                                ) : (\r\n                                  <span className=\"tabledata\">\r\n                                    {supply1}\r\n                                    {\".\"}\r\n                                    <span style={{ color: \"#9FA9BA\" }}>\r\n                                      {supply4}\r\n                                    </span>\r\n                                    {text}\r\n                                  </span>\r\n                                )}\r\n                              </span>\r\n                            </Tooltip>\r\n                          </TableCell>}\r\n                          {ercvalue  && \r\n                              <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\" style={{ paddingleft: \"15\" }}>\r\n                                {format({})(row.transfers.last24Hour)}\r\n                              </TableCell>\r\n                            }\r\n                          {!ercvalue  && (props?.state?.tableColumns[\"Total Holders\"]\r\n                            .isActive && (\r\n                              <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\" style={{ paddingleft: \"15\" }}>\r\n                                {format({})(row.holdersCount)}\r\n                              </TableCell>\r\n                            ))}\r\n                            {ercvalue  && \r\n                              <TableCell className={props?.theme === \"dark\" ? classes.token_table_border_dark : \"\"} id=\"td\" style={{ paddingleft: \"15\" }}>\r\n                                {format({})(row.transfers.last3days)}\r\n                              </TableCell>\r\n                            }\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                )\r\n              )}\r\n              {/* {noData == true && (\r\n              <TableBody>\r\n                <TableCell id=\"td\" style={{ borderBottom: \"none\" }}>\r\n                  <span\r\n                    style={{ textAlign: \"center\", color: \"#2a2a2a\" }}\r\n                    className=\"tabledata\"\r\n                  >\r\n                    No data found.\r\n                  </span>\r\n                </TableCell>\r\n              </TableBody>\r\n            )} */}\r\n            </Table>\r\n            {noData == true && !isLoading ? (\r\n              <NoDataFoundContainer>\r\n                <img\r\n                  src={require(\"../../../src/assets/images/XDC-Alert.svg\")}\r\n                ></img>\r\n\r\n                <div style={{ color: \"#c6cbcf\" }}>No Tokens found</div>\r\n              </NoDataFoundContainer>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </TableContainer>\r\n\r\n          {/* <Divider className={classes.divider}/>*/}\r\n        </Paper>\r\n\r\n        <Pagination theme={props?.theme}>\r\n          <LeftPagination>\r\n            {!noData == true && !isLoading ? (<>\r\n              <Show theme={props?.theme}>\r\n                Show\r\n              </Show>\r\n              <PageSelector value={amount}\r\n                height={30}\r\n                handler={handleChangeRowsPerPage} \r\n                theme={props?.theme}\r\n              />\r\n              <Record theme={props?.theme}>\r\n                Records\r\n              </Record></>) : (\"\")}\r\n          </LeftPagination>\r\n\r\n          <RightPagination>\r\n            <div\r\n              className={\r\n                from === 0 \r\n                  ? props?.theme === \"dark\" ? \"firstbox-contract-dark disabled\" : \"firstbox-contract disabled\"\r\n                  : props?.theme === \"dark\" ? \"firstbox-contract-dark\" : \"firstbox-contract\"\r\n              }\r\n              onClick={() => handleChangePage(\"first\")}\r\n            >\r\n              <button\r\n                style={props?.theme === \"dark\" ? {} : { backgroundColor: \"white\" }}\r\n                className={props?.theme === \"dark\" ? \"first-contract-dark\" : \"first-contract\"}\r\n              >\r\n                First\r\n              </button>\r\n            </div>\r\n            <div\r\n              className={\r\n                from === 0\r\n                  ? props?.theme === \"dark\" ? \"previousbox-contract-dark disabled\" : \"previousbox-contract disabled\"\r\n                  : props?.theme === \"dark\" ? \"previousbox-contract-dark\" : \"previousbox-contract\"\r\n              }\r\n              onClick={() => handleChangePage(\"prev\")}\r\n            >\r\n              <img className=\"navigation-arrow rotate-180\" src={\"/images/next.svg\"} />\r\n\r\n              {/* <p className=\"path-contract\">{\"<\"}</p> */}\r\n            </div>\r\n            <div className={props?.theme === \"dark\" ? \"pagebox-contract-dark\" : \"pagebox-contract\"}>\r\n              <p className={props?.theme === \"dark\" ? \"Page-1-of-5-contract-dark\" : \"Page-1-of-5-contract\"}>\r\n                Page{\" \"}\r\n                {Math.ceil(totalToken / amount) -\r\n                  Math.ceil((totalToken - from) / amount) +\r\n                  1}{\" \"}\r\n                of {Math.ceil(totalToken / amount)}\r\n              </p>\r\n            </div>\r\n            <div\r\n              className={\r\n                from + visibleTokenCount === totalToken\r\n                \r\n                  ? props?.theme === \"dark\" ? \"nextbox-contract-dark disabled\" : \"nextbox-contract disabled\"\r\n                  : props?.theme === \"dark\" ? \"nextbox-contract-dark\" : \"nextbox-contract\"\r\n              }\r\n              onClick={() => handleChangePage(\"next\")}\r\n            >\r\n              <img className=\"navigation-arrow\" src={\"/images/next.svg\"} />\r\n            </div>\r\n            <div\r\n              className={\r\n                from + visibleTokenCount === totalToken\r\n                  ? props?.theme === \"dark\" ? \"lastbox-contract-dark disabled\" : \"lastbox-contract disabled\"\r\n                  : props?.theme === \"dark\" ? \"lastbox-contract-dark\" : \"lastbox-contract\"\r\n              }\r\n              onClick={() => handleChangePage(\"last\")}\r\n            >\r\n              <button\r\n                style={props?.theme === \"dark\" ? {} : { backgroundColor: \"white\" }}\r\n                className={props?.theme === \"dark\" ? \"Last-contract-dark\" : \"last-contract\"}\r\n              >\r\n                Last\r\n              </button>\r\n            </div>\r\n          </RightPagination>\r\n        </Pagination>\r\n      </Responsive>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/XDC-Alert.86b69beb.svg\";","import Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  dropdownStyle: {\r\n    background: '#283966 !important',\r\n    color: \"#ffffff !important\",\r\n  }\r\n});\r\n\r\nconst PageSelect = styled(Select)`\r\n  width: 100%;\r\n  height: ${({ height }) => height}px;\r\n  margin: 0 10px;\r\n\r\n  legend {\r\n    float: left;\r\n  }\r\n`;\r\nconst PageSelectDark = styled(Select)`\r\n  width: 100%;\r\n  height: ${({ height }) => height}px;\r\n  margin: 0 10px;\r\n  background-color: #283966;\r\n  border: solid 1px #3552a5;\r\n  legend {\r\n    float: left;\r\n  }\r\n`;\r\nconst PageSelector = ({ value, handler, height = 35, theme }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {theme === \"dark\" ? (\r\n        <PageSelectDark\r\n          value={value}\r\n          onChange={(event) => handler(event)}\r\n          displayEmpty\r\n          height={height}\r\n          MenuProps={{ classes: { paper: classes.dropdownStyle } }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Select</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={25}>25</MenuItem>\r\n          <MenuItem value={50}>50</MenuItem>\r\n          <MenuItem value={75}>75</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n        </PageSelectDark>\r\n      ) : (\r\n        <PageSelect\r\n          value={value}\r\n          onChange={(event) => handler(event)}\r\n          displayEmpty\r\n          height={height}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Select</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={25}>25</MenuItem>\r\n          <MenuItem value={50}>50</MenuItem>\r\n          <MenuItem value={75}>75</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n        </PageSelect>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default PageSelector;\r\n","import { httpService } from \"../managers/httpService\";\r\nimport { httpConstants } from \"../constants\";\r\n\r\nexport default {\r\n  CoinMarketExchangeForToken,\r\n  getTokenLists,\r\n  getTotalToken,\r\n  getSomeDaysHolders,\r\n  getTokenSearch,\r\n  getHolderDetailsUsingAddressforToken,\r\n  getTransferTransactionDetailsUsingHash,\r\n  getTotalTransferTransactionsForToken,\r\n  getListOfTransferTransactionsForToken,\r\n  getListOfHoldersForToken,\r\n  getListOfTokenForAddress,getTokenTransactions,\r\n};\r\nfunction getHeaders() {\r\n  return {\r\n    \"Content-Type\": httpConstants.CONTENT_TYPE.APPLICATION_JSON,\r\n    \"X-API-key\": process.env.REACT_APP_X_API_KEY,\r\n  };\r\n}\r\n\r\nasync function CoinMarketExchangeForToken(data) {\r\n  let url = process.env.REACT_APP_GET_TOKEN_MARKETCAP + \"/\" + data;\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenLists(data) {\r\n  let url = process.env.REACT_APP_ACCOUNT_SERVICE_BASEURL + httpConstants.API_END_POINT.GET_TOKEN_LIST;//\"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage;\r\n  // let url = \"http://localhost:3007/getListOfTokens\";\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getSomeDaysHolders(path, data) {\r\n  let url = process.env.REACT_APP_GET_SOME_DAYS_HOLDERS + path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTokenSearch(data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TOKEN_SEARCH +\r\n    \"?skip=\" +\r\n    Math.ceil(data.pageNum) +\r\n    \"&limit=\" +\r\n    data.perpage +\r\n    \"&data=\" +\r\n    data.searchkey;\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getTotalToken() {\r\n  let url = process.env.REACT_APP_GET_TOTAL_TOKEN;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      ) {\r\n        return Promise.reject();\r\n      }\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nasync function getListOfTransferTransactionsForToken(data) {\r\n  // let url = \"http://localhost:3005/getListOfTransferTransactionsForToken/\"+data.addr;\r\n  let url = process.env.REACT_APP_GET_LIST_OF_TRANSFER_FOR_TOKEN + data.addr;\r\n  delete data.addr;\r\n    //+ \"?skip=\" + Math.ceil(data.pageNum) + \"&limit=\" + data.perpage + (data.searchValue ? \"&searchValue=\" + data.searchValue : \"\") + (data.startDate ? \"&startDate=\" + data.startDate : \"\");\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getTokenTransactions(data) {\r\n  let url = process.env.REACT_APP_GET_TOKEN_TRANSACTION + data.address;\r\n   // let url = \"http://localhost:3007/getListOfHoldersForToken/\"+data.address;\r\n   delete data.address;\r\n return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n   .then((response) => {\r\n     if (\r\n       !response.success ||\r\n       response.responseCode !== 200 ||\r\n       !response.responseData ||\r\n       response.responseData.length === 0\r\n     )\r\n       return Promise.reject();\r\n     return Promise.resolve(response.responseData);\r\n   })\r\n   .catch(function (err) {\r\n     return Promise.reject(err);\r\n   });\r\n}\r\nasync function getTotalTransferTransactionsForToken(data) {\r\n    let url = process.env.REACT_APP_GET_TOTAL_TRANSFER_FOR_TOKEN + data.addr + (data.searchValue ? \"?searchValue=\" + data.searchValue : \"\")\r\n        + (data.startDate ? (data.searchValue ? \"&startDate=\" : \"?startDate=\") + data.startDate : \"\");\r\n\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), {}, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getListOfHoldersForToken(data) {\r\n   let url = process.env.REACT_APP_GET_LIST_OF_HOLDERS_FOR_TOKEN + data.address;\r\n    // let url = \"http://localhost:3007/getListOfHoldersForToken/\"+data.address;\r\n    delete data.address;\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getTransferTransactionDetailsUsingHash(path, data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_TRANSFER_TRANSACTION_DETAIL_USING_ADDRESS + path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getListOfTokenForAddress(path, data) {\r\n  let url =\r\n    process.env.REACT_APP_GET_LIST_OF_TOKENS_FOR_ADDRESS+ path;\r\n  return httpService(httpConstants.METHOD_TYPE.GET, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\nasync function getHolderDetailsUsingAddressforToken(data) {\r\n  let url = process.env.REACT_APP_GET_HOLDER_DETAIL_USING_ADDRESS_FOR_TOKEN\r\n  // let url = \"http://localhost:3007/getHolderDetailsUsingAddress\"\r\n  return httpService(httpConstants.METHOD_TYPE.POST, getHeaders(), data, url)\r\n    .then((response) => {\r\n      if (\r\n        !response.success ||\r\n        response.responseCode !== 200 ||\r\n        !response.responseData ||\r\n        response.responseData.length === 0\r\n      )\r\n        return Promise.reject();\r\n      return Promise.resolve(response.responseData);\r\n    })\r\n    .catch(function (err) {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { SettingsInputComponentTwoTone } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperWidthSm: {\r\n    maxWidth: \"320px\",\r\n    width: \"100%\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  customTooltip: {\r\n    fontSize: \"13px\",\r\n  },\r\n  customTooltipDarkMode: {\r\n    background: \"#051440\",\r\n    color: \"#adc4e4\",\r\n    fontSize: \"13px\",\r\n  },\r\n}));\r\nfunction ConfigureColumnsPopOver(props) {\r\n  const classes = useStyles();\r\n  const [openTT, setOpenTT] = useState(false);\r\n  const [keyValue, setKeyValue] = useState(\"\");\r\n\r\n  const handleOpenTT = (key) => {\r\n    setKeyValue(key);\r\n    setOpenTT(true);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      classes={{ paperWidthSm: classes.paperWidthSm }}\r\n      open={props.isOpen}\r\n      anchorEl={props.anchorEl}\r\n      onClose={props.handleOnClose}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <div\r\n        className={props.theme === \"dark\" ? \"w-320 table-btn-bg-dark\" : \"w-320\"}\r\n      >\r\n        <div\r\n          className={\r\n            props.theme === \"dark\"\r\n              ? \"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center fc-white\"\r\n              : \"fs-16 fw-bold p-t-15 p-b-15 display-flex justify-content-center\"\r\n          }\r\n        >\r\n          Configure Columns\r\n        </div>\r\n        <div className=\"margin-0 m-b-15 b-t-1\" />\r\n        <div className=\"p-l-15 p-r-15\">\r\n          {props.tableColumns &&\r\n            Object.keys(props.tableColumns).map((key) => {\r\n              if (key !== \"Balance\")\r\n                return (\r\n                  <div className=\"display-flex justify-content-between p-b-25\">\r\n                    <div className=\"display-flex\">\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={props.tableColumns[key].toolTipText}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className=\"tooltipInfoIconConfigDesk\"\r\n                            src=\"/images/info.svg\"\r\n                          ></img>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={openTT && key === keyValue}\r\n                          onOpen={() => setOpenTT(true)}\r\n                          onClose={() => setOpenTT(false)}\r\n                          align=\"right\"\r\n                          title={props.tableColumns[key].toolTipText}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className=\"tooltipInfoIconConfigDesk\"\r\n                            src=\"/images/info.svg\"\r\n                            onClick={() => handleOpenTT(key)}\r\n                          ></img>\r\n                        </Tooltip>\r\n                      )}\r\n                      <div\r\n                        className={\r\n                          props.theme === \"dark\" ? \"p-l-5 fc-white\" : \"p-l-5\"\r\n                        }\r\n                      >\r\n                        {key}\r\n                      </div>\r\n                    </div>\r\n                    <div onClick={() => props.toggleTableColumns(key)}>\r\n                      {props.tableColumns[key].isActive ? (\r\n                        <img className=\"\" src=\"/images/active-switch.svg\" />\r\n                      ) : (\r\n                        <img className=\"\" src=\"/images/inactive-switch.svg\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default ConfigureColumnsPopOver;\r\n","import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperWidthSm: {\r\n    maxWidth: \"320px\",\r\n    width: \"100%\",\r\n    borderRadius: \"8px\",\r\n    margin: \"20px\",\r\n  },\r\n  customTooltip: {\r\n    fontSize: \"13px\",\r\n  },\r\n  customTooltipDarkMode: {\r\n    background: \"#051440\",\r\n    color: \"#adc4e4\",\r\n    fontSize: \"13px\",\r\n  },\r\n}));\r\n\r\nfunction ConfigureColumnsModal(props) {\r\n  const classes = useStyles();\r\n  const [openTT, setOpenTT] = useState(false);\r\n  const [keyValue, setKeyValue] = useState(\"\");\r\n\r\n  const handleOpenTT = (key) => {\r\n    setKeyValue(key);\r\n    setOpenTT(true);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      className=\"\"\r\n      classes={{ paperWidthSm: classes.paperWidthSm }}\r\n      open={props.isOpen}\r\n      onClose={props.onModalClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <div\r\n        className={props.theme === \"dark\" ? \"w-320 table-btn-bg-dark\" : \"w-320\"}\r\n      >\r\n        <div\r\n          className={\r\n            props.theme\r\n              ? \"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center fc-white\"\r\n              : \"fs-14 fw-bold p-t-15 p-b-15 display-flex justify-content-center\"\r\n          }\r\n        >\r\n          Configure Columns\r\n        </div>\r\n        <div className=\"margin-0 m-b-15 b-t-1\" />\r\n        <div className=\"p-l-15 p-r-15\">\r\n          {props.tableColumns &&\r\n            Object.keys(props.tableColumns).map((key) => {\r\n              if (key !== \"Balance\")\r\n                return (\r\n                  <div className=\"display-flex justify-content-between p-b-25\">\r\n                    <div className=\"display-flex\">\r\n                      {window.innerWidth > 1024 ? (\r\n                        <Tooltip\r\n                          align=\"right\"\r\n                          title={props.tableColumns[key].toolTipText}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          {console.log(\"value\", props.tableColumns[key])}\r\n                          <img\r\n                            className=\"tooltipInfoIconConfigMob\"\r\n                            src=\"/images/info.svg\"\r\n                          ></img>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip\r\n                          open={openTT && key === keyValue}\r\n                          onOpen={() => setOpenTT(true)}\r\n                          onClose={() => setOpenTT(false)}\r\n                          align=\"right\"\r\n                          title={props.tableColumns[key].toolTipText}\r\n                          placement=\"top\"\r\n                          classes={{\r\n                            tooltip:\r\n                              props.theme === \"dark\"\r\n                                ? classes.customTooltipDarkMode\r\n                                : classes.customTooltip,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className=\"tooltipInfoIconConfigMob\"\r\n                            src=\"/images/info.svg\"\r\n                            onClick={() => handleOpenTT(key)}\r\n                          ></img>\r\n                        </Tooltip>\r\n                      )}\r\n                      <div\r\n                        className={props.theme ? \"p-l-12 fc-white\" : \"p-l-12\"}\r\n                      >\r\n                        {key}\r\n                      </div>\r\n                    </div>\r\n                    <div onClick={() => props.toggleTableColumns(key)}>\r\n                      {props.tableColumns[key].isActive ? (\r\n                        <img className=\"\" src=\"/images/active-switch.svg\" />\r\n                      ) : (\r\n                        <img className=\"\" src=\"/images/inactive-switch.svg\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ConfigureColumnsModal;\r\n"],"sourceRoot":""}